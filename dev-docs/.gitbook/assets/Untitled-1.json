{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Prio Distributor API V3.8 (Preview)",
    "description" : "# Getting Started\n![Uptime](https://badgen.net/uptime-robot/status/m785487968-fe65ff8817eb8d24c10c8d99) ![Uptime Robot ratio (30 days)](https://img.shields.io/uptimerobot/ratio/m785487968-fe65ff8817eb8d24c10c8d99) <!--- ![pipeline status](https://gitlab.fullserviceplatform.com/apis/distributor-api/badges/master/pipeline.svg) --> ![Maintenance](https://img.shields.io/badge/Maintained-yes-green.svg)\n\n  ## About\n  \n  > This product is in **Preview**. \n  >\n  > Preview products and features might be incomplete, unstable, change in backward-incompatible ways, and are not guaranteed to be released. No SLAs or technical support commitments are provided for these. Previews are intended for use in test environments only.\n  \n  This document describes the Prio Distributor API, powered by a platform through which products can be distributed for services and venues. This API allows to obtain information about our inventory, check real-time availability and make bookings. Every booking will result in valid tickets with which users have access to the services and venues. Access is allowed when a valid passcode gets scanned and redeemed by the supplier.\n\n  The Prio Distributor API can be divided into four parts:\n\n  * Content APIs: Exposes our product inventory such as Destinations, Categories and Products.\n  * Availability API: Most products have have limited capacity or require you to select a certain time. The availability API returns those slots.\n  * Reservation APIs: The reservation APIs allow you to block / reserve a ticket for a limited time so that you are able to obtain the payment from the guest. Furthermore it allows for managing a shoppingcart if needed.\n  * Booking APIs: The booking APIs allow to confirm reservations, make direct bookings and retrieve your tickets / barcodes.\n  \n  Additional APIs are:\n  \n  * Authentication APIs: Most API requests require valid credentials, these credentials can be obtained using the Auth endpoints.\n  * Payment APIs: Most B2B resellers manage payments themselves and are afterwards invoiced for their purchases. In case you want to make use of the existing Payment Service Provider integrations of Prio you can use the Payment APIs.\n  * Contact APIs: Advanced APIs to handle guest information, only applicable for recurring guests.\n  * Notification APIs: Configure webhooks to support asynchronous bookings and get notified of external changes.\n  * System APIs: Monitor API Health and Uptime.\n  \n## Using the interactive documentation\nThis is an interactive documentation which allows you to experience the API first hand without writing any code. To start calling Endpoints, first \"Authorize\" yourself by using the button below.  Fill in the credentials received by your Account Manager.  After the authorization is successful, all subsequent calls will automatically contain the Bearer token.\n\n  ### Postman \n    \n  You can import this whole API as a collection in a few steps.  \n  For more information check: [Working with OpenAPI](https://learning.getpostman.com/docs/postman/collections/working_with_openAPI/).  \n    Our API definition can be found [here](https://swagger.prioticket.com/definitions/Prio-Distributor-API/v38/distributor.json).\n\n  ### OpenAPI Specification\n\n  #### Read-Only and Write-Only Properties\n  \n  Please note that some schemas are being reused multiple times, across endpoints but also between requests and responses. `readOnly` properties are included in responses but not in requests, and `writeOnly` properties may be sent in requests but not in responses.\n  \n  Furthermore because all response types are JSON, the order in which the parameters are sent is not relevant and for documentation purposes might change over time.\n  \n  More info on this topic can be found in the [Open API Specification](https://swagger.io/docs/specification/data-models/data-types/)\n  \n  #### Deprecation and upcoming changes\n  \n  Due to limitations on our interactive documentation we list current unavailable methods as deprecated. Note that these are not actually deprecated, instead they will be added in the future. You can safely ignore these parameters as they affect either new or obsolete functionality for services that do not apply nor are within the scope for your current integration.\n  \n  Furthermore, in case you are viewing the latest version available, continuous amendments to both the documentation and the API can be expected. This means we are constantly adding new functionalities and parameters to the same API version, as long as these are deemed non-breaking and backwards compatible.\n  In case any breaking changes need to be made, a new version will be introduced. Please note that the syntax of upcoming (not yet released) functionalities might be subject to change.\n  \n  #### Advanced functionality\n  \n  Across the documentation **Advanced Functionality** can be found. This type of functionality requires a deep understanding of our system and implementation is not required to fully integrate on our API.\n  Contact your account manager in case you would like to implement advanced functionality.\n\n  #### Libraries\n  \n  Because our API definition is publicly available you can use several open-source tools to generate client libraries.\n  Please note that these libraries are auto-generated and should be considered Alpha releases. Backwards compatibility is not guaranteed and as this is a third-party tool we can not offer any assistance.\n    In case you find using a SDK helpful we recommend to use the [Open API Generator](https://openapi-generator.tech/).\n\n## Functionalities\nBelow you can find a complete list of API supported features.\n<details>\n      <summary>**Short List**</summary>\n <table>\n  <tr>\n    <th>Basic</th>\n    <th>Advanced</th>\n  </tr>\n  <tr>\n    <td>Easy to implement and required for basic integration:\n    \n  * Basic Product Types\n  * Admission Types\n  * Third Party Tickets\n  * Availability\n  * Capacity\n  * Currency\n  * Seasonal Pricing\n  * Basic Product Options\n  * Product Includes (Content)\n  * Product Excludes (Content)\n  * Duration\n  * Opening Times (Content)\n  * Locations (Content)\n  * Categories (Content)\n  * Highlights (Content)\n  * Cancellation Policy (Content)\n  * Turnout Time (Content)\n  * Booking Quantity Limit\n  * Dynamic reservation timeout\n  * Discounts\n  * Contact Details\n  * Pickup Points\n  * Multi language (Content)\n  * Product Type Quantity Limit\n  </td>\n    <td>Harder to integrate and less frequently used:\n    \n  * Advanced Product Types\n  * Dynamic Pricing\n  * Quantity Pricing\n  * Daily Pricing\n  * Age Group Pricing\n  * Multi Currency\n  * Advanced Product Options\n  * Combi Products\n  * Cluster Products\n  * Addon Products\n  * Promocodes\n  * Custom Fields\n  * Tags (Content)\n  * Routes (Content)\n  * Cancellation Policy (Restriction)\n  * Group code (Code Setttings)\n  * Group Pricing\n  * Seating\n  * Partial Cancellation and Partial Refunds\n  * Advanced code settings\n  * Advanced filtering\n  * Prio PSP support\n  * Partner Sales\n  * Search\n    </td>\n  </tr>\n</table> </details>\n\n<details>\n      <summary>**Full List**</summary>\n <table>\n  <tr>\n    <th>Functionalities</th>\n    <th>Functionalities</th>\n    <th>Functionalities</th>\n  </tr>\n  <tr>\n    <td>\n      \n  * Add booking (Amendment)\n  * Add Booking to Guest (Contact)\n  * Addon Products\n  * Admission Types\n  * Advanced code settings\n  * Advanced Contact Details\n  * Advanced Filters\n  * Advanced Graylog usage\n  * Advanced Product Options\n  * Advanced Product types (incl. custom)\n  * Advanced validation and error management\n  * Age Group Pricing\n  * Amendments\n  * Auto recovery and auto refund / cancellation\n  * Basic Discounts\n  * Basic Order Contacts\n  * Basic Product Options\n  * Basic Product Types\n  * Booking Quantity Limit\n  * Booking Versioning\n  * Capacity\n  * Categories (Content)\n  * Cluster Tickets\n  * Combi discount\n  * Combi Tickets\n  * Contact Amend\n  * Contact Create\n  * Contact Delete\n  * Contact Show\n  * Currency - Guest\n  * Currency Advanced (Base + New + Purchase)\n  * Currency Basic\n  * Currency Rates (Fixer.io)\n  * Custom Fields\n  * Cut-off Time\n  * Dependencies\n  * Display price\n  * Download e-ticket\n  * Duration\n  * Dynamic reservation timeout\n  * Edit guest details\n  * Elastic (Orders)\n  * Favorite products\n  * Filter on flags\n  * Flag Module\n  * From Price\n  * Group code\n  * Group pricing\n  * Guest details\n  * Highlights (Content)\n  </td>\n    <td>\n    \n  * If-Modified-Since HTTP header (Caching)\n  * Itenaries\n  * Locations (Content)\n  * Manual payment\n  * Max - Min Restrictions\n  * Multi language (Content)\n  * Multiple Account Level Login (Reseller, Distributor, Supplier)\n  * Multiple Barcode Types\n  * Multiple contacts linked to order\n  * Notifications\n  * Opening Times (Content)\n  * Order Options\n  * Order Summary\n  * Orders API\n  * Overbooking\n  * Pagination\n  * Paid vs Unpaid bookings\n  * Partial Cancellation (Booking)\n  * Partial Cancellation (Transaction)\n  * Partial Refunds\n  * Partner Discount\n  * Partner Fees\n  * Partner Sales\n  * Past Date Bookings\n  * Payment - Pay Later (Cashier / Guest)\n  * Payment API\n  * Payment Service Provider support\n  * Pick up points\n  * Price result check\n  * Print voucher per page\n  * Product Availability\n  * Product Categories (Main and Custom)\n  * Product Excludes (Content)\n  * Product Includes (Content)\n  * Product List / Detail API\n  * Product Locations\n  * Product Routes \n  * Product Type Classes\n  * Promocodes\n  * Quantity Pricing\n  * Refunds\n  * Regular Cancellation\n  * Reservations API\n  * Routes (Content)\n  * Seasonal Pricing\n  * Seating\n  * Send voucher to email\n  * Show booking listing\n  * Show payment status per booking\n  * Show redeemed vs unredeemed bookings\n  </td>\n    <td>\n    \n  * Show sub total\n  * Show total price\n  * Skip payment when amount is zero\n  * Tags (Content)\n  * Tax breakdown\n  * Third Party Tickets\n  * Travel Date Required\n  * Travel Date, Redemption Date, Invoice Date sort\n  * Turnout Time (Content)\n  * Webhooks\n  </td>\n  </tr>\n</table> </details>\n\n---\n## Integration Process\n\n  To facilitate our partners in the best possible way we recommend to follow our integration steps and the process as described below.\n  \n  It is necessary to obtain valid credentials for our staging environment. These credentials can be obtained by submitting a request through our [service desk](https://prioticket.atlassian.net/servicedesk/customer/portal/5/group/10/create/182). During the request process, we will ask for additional information such as the purpose of your integration to ensure that we can provide you with the optimal support based on our respective client's product portfolios.\n\n  **Pre-development stage**\n\n  1. Review our documentation.\n  \n  2. Fill in our \"Prio Partner Integration Questionnaire\" and finalize the scope of the integration.\n  \n  The \"Prio Partner Integration Questionnaire\" will be used to guide your implementation to the Prio system. It contains basic information on your company, integration use-cases, scoping, process explanations and more.\n  \n   We highly recommended scoping your requirements list with your integration manager. This API offers an extensive list of possibilities and exceptions. Depending on your product setup, you are not required to implement each and every feature. Partial implementation of this API is possible due to a limited number of mandatory fields as well as multiple alternative request / response formats.\n\n  Integrating into the Prioticket platform can take several days to many months. This API is layered to support each and every feature of the platform while maintaining simplicity of use.\n  It is important to know beforehand which features you would like to implement and prevent unnecessary research and development for functionalities that either your system does not support or would not be used by your client. \n  \n  For example, a valid order can be made in our system with less than 8 values and a single endpoint:\n  \n  <details>\n      <summary>**Example**</summary>\n   \n   ```json\n   {\n      \"order\": {\n          \"order_distributor_id\": \"{{order_distributor_id}}\",\n          \"order_language\": \"{{order_language}}\",\n          \"order_external_reference\": \"{{order_external_reference}}\",\n          \"order_bookings\": [\n              {\n                  \"booking_option_type\": \"DIRECT_BOOKING\",\n                  \"product_id\": \"{product_id}\",\n                  \"product_type_details\": [\n                      {\n                          \"product_type_id\": \"{{product_type_id}}\",\n                          \"product_type_count\": \"{{product_type_count}}\"\n                      }\n                  ]\n              }\n          ],\n          \"order_contact\": {\n              \"contact_email\": \"{{contact_email}}\"\n          }\n      }\n  }\n  \n  ```\n   \n  **Warning:** Do not start implementing or analyzing **advanced** functionalities without consulting your account manager first.\n  \n  </details>\n\n---\n\n  **Development stage**\n\n  3. Partner starts implementing the API according to agreed scope.\n\n---\n\n  **End-to-end testing stage**\n\n  4. Partner submits a certification request through our [service desk](https://prioticket.atlassian.net/servicedesk/customer/portal/5/group/10/create/123) to begin the end-to-end verification process and receive production credentials upon successful completion.\n\n---\n\n  **Mapping stage**\n\n  5. Prio and Partner create mutual product mapping sheet. (Optional)\n\n---\n\n  **Launch and monitoring stage**\n \n  6. Prio provides production credentials.\n  \n  7. One or more test orders are made on production to reassure third-party connectivity. \n\n  8. Partner is monitored and added to the Marketplace.\n  \n## API versioning\nWe've established a versioning strategy to manage updates to the API, along with a method for specifying the desired API version.   \nWhen a new API version is released, partners can opt to continue using the current version or transition to the updated version when convenient.  \n### Release and Deprecation:\n* New software versions are released as needed. Any breaking changes will always prompt a version increment.  \n* Version numbers are consistent across all endpoints. Upon the release of a new API version, all endpoints are incremented to the latest version.\n* Partners are notified of all version releases, providing details on new features and any breaking changes introduced.  \n* Upon deprecation of an API version, partners have a minimum of 18 months from the notification date to make necessary system adjustments. Requests made to deprecated endpoint versions may result in a 400 Bad Request response after this grace period.\n### Release Criteria:\n  #### Backward-Compatible Changes:\n\n  Certain changes are backward-compatible and do not necessitate a version release. Partners are responsible for ensuring their implementation gracefully handles these changes, including:\n  \n  * Introduction of new API endpoints.\n  * Addition of properties to an endpoint's response schema.\n  * Addition of non-required properties to an endpoint's request schema.\n  * Unexpected receipt of HTTP redirect response codes (301 Moved Permanently or 302 Found).\n  * Addition of new HTTP methods (POST, GET, PUT, PATCH, DELETE, etc.).\n  * Addition of new key values to existing fields representing a set, provided no operational logic is significantly impacted.\n\n  #### Breaking Changes:\n\n  Certain changes are considered breaking changes and lead to a version increment, including:\n  \n  * Addition of required properties to an endpoint's request schema.   \n  * Removal of required properties from an endpoint's request or response schemas.\n  * Changing the data type or format (e.g., date format) of an existing field in an endpoint's request or response schemas.  \n  * Addition, removal, or alteration of the meaning of HTTP status codes in an endpoint's response. \n  * Removal or modification of the Content-Type on existing endpoints.\n  * Modification or removal of field key values in a set.\n  * Modification of the operationId of an endpoint.\n\n---  \n# Formats\n  ## General\n\n  * All data should be in the [UTF-8](https://en.wikipedia.org/wiki/UTF-8) character set.\n\n\n  * Currency codes are sent in the [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217) format.\n\n\n  * Language is defined in the [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\n\n  * Amounts and values should follow the international standard. Rounding might be required.\n\n\n  * All data fields are case-sensitive.\n\n\n  * Optional parameters that are not set or left empty will not be returned in\n  the response. All optional parameters are nullable to support serialization.\n\n  ### Date / Time\n\n  Points in time are expressed as strings using the [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) datetime format. We always expect the local time with its UTC offset.\n  \n  **Example:**\n  \n  Burj Khalifa entrance Ticket in Dubai for 12th of May 2016 at 14:00 (local time).\n  \n  | Expected                      | Not expected                  |\n  |-----------------------------  |-----------------------------  |\n  | ` 2020-05-12T14:00:00+04:00`  | `2020-05-12T10:00:00+08:00`   |\n  |                               | `2020-05-12T18:00:00+00:00`   |\n  \n  > Note 1: Although the above examples express the same point in time, \n    we consider only the first one as valid because we always require the date and time in reference to the location of the activity. <br><br>\n  > Note 2: Although mentioned in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt), due to technical restrictions we do not support the Z suffix. Please send `+00:00` to denote a zero UTC offset instead. <br><br>\n  > Note 3: All offsets are automatically adjusted based on daylight saving time (DST).\n    \n  </details>\n\n## Headers\n  \n  ### Authorization\n  \n  To allow secure data transmission between Suppliers and Distributors all API\n  requests require HTTPS.\n\n  The API Key Token information for the staging and production environment will be sent\n  in a separate mail.<br>\n\n  If the request lacks any authentication information (e.g., the client\n   was unaware that authentication is necessary or attempted using an\n   unsupported authentication method), the **resource server** should not\n   include an error code or other error information.\n\n  `Authorization: Bearer JWT Token`<br>\n\n  ### Content-Type\n\n  The `Content-Type` should be `application/json`.  \n  \n  ### Accept-Encoding\n  \n  This API is equipped to support gzip compression. By including \"gzip\" in the Accept-Encoding header parameter of your request, the API will reply with a compressed response using gzip format.\n  \n  ### Application Info\n \n  Application info consists of data elements that identify the software that you use for making requests to the Prio platform. When you include application info in your requests, we can analyze and troubleshoot more efficiently, and provide a better support experience.\n  \n  Application info includes:\n  \n  * `App-Name` - Name of your application.\n  * `App-Version` - Version of your application.\n  * `App-Flavor` - Flavor of your application.\n  * `App-Package-Name` - Package name of your application.\n  * `App-Build-Number` - Build number of your application.\n  * `App-Platform` - Platform of your application (e.g Web, iOS, Android).\n  * `App-Flavor` - Flavor of your application.\n  * `App-Reference` - Unique request reference from your application.\n  * `App-Machine-ID` - Identifier of your machine.\n \n  Above values can be sent in the headers of any request and we recommend sending them if you have multiple applications directly interacting with this API. Custom headers can be sent as well, as long as they have the \"App-\" prefix attached.\n     \n# Key Concepts\n  \n  ## Create a booking\n  \n  To book a product through this API, you generally need to follow these steps:\n  \n  1. Check availability and pricing: Use the Get Products and Get Availabilities endpoints to verify if tickets for the desired tour or activity are available for a specific date, time, and quantity. \n  2. Request a booking hold: If tickets are available, request a pricing / availability hold for the booking using the Create Reservatione endpoint.\n  3. Collect payment: Once a booking hold is requested, collect payment either through the provided payment endpoints or via your own payment service provider.\n  4. Confirm the booking: Finalize the booking by confirming it using the confirm order endpoint.\n  \n  <iframe style=\"border:none\" width=\"400\" height=\"450\" src=\"https://whimsical.com/embed/22uVq64EbYoFqaLc3SF8mM@6HYTAunKLgTSwAQarpPNiZg9qeWkg6WmgeKHDAcodDJ61nd\"></iframe>\n\n  ## Product types and classes\n\n  Each product contains product types. These product types can offer aged based ticketing (such as Adult and Child), but also provide a variety of other flexible product variations such as group pricing, business and economy seating or different car configurations.\n  \n  Because some products might behave different from others, each product type is categorized within a product class; a group of products that behaves similarly. \n  \n  <details>\n      <summary>**Product Definitions**</summary>\n    \n  * Class Standard:\n    \n    Product types in the standard class are the most common and are supported by almost all systems. These types will always be age-restricted.\n    \n    Tour and experience providers have the flexibility to vary prices and apply different rules based on the age of their customers. This means they can charge full ticket prices for adults while offering discounted rates for children, or they may have specific requirements such as requiring at least one adult for every group of children booking a tour.\n        \n    During the process of checking prices and proceeding to checkout, customers should be able to select the number of individuals from each available age group for their booking.\n  \n    * `ADULT` - Adult.\n    \n    * `CHILD` - Child.\n    \n    * `SENIOR` - Senior.\n    \n    * `YOUTH` - Youth.\n        \n    * `INFANT` - Infant.\n    \n    ---\n    \n  * Class Individual:\n  \n    Product types in the individual class are less common and therefore have fewer supported systems. These types will never be age-restricted.\n    \n    * `PERSON` - Person.\n    \n    * `STUDENT` - Student.\n    \n    * `RESIDENT` - Resident.\n    \n    * `MILITARY` - Military.\n    \n    * `IMPAIRED` - Impaired.\n    \n    ---\n  \n  * Class Item:\n  \n    Product types in the item class do not refer to actual persons, instead they could, for example, be packages (Regular, Silver, Diamond), objects (Merchandise, private tours), a type of event, class identifier (Economy, Business) and much more.\n  \n    * `ITEM` - Item.\n    \n    ---\n    \n  * Class Group:\n   \n    Product types in the group class always consist of multiple persons. It can, for example, be a family of 2 Adults and 2 Childs.\n    \n    * `GROUP` - Group.\n    \n    * `FAMILY` - Family.\n    \n    ---\n    \n  * Class Custom:\n  \n    Product types in the custom class are completely dynamic and therefore require explicit mapping with external systems. They do not return as `CUSTOM`, instead they can take any form.\n    \n    * `CUSTOM` - Custom.\n    \n  </details>\n\n    \n## Product admission types\nSome products require the guest to select a day or time during the booking process. Depending on the type of admission this calendar / datetime picker can have several restrictions.\n\nBelow you will find the most common types of admission.\n\n <details>\n      <summary>**Admission Types**</summary>\n\n+ `TIME_PERIOD` - Customers can arrive at any time between the start (`availability_from_date_time`) and end time (`availability_to_date_time`) of the availability slot. Multiple periods in a single day should be expected.\n  Therefore a date- and timepicker should be shown.\n\n  Examples:\n\n  * An amusement park which has two opening periods, for example, a morning shift (09:00 - 12:00) and an afternoon shift (14:00 - 22:00).\n\n  * An afternoon admission to an amusement park that can be used from 1pm to 9pm.\n \n  ---\n \n+ `TIME_DATE` - Variation on `TIME_PERIOD`, whereas only a single period exists in a day. It is not required to choose between different times within a day, therefore only a datepicker is required.\n  Note that in case the slot includes midnight (two or more days), the day from which the `availability_from_date_time` originated should take precedence.\n\n  Examples:\n  \n  * A museum ticket that can be used during any time on the purchase date.\n  * A public transport ticket which is valid for the whole day.\n  \n  ---\n\n+ `TIME_POINT` - Customers are required to be present at the start time of the availability slot but can leave any time they want.\n\n  Examples:\n\n   * In the museum admission scenario, a timed entry ticket\n   for 10am requires the user to be at the museum at 10am. The start time of\n   availability slots for this service represents the designated entry\n   time. The end time, however, is used solely as a key to identify the\n   availability slot for booking.\n   \n   ---\n   \n+ `TIME_OPEN` - Customers can arrive at any time. Availablity is not applicable.\n\n  Examples:\n  \n  * A museum entry voucher which can be used anytime during the year.\n  \n  ---\n  \n+ `TIME_SLOT` - Customers are required to be present at the start time of the availability slot, and the service is expected to finish at the end time of the slot.\n    \n  Examples:\n\n    * A tour that starts at 9am that requires all attendees to arrive\n       at the start time, and returns at around 12pm.\n    * A haircut reservation at 3pm on Saturday that will take approximately\n     30 minutes.\n    * A fitness class from 6pm to 8pm.\n    \n</details>\n\n   \n## Pricing\n    \n  Different pricing configurations can be set depending on the product type (`product_type`), age group (`product_type_age`), booking quantity (`product_quantity_pricing`), season (`product_seasonal_pricing`), daily pricing (`product_daily_pricing`) and custom / time-based pricing (`product_dynamic_pricing`).\n  \n  All prices are given per `product_type`, per season (`product_seasonal_pricing:true`).\n  Every possible variation to this price is given as either a discount or surcharge.\n  The newly calculated price is returned in both the Reservation and Order API.\n  \n  TIP: To check whether you have implemented all logic correctly, it is advised that you cross-check the returned prices in the API with your own.\n  \n  ## Cancellations\n\n  This api provides the ability to cancel bookings according to a specified cancellation policy.\n\n  As the merchant of record, you have the flexibility to either adopt these terms for your customers without changes or create your own cancellation terms. For example, you can choose to label all products as non-refundable or extend the full-refund cancellation period to 72 hours instead of the standard 24 hours. However, it's important to note that you will still be invoiced based on the cancellation policies via the API.\n  \n  ## Translations\n  \n  This API supports multilingual content.\n  \n  All translatable fields can be found inside the `product_content` object.\n  \n  Normally the returned content would default to the `product_default_language`, which is commonly English. Would you wish to retrieve more languages, those supported for that specific product can be found inside `product_content_languages`.\n  \n  One of the language codes in the above array can then be sent within the original request in the URL as `&product_content_language={language_code}`.\n  \n  ## Pagination\n  \n  Please be aware that some datasets can be bigger than others. The size of your inventory varies depending on your catalogue setup.\n  Pagination is supported on endpoints for which potentially thousands of records can be expected. To retrieve the full dataset we recommend implementing the paging rules.\n  \n  This only applies to partners which process considerable volume.\n\n  ## Error Handling\n\n  The API will return the appropriate [HTTP status code](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) for every request and this could therefore be used to categorize most common types of errors (e.g `400`/`401`/`402`/`403`/`404`/`405`/`406`/`409`/`418`/`422`/`429`/`500`/`501`/`502`/`503`/`504` are supported).\n  \n  Additionally, the `error`, `error_description` and `errors` field can be consulted\n  for more detailed information on the problem.\n  \n  * Generally in case of a HTTP 400 status the request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed. \n  \n    Most HTTP 400 errors are returned with the same error code (`INVALID_REQUEST`) and include more detailed messages within the `errors` array.\n  \n  * A HTTP 422 (Unprocessable Entity) is most likely caused by a semantic (logical) error and indicates a problem within your integration.\n  \n  > Please note that in the future more specific error- and HTTP status codes might be added. Therefore consider all status codes between HTTP 200 and HTTP 300 as successfull responses, and every HTTP 400+/500+ as errors.\n  \n\n  > As our API has over 1000+ unique error codes (grouped by HTTP status). We discourage implementing individual errors on your customer front-end interface and suggest a catch-all clause for each HTTP status code instead.\n\n  ## Timeout Handling\n  \n  We recommend implementing a timeout duration of 60 seconds due to dependencies on external supplier systems that are beyond our direct control. While most booking requests are processed promptly, there are rare instances where response times may exceed this duration.\n\n  It is important to note that even if the Confirm Booking endpoint encounters a timeout or returns an HTTP 500 error, the booking may still be successfully created. To ensure system resilience and maintain consistency, we strongly recommend implementing the following methods.\n  \n  ### 1. Idempotency\n  \n  * The Prio API supports idempotency, allowing multiple retries of the same request while ensuring the action is performed only once.\n  \n  * This mechanism prevents duplicate bookings in case of failures or retries.\n  \n  * Idempotency is supported for POST requests, whereas GET, DELETE, and PUT requests are inherently idempotent.\n  \n  ### 2. Webhooks for Asynchronous Order Confirmation\n  \n  * The Distributor API supports webhooks to track state changes efficiently.\n  \n  * Subscribers receive notifications whenever there is a change in order status.\n  \n  * While the booking status remains uncertain, the order is marked as \"PROCESSING.\"\n  \n  * Webhooks serve as a reliable means of reconciling the booking state. In the event of a timeout, they provide updates once the order has been successfully processed or failed.\n  \n  * If no webhook notification is received, it is likely that the request was not received or processed successfully. In such cases, we recommend contacting our API support team for further investigation.\n  \n  ### 3. Alternative Poll-Based Solution\n  \n  If webhooks or idempotency cannot be implemented, an alternative poll-based approach can be used to reconcile the booking state. This involves making periodic requests to the GET Order Details endpoint at fixed intervals until a final order state (such as confirmed or failed) is received.\n  \n  #### Recommended Polling Strategy:\n  \n  * Perform 1 call per minute for the first 5 minutes (5 calls in total).\n  \n  * If no response is received, continue polling once every 15 minutes for the next hour (4 additional calls).\n  \n  * If no final status is received after this period, abandon further attempts.\n  \n  ### Ensuring Booking Consistency\n  \n  To fully prevent duplicate bookings, we recommend implementing a combination of these methods. The use of idempotency tokens, webhooks, and polling mechanisms will significantly enhance the reliability and consistency of the booking process.\n  \n  For further assistance or troubleshooting, please reach out to our API support team.\n\n  ### Idempotency\n  \n  The Prio API supports [idempotency](https://tools.ietf.org/html/rfc7231#section-4.2.2), allowing you to retry a request multiple times while only performing the action once. This helps avoid unwanted duplication in case of failures and retries. For example, in the case of a timeout error, it is possible to safely retry sending the same API Create Order call multiple times with the guarantee that the order will only be created once.\n\n  This API supports idempotency on POST requests (other request types such as GET, DELETE and PUT are idempotent by definition). \n  \n## Rate Limiting\nAt present, we do not implement active rate limiting measures. Instead, we uphold a fair-use policy wherein we assess whether our API is being utilized appropriately. This evaluation involves analyzing API usage patterns to identify instances of excessive calls, such as incorrect caching practices, improper chaining of calls, or inundating our API with unnecessary requests.  \n\nAdditionally, we have robust DDoS prevention mechanisms in place to safeguard against malicious attacks and ensure the continued availability and reliability of our services.  \n\nOur determination of what constitutes acceptable usage is primarily outlined during our API certification process. Furthermore, we regularly communicate with partners via email to address any integration issues identified and offer recommendations for enhancing the connection.\n\n---\n<b>Prioticket Confidential</b>\n\n  This documentation is protected by law from any form of duplication unless prior permission is obtained from the officers of Prioticket.\n\n---",
    "termsOfService" : "https://prioticket.com/terms/",
    "contact" : {
      "name" : "API Support",
      "url" : "https://support.prioticket.com"
    },
    "version" : "3.8.0",
    "x-logo" : {
      "url" : "https://assets-global.website-files.com/62bedf4649f925744f0f6a2d/63d38eaf7bbe6b2872a07a7f_298x64%20(1).webp",
      "backgroundColor" : "#FFFFFF",
      "altText" : "Prioticket logo"
    }
  },
  "servers" : [ {
    "url" : "https://{environment}.prioticket.com/{version}/distributor",
    "description" : "Prio environments.",
    "variables" : {
      "environment" : {
        "description" : "* `distributor-api` - Production server; used for real transactions.\n\n* `sandbox-distributor-api` - Sandbox server.\n\n* `staging-distributor-api` - Pre-Production server; used for testing (UAT), verification, demo and certification.\n\n* `internal-distributor-api` - Internal server; reserved for internal use.\n",
        "default" : "sandbox-distributor-api",
        "enum" : [ "distributor-api", "sandbox-distributor-api", "staging-distributor-api", "internal-distributor-api" ]
      },
      "version" : {
        "description" : "Api version.",
        "default" : "v3.8",
        "enum" : [ "v3.8" ]
      }
    }
  } ],
  "tags" : [ {
    "name" : "Authentication",
    "description" : "To ensure no spooky stuff happens."
  }, {
    "name" : "System",
    "description" : "Information on the system."
  }, {
    "name" : "Products",
    "description" : "Manage and retrieve all your products.\n- View your inventory.\n- Get tax information.\n- Extensive search and filter.\n- Retrieve availability and capacity.\n- Get product ratings and reviews.\n\n In most cases, this content is periodically cached on the partner end, but these API endpoints are also optimized for direct front-end use.\n"
  }, {
    "name" : "Reservations / Cart",
    "description" : "Reserving a product is only mandatory in case the product has managed capacity. Although we also recommend to implement it in the following cases:\n- When holding customer products inside a shoppingcart. \n- Lock a slot while waiting for a confirmed payment.\n- High demand / low availability tickets (concert/events).\n- Adding promocodes to an order.\n- Managing combi- and cart-discounts.\n- Cross-client order process.\n\nReservations can be confirmed by passing the `reservation_reference` to the Create Order API. One or more products can be reserved at once. We highly recommend implementing the Cart flow for maximum functionality. \n"
  }, {
    "name" : "Orders",
    "description" : "Manage and create orders.\n\n  - Confirm reservations.\n  - Make direct bookings.\n  - Amend existing orders.\n  - List all orders and bookings.\n  - (Partial) cancel orders.\n  - Get pre-generated vouchers.\n"
  }, {
    "name" : "Payments",
    "description" : "Manage and settle payments using the API.\n\nNot applicable to B2B resellers / purchases (Indirect sales / `SettlementType:EXTERNAL`).\n"
  }, {
    "name" : "Contacts",
    "description" : "View and Manage Contacts. \n\nPlease note that this API does not amend order contacts. To amend order details, please call the Update Order API instead.\n\nOnly applicable for partners using the Contacts Module (Returning guests). For regular transactions these endpoints can be safely ignored.\n"
  }, {
    "name" : "Notifications",
    "description" : "Asynchronous notifications of events.\n\nSupported Events:\n- Product creation, amendment or removal.\n- Order creation, amendment or cancellation.\n- Payment creation, refund or amendment.\n- Voucher release or revocation.\n- Redemption.\n"
  } ],
  "paths" : {
    "/oauth2/token" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Exchange credentials for token. (Example only)",
        "description" : "You will be provided with a client_id and a client_secret which you'll use to authenticate yourself in the system.\nThe first thing you need to do is to get access token which you will then use for further requests. \nWhen it expires, you will need to request another one.\nMultiple tokens can be active at once. \n\nSupported types:\n+ `client_credentials`\nOnce you have a valid access token, you will need to use it to sign all requests made to the Prio API.\n\nThis is done by providing Authorization HTTP header along with each of your requests in the following format:\n\n+  `Authorization:` `<token_type>` `<access_token>`\n\nIf this header is not present in the request, the service will reject the request by returning the\nHTTP error code 400 and respond with an appropriate error message.\n> Please do not manually perform this operation, we highly encourage you to use an existing OAuth library for your specific language.\n\n> Make sure to call this endpoint only in case your current token has expired to reduce roundtrips and overal latency.",
        "operationId" : "getToken",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The client sends HTTP requests with the Authorization header that contains the word Basic word followed by a space and a base64-encoded string username:password.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Clients in possession of a client password MAY use the HTTP Basic authentication scheme \nas defined in [RFC2617](https://tools.ietf.org/html/rfc2617) to authenticate withthe authorization server.  \n\nThe client identifier is encoded using the \"application/x-www-form-urlencoded\" encoding algorithm, and the encoded value is used as the username; the client password is encoded using the same algorithm and used as the password.\n\nAlternatively, the authorization server supports including the client credentials in the request-body using the following parameters:Including the client credentials in the request-body using the two parameters is NOT RECOMMENDED and SHOULD be limited to clients unable to directly utilize the HTTP Basic authentication scheme (or other password-based HTTP authentication schemes). The parameters can only be transmitted in the request-body and MUST NOT be included in the request URI.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientCredentialsGrantRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully Authenticated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientCredentialsGrantResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe request is missing a required parameter, includes an\n              unsupported parameter value (other than grant type),\n              repeats a parameter, includes multiple credentials,\n              utilizes more than one mechanism for authenticating the\n              client, or is otherwise malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuthErrorModel"
                },
                "example" : {
                  "error" : "invalid_request",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter value (other than grant type), repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed."
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nClient authentication failed (e.g., unknown client, no client authentication included, or unsupported authentication method). The authorization server MAY return an HTTP 401 (Unauthorized) status code to indicate which HTTP authentication schemes are supported. If the client attempted to authenticate via the `Authorization` request header field, the authorization server MUST respond with an HTTP 401 (Unauthorized) status code and include the `WWW-Authenticate` response header field matching the authentication scheme used by the client.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuthErrorModel"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "basicAuth" : [ ]
        } ]
      }
    },
    "/system/ping" : {
      "get" : {
        "tags" : [ "System" ],
        "summary" : "Get System Ping",
        "description" : "Ping of the system.",
        "operationId" : "getSystemPing",
        "responses" : {
          "200" : {
            "description" : "Ping"
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        }
      }
    },
    "/system/status" : {
      "get" : {
        "tags" : [ "System" ],
        "summary" : "Get System Status",
        "description" : "Status of the system.",
        "operationId" : "getSystemStatus",
        "responses" : {
          "200" : {
            "description" : "System OK"
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ]
        } ]
      }
    },
    "/products/locations" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "List Product Locations",
        "description" : "This API returns all the available locations of products.",
        "operationId" : "getProductLocations",
        "parameters" : [ {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "product_id",
          "in" : "query",
          "description" : "[FILTER] on `product_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "PRODUCT_ID_123"
          },
          "example" : "PRODUCT_ID_123"
        }, {
          "name" : "location_type",
          "in" : "query",
          "description" : "[FILTER] on Location Type (`location_type`).",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Location Types",
            "type" : "array",
            "example" : [ "VENUE" ],
            "items" : {
              "title" : "Location Type",
              "type" : "string",
              "example" : "VENUE",
              "enum" : [ "SHOP", "COMPANY", "PICKUP", "POI", "VENUE", "START", "END", "ENTRY", "DESTINATION", "MEETING", "INFO", "STOP", "ONLINE", "OTHER", "UNKNOWN" ]
            }
          },
          "example" : [ "VENUE" ]
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "example" : 5,
            "default" : 10
          },
          "example" : 5
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Location List Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationListResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products/destinations" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "List Product Destinations",
        "description" : "This API provides all the product destinations that are available in the Prio system per distributor.",
        "operationId" : "getProductDestinations",
        "parameters" : [ {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "destination_id",
          "in" : "query",
          "description" : "[FILTER] on destination (`destination_id`).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Destination IDs",
            "type" : "array",
            "description" : "Destination IDs.",
            "example" : [ "4" ],
            "items" : {
              "title" : "Destination ID",
              "type" : "string",
              "description" : "Destination ID.",
              "example" : "4"
            }
          },
          "example" : [ "4" ]
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "example" : 5,
            "default" : 10
          },
          "example" : 5
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Destination Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductDestinationsResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products/categories" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "List Product Categories",
        "description" : "This API provides all the product categories that are available in the Prio system per distributor.",
        "operationId" : "getProductCategories",
        "parameters" : [ {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "category_id",
          "in" : "query",
          "description" : "[FILTER] on categories (`category_id`).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Category IDs",
            "type" : "array",
            "description" : "Category IDs.",
            "example" : [ "4" ],
            "items" : {
              "title" : "Category ID",
              "type" : "string",
              "description" : "Category ID.",
              "example" : "4"
            }
          },
          "example" : [ "4" ]
        }, {
          "name" : "category_type",
          "in" : "query",
          "description" : "[FILTER] on Category Type (`category_type`).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Category Types",
            "type" : "array",
            "description" : "Category types.",
            "items" : {
              "title" : "Category Type",
              "type" : "string",
              "description" : "Category type.",
              "example" : "SYSTEM",
              "enum" : [ "SYSTEM", "RESELLER", "MERCHANDISE" ]
            }
          }
        }, {
          "name" : "category_search_query",
          "in" : "query",
          "description" : "[SEARCH] on keywords. \n\nThis API provides full-text (wildcard) search capabilities. \n\nOnly results linked to your account will be returned.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Search Query",
            "type" : "string"
          }
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Category Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistributorProductCategoriesResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products/recommendations" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "List Product Recommendations",
        "description" : "This API provides all the product recommendations that are available in the Prio system.",
        "operationId" : "getProductRecommendations",
        "parameters" : [ {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Recommendation Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistributorProductRecommendationsResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products/routes" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "List Product Routes",
        "description" : "This API returns all the routes of the products linked to a distributor.",
        "operationId" : "getProductRoutes",
        "parameters" : [ {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "product_id",
          "in" : "query",
          "description" : "[FILTER] on `product_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "PRODUCT_ID_123"
          },
          "example" : "PRODUCT_ID_123"
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "example" : 5,
            "default" : 10
          },
          "example" : 5
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Routes Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutesListResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products/currency_rates" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "List Product Currency Rates",
        "description" : "This API returns all the currency rates on a daily basis.",
        "operationId" : "getCurrencyRates",
        "parameters" : [ {
          "name" : "currency_date",
          "in" : "query",
          "description" : "[FILTER] on `currency_date`.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "currency_base",
          "in" : "query",
          "description" : "[FILTER] on `currency_base`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Currency Base Code",
            "type" : "string",
            "description" : "Currency Base Code, according to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).",
            "example" : "USD"
          }
        }, {
          "name" : "currency_type",
          "in" : "query",
          "description" : "[CONFIG] show currency rates based on sales or purchase price.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Currency Type",
            "type" : "string",
            "description" : "Currency rates based on sales or purchase.",
            "example" : "SALES",
            "enum" : [ "SALES", "PURCHASE" ]
          },
          "example" : "SALES"
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Currency Rates Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistributorCurrencyRatesResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products/taxes" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "List Product Taxes",
        "description" : "This API returns all the tax configurations of the products linked to a distributor.",
        "operationId" : "getProductTaxes",
        "parameters" : [ {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "product_id",
          "in" : "query",
          "description" : "[FILTER] on `product_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "PRODUCT_ID_123"
          },
          "example" : "PRODUCT_ID_123"
        }, {
          "name" : "tax_region",
          "in" : "query",
          "description" : "[FILTER] on `tax_region`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Tax Region",
            "type" : "string",
            "description" : "Country or State of the related tax authority.",
            "example" : "India"
          },
          "example" : "India"
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "example" : 5,
            "default" : 10
          },
          "example" : 5
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Tax Rates Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistributorProductTaxesResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products/stock" : {
      "get" : {
        "tags" : [ "Stock" ],
        "summary" : "List Product Stock",
        "description" : "This API returns all the stock items.",
        "operationId" : "getStock",
        "parameters" : [ {
          "name" : "stock_id",
          "in" : "query",
          "description" : "[FILTER] on `stock_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "stock_product_id",
          "in" : "query",
          "description" : "[FILTER] on `stock_product_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "include_disabled",
          "in" : "query",
          "description" : "[FILTER] Include disabled / closed (`stock_active:false`) entries. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          }
        }, {
          "name" : "stock_modified",
          "in" : "query",
          "description" : "[FILTER] Only show entries modified after the given date.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Stock Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StockListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products/stock/{stock_id}" : {
      "put" : {
        "tags" : [ "Stock" ],
        "summary" : "Update Product Stock",
        "description" : "This API allows to update the stock for merchandise items.",
        "operationId" : "updateStock",
        "parameters" : [ {
          "name" : "stock_id",
          "in" : "path",
          "description" : "Identifier of the stock that is updated.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "84534534"
          }
        }, {
          "name" : "stock_items_available",
          "in" : "query",
          "description" : "Updated stock quantity.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "50"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Stock Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StockListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "List Products",
        "description" : "This API provides all the products in the Prio system per distributor.\nExtensive filtering is available but do note that certain filters might affect performance.\n> By default only the latest revision will be returned.",
        "operationId" : "getProducts",
        "parameters" : [ {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "product_content_language",
          "in" : "query",
          "description" : "[CONFIG] content language to return in the response. \n\nLanguages are defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. If the defined language is not available, the product will be returned in the `product_default_language`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "en"
          },
          "example" : "en"
        }, {
          "name" : "product_content",
          "in" : "query",
          "description" : "[FILTER] on product content.\n\nSearches the fields:\n  + `product_id`(Upcoming)\n  + `product_title`\n  + `product_short_description`\n  + `product_long_description`\n  + `product_supplier_name`\n  + `product_highlights`\n  + `product_includes`\n  \nRegex used: '(?is)^(?=.*\\\\b(query1.*)\\\\b)(?=.*\\\\b(query2.*)\\\\b).*'\n\n  + Case insensitive.\n  + Positive lookaheads and word boundaries to make word order not matter and to recognize word spacing.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Content Search String",
            "type" : "string",
            "example" : "tour museum amsterdam"
          },
          "example" : "tour museum amsterdam"
        }, {
          "name" : "product_start_date",
          "in" : "query",
          "description" : "[FILTER] on `product_start_date`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "product_end_date",
          "in" : "query",
          "description" : "[FILTER] on `product_end_date`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "product_duration",
          "in" : "query",
          "description" : "[FILTER] on `product_duration`. (Minutes)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          },
          "example" : 90
        }, {
          "name" : "product_booking_quantity_min",
          "in" : "query",
          "description" : "[FILTER] on `product_booking_quantity_min`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          },
          "example" : 1
        }, {
          "name" : "product_booking_quantity_max",
          "in" : "query",
          "description" : "[FILTER] on `product_booking_quantity_max`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          },
          "example" : 3
        }, {
          "name" : "product_id",
          "in" : "query",
          "description" : "[FILTER] on `product_id`.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product IDs",
            "type" : "array",
            "example" : [ "PRODUCT_ID_123" ],
            "items" : {
              "title" : "Product ID",
              "type" : "string",
              "example" : "PRODUCT_ID_123"
            }
          },
          "example" : [ "PRODUCT_ID_123" ]
        }, {
          "name" : "product_supplier",
          "in" : "query",
          "description" : "[FILTER] on `product_supplier_id`.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Supplier IDs",
            "type" : "array",
            "example" : [ "PRODUCT_SUPPLIER_ID" ],
            "items" : {
              "title" : "Product Supplier ID",
              "type" : "string",
              "example" : "PRODUCT_SUPPLIER_ID"
            }
          },
          "example" : [ "PRODUCT_SUPPLIER_ID" ]
        }, {
          "name" : "product_reseller_id",
          "in" : "query",
          "description" : "[FILTER] on `product_reseller_id`.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Reseller IDs",
            "type" : "array",
            "example" : [ "PRODUCT_RESELLER_ID" ],
            "items" : {
              "title" : "Product Reseller ID",
              "type" : "string",
              "example" : "PRODUCT_RESELLER_ID"
            }
          },
          "example" : [ "PRODUCT_RESELLER_ID" ]
        }, {
          "name" : "market_admin_id",
          "in" : "query",
          "description" : "[FILTER] on `market_admin_id`.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Market Admin IDs",
            "type" : "array",
            "example" : [ "PRODUCT_MARKET_ADMIN_ID" ],
            "items" : {
              "title" : "Product Market Admin ID",
              "type" : "string",
              "example" : "PRODUCT_MARKET_ADMIN_ID"
            }
          },
          "example" : [ "PRODUCT_MARKET_ADMIN_ID" ]
        }, {
          "name" : "product_category",
          "in" : "query",
          "description" : "[FILTER] on categories (`category_id`).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Category IDs",
            "type" : "array",
            "example" : [ "PRODUCT_CATEGORY_ID_123" ],
            "items" : {
              "title" : "Product Category ID",
              "type" : "string",
              "example" : "PRODUCT_CATEGORY_ID_123"
            }
          },
          "example" : [ "PRODUCT_CATEGORY_ID_123" ]
        }, {
          "name" : "product_destination",
          "in" : "query",
          "description" : "[FILTER] on destinations (`destination_id`).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Destination IDs",
            "type" : "array",
            "example" : [ "PRODUCT_DESTINATION_ID_123" ],
            "items" : {
              "title" : "Product Destination ID",
              "type" : "string",
              "example" : "PRODUCT_DESTINATION_ID_123"
            }
          },
          "example" : [ "PRODUCT_DESTINATION_ID_123" ]
        }, {
          "name" : "product_tag",
          "in" : "query",
          "description" : "[FILTER] on Tag. \n\nCombination of `product_tag_id`, `product_tag_description` and `product_tag_group`.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Tags",
            "type" : "array",
            "example" : [ "PRODUCT_TAG" ],
            "items" : {
              "title" : "Product Tag",
              "type" : "string",
              "example" : "PRODUCT_TAG"
            }
          },
          "example" : [ "PRODUCT_TAG" ]
        }, {
          "name" : "product_language",
          "in" : "query",
          "description" : "[FILTER] on available product languages. \n\nLanguages are defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. \n\nProducts without a language value will not be returned.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Language Codes",
            "type" : "array",
            "example" : [ "en" ],
            "items" : {
              "title" : "Product Language Code",
              "type" : "string",
              "example" : "en"
            }
          },
          "example" : [ "en" ]
        }, {
          "name" : "product_location_id",
          "in" : "query",
          "description" : "[FILTER] on `location_id`.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Location IDs",
            "type" : "array",
            "example" : [ "PRODUCT_LOCATION_ID" ],
            "items" : {
              "title" : "Location ID",
              "type" : "string",
              "example" : "PRODUCT_LOCATION_ID"
            }
          },
          "example" : [ "PRODUCT_LOCATION_ID" ]
        }, {
          "name" : "product_location_country_code",
          "in" : "query",
          "description" : "[FILTER] on country ( [ISO-3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Location Country Codes",
            "type" : "array",
            "example" : [ "NL" ],
            "items" : {
              "title" : "Product Location Country Code",
              "type" : "string",
              "example" : "NL"
            }
          },
          "example" : [ "NL" ]
        }, {
          "name" : "product_currency_code",
          "in" : "query",
          "description" : "[FILTER] on Product Currency Code, according to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Currency Codes",
            "type" : "array",
            "example" : [ "EUR" ],
            "items" : {
              "title" : "Product Currency Code",
              "type" : "string",
              "description" : "Product Currency Code, according to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).",
              "example" : "EUR"
            }
          },
          "example" : [ "EUR" ]
        }, {
          "name" : "product_custom_field",
          "in" : "query",
          "description" : "[FILTER] on `product_custom_fields`.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Custom Fields",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            }
          }
        }, {
          "name" : "product_type",
          "in" : "query",
          "description" : "[FILTER] on Product Type (`product_type`).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Types",
            "type" : "array",
            "example" : [ "ADULT", "CHILD" ],
            "items" : {
              "title" : "Product Type",
              "type" : "string",
              "example" : "ADULT",
              "enum" : [ "ADULT", "CHILD", "SENIOR", "YOUTH", "INFANT", "PERSON", "STUDENT", "RESIDENT", "MILITARY", "IMPAIRED", "ITEM", "GROUP", "FAMILY", "CUSTOM" ]
            }
          },
          "example" : [ "ADULT", "CHILD" ]
        }, {
          "name" : "product_status",
          "in" : "query",
          "description" : "[FILTER] on Product Status (`product_status`).\n> A product can only be sold if the status is `ACTIVE` or `TEST`.\n\n<details>\n  <summary>**Product Statuses**</summary>\n\nProduct Status:\n* `DRAFT` - Product is a draft. \n\n  The product is a draft.\n\n* `REVIEW` - Product is in review. \n\n  The product is in review.\n \n* `ACTIVE` - Product is active.\n\n  The product is fully configured and ready to sell using any linked catalogue (See Product Catalogue Status).\n\n* `EXPIRED` - Product is expired.\n\n  The product configured availability expired and this product is no longer available for sales. \n\n* `ARCHIVED` - Product is archived. \n\n  The product is archived. It can return to `ACTIVE` by unarchiving it.\n\n* `INACTIVE` - Product is inactive.\n\n  The product is set inactive. It should not be visible on any channel and cannot be sold until set to `ACTIVE` again.\n\n* `TEST` - Product is in test.\n\n  The product is fully configured and ready to sell. Similar to `ACTIVE`, but only meant for internal testing purposes. This product should not be exposed to end-consumers.\n\n* `UNAVAILABLE` - Product is unavailable.\n\n  The product is automatically set as unavailable due to an error or misconfiguration. This product requires attention.\n\n* `SUSPENDED` - Product is suspended.\n\n  The product is suspended due to Terms of Service violation.\n\n* `DELETED` - Product is deleted.\n\n  The product is permanently deleted.\n  \n* `PREVIEW` - Product is in preview.\n\n  The product is visible but cannot be booked yet. Generally used during pre-sales. This state is automatically set if the product is `ACTIVE` but did not yet reach the `product_booking_start_date`.\n\n</details>",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Status",
            "type" : "array",
            "example" : [ "ACTIVE" ],
            "items" : {
              "title" : "Product Status",
              "type" : "string",
              "example" : "ACTIVE",
              "default" : "ACTIVE",
              "enum" : [ "DRAFT", "REVIEW", "ACTIVE", "EXPIRED", "ARCHIVED", "INACTIVE", "TEST", "UNAVAILABLE", "SUSPENDED", "DELETED", "PREVIEW" ]
            },
            "default" : [ "ACTIVE" ]
          },
          "example" : [ "ACTIVE" ]
        }, {
          "name" : "product_class",
          "in" : "query",
          "description" : "[FILTER] on Product Class (`product_class`).\n<details>\n  <summary>**Product Classes**</summary>\n  \n  * `STANDARD` - Product types in the standard class are the most common and are supported by almost all systems.\n  \n  * `COMBI` - Product is a combi-product. This product is the main combi product and is not bookable on its own. All of the sub-products linked to this combi should be booked as well. These products are listed inside `product_combi_details`.\n  \n  * `CLUSTER` - Product is a cluster-product. This product is the main cluster product and is not bookable. One of the sub-products linked to this cluster should be booked instead. These products are listed inside `product_cluster_details`.\n  \n  * `MERCHANDISE` - \n  \n  * `BUNDLE` - Product is a bundle-product. This product is the main bundle product and is not bookable on its own. All of the sub-products linked to this bundle should be booked as well. These products are listed inside `product_bundle_details`.\n  \n  * `OTHER` - Products in the other/custom class are completely dynamic.\n\n</details>",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Class",
            "type" : "array",
            "example" : [ "STANDARD", "CLUSTER", "COMBI", "MERCHANDISE" ],
            "items" : {
              "title" : "Product Class",
              "type" : "string",
              "example" : "STANDARD",
              "enum" : [ "STANDARD", "COMBI", "CLUSTER", "MERCHANDISE", "BUNDLE", "OTHER" ]
            }
          },
          "example" : [ "STANDARD", "COMBI", "MERCHANDISE" ]
        }, {
          "name" : "product_catalogue_status",
          "in" : "query",
          "description" : "[FILTER] on Product Catalogue Status (`product_catalogue_status`).\n<details>\n  <summary>**Product Catalogue Statuses**</summary>\n\nProduct Catalogue Status:\n* `PENDING` - Product is pending to be assigned to a catalogue.\n* `INACTIVE` - Product is assigned and inactive on the catalogue.\n* `ACTIVE` - Product is assigned and active on the catalogue.\n</details>",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Catalogue Status",
            "type" : "array",
            "example" : [ "ACTIVE" ],
            "deprecated" : true,
            "items" : {
              "title" : "Product Catalogue Status",
              "type" : "string",
              "example" : "ACTIVE",
              "enum" : [ "PENDING", "INACTIVE", "ACTIVE" ]
            }
          },
          "example" : [ "ACTIVE" ]
        }, {
          "name" : "product_availability",
          "in" : "query",
          "description" : "[FILTER] Include products with capacity (`product_availability:true`).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : true,
            "default" : true
          },
          "example" : true
        }, {
          "name" : "product_favorite",
          "in" : "query",
          "description" : "[FILTER] Return `product_favorite:true` only.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : true
          },
          "example" : true
        }, {
          "name" : "product_planet",
          "in" : "query",
          "description" : "[FILTER] on an astronomical body. *(Reserved for future use)*",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "EARTH",
            "enum" : [ "EARTH", "MARS", "JUPITER" ]
          },
          "example" : "EARTH"
        }, {
          "name" : "product_modified",
          "in" : "query",
          "description" : "[FILTER] on products modified after the given date. \n\n* This includes newly created products.\n* Deleted products are ignored and should be handled manually.\n\nFor caching purposes we recommend using the `If-Modified-Since` header instead.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Product Modified",
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "product_search_query",
          "in" : "query",
          "description" : "[SEARCH] on keywords. \n\nThis API provides full-text (wildcard) search capabilities. \n\nOnly results linked to your account will be returned and searching is only available in case cache is enabled (`cache:true`)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Search Query",
            "type" : "string"
          }
        }, {
          "name" : "product_view_type",
          "in" : "query",
          "description" : "[CONFIG] **(ADVANCED)** account view type.\n\nThis value defaults and is limited to the scope of your credentials.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Account Type",
            "type" : "string",
            "example" : "DISTRIBUTOR",
            "deprecated" : true,
            "enum" : [ "GUEST", "PARTNER", "DISTRIBUTOR", "RESELLER", "PLATFORM", "SUPER_ADMIN", "MARKET_ADMIN", "SUPPLIER_ADMIN", "SUPPLIER" ]
          },
          "example" : "DISTRIBUTOR"
        }, {
          "name" : "product_sort_by",
          "in" : "query",
          "description" : "[SORT] method.\n<details>\n  <summary>**Sort Methods**</summary>\n\nSort Methods:\n* `PRODUCT_CREATED` - Sort on `product_created`.\n* `PRODUCT_MODIFIED` - Sort on `product_modified`.\n* `PRODUCT_TITLE_A_Z` - Sort on `product_title`.\n* `SUPPLIER_NAME_A_Z` - Sort on `product_supplier_name`.\n* `LOCATION_NAME_A_Z` - Sort on `location_name`.\n* `PRICE_VALUE` - Sort on `product_from_price`.\n\n  Price is sorted based on the current season.\n\n* `DISCOUNT_VALUE` - (Upcoming)\n* `SEARCH_RELEVANCE` - Search results are sorted on match relevance. \n\n  This sorting method should only be used during wildcard (`product_search_query`) searches.\n  \n  If `product_search_query` is empty, it will fallback to `CUSTOM`.\n\n* `CUSTOM` - Custom sort as defined in the catalogues.\n\n  If no custom sorting has been configured it will fallback to `PRODUCT_MODIFIED`.\n\n</details>",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Product Sort By",
            "type" : "string",
            "description" : "Method of sorting.",
            "example" : "PRODUCT_CREATED",
            "default" : "PRODUCT_MODIFIED",
            "enum" : [ "PRODUCT_CREATED", "PRODUCT_MODIFIED", "PRODUCT_TITLE_A_Z", "SUPPLIER_NAME_A_Z", "LOCATION_NAME_A_Z", "PRICE_VALUE", "DISCOUNT_VALUE", "SEARCH_RELEVANCE", "CUSTOM" ]
          },
          "example" : "PRODUCT_CREATED"
        }, {
          "name" : "product_sort_order",
          "in" : "query",
          "description" : "[SORT] keyword used to sort result sets in either ascending or descending order.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Product Sort Order",
            "type" : "string",
            "description" : "Order of sorting.",
            "example" : "ASC",
            "default" : "DESC",
            "enum" : [ "ASC", "DESC" ]
          },
          "example" : "ASC"
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "example" : 5,
            "default" : 10
          },
          "example" : 5
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "cache",
          "in" : "query",
          "description" : "[CACHE] Whether the results should be loaded from the caching server. This will significantly improve performance and disabling this functionality is not recommended.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Cache",
            "type" : "boolean",
            "example" : true,
            "default" : true
          },
          "example" : true
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product List Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductListResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products/{product_id}" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "List Product Details",
        "description" : "This API provides all the product information that is available in the Prio system for the requested product (`product_id`).",
        "operationId" : "getProduct",
        "parameters" : [ {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "product_id",
          "in" : "path",
          "description" : "Unique identifier for the product assigned by Prio.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "PRODUCT_ID_123"
          },
          "example" : "PRODUCT_ID_123"
        }, {
          "name" : "product_content_language",
          "in" : "query",
          "description" : "Language code to request language specific product data. If left empty or language is not available (not included in `product_content_languages`), the response will be in the default language i.e. English. The actual language returned can also be found inside the `Content-Language` header.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "en"
          },
          "example" : "en"
        }, {
          "name" : "product_version",
          "in" : "query",
          "description" : "Product Version / Revision number. By default the latest revision will be returned.\n\nIf set, the `cache` value will be ignored.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 1
          },
          "example" : 1
        }, {
          "name" : "cache",
          "in" : "query",
          "description" : "[CACHE] Whether the results should be loaded from the caching server. This will significantly improve performance and disabling this functionality is not recommended.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Cache",
            "type" : "boolean",
            "example" : true,
            "default" : true
          },
          "example" : true
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Detail Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductDetailResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/products/{product_id}/availability" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "List Product Availabilities",
        "description" : "The availability API is used to make sure that the product or service is available on the desired date and time slot. \n\nDepending on the `product_availability` parameter given in the product feed, the availability needs to be requested using this endpoint prior to making a booking.\n\nThis endpoint should be called in order to get up-to-date availability information for a product with managed capacity. \nThe response will contain the availability for each time slot of the requested product that lies within the specified date range. \nTime slots will not be omitted in case of no availability. Neither will a NO_AVAILABILITY error be returned in that case. Instead, an explicit vacancy of zero should be expected.\n\n**Caching Recommendations**\n\nWe only recommend caching if you would like to show availability for multiple products at once or for example hide fully booked products in a general overview page. Consider carefully whether caching is needed.\n\n\n  An example caching policy: \n  \n  * Before every order, we recommend checking the availability again to get the exact price and availability.\n  * Once per hour, update the availability for the coming week.\n  * Once per day, update the availability for the coming month.\n  * Once per week, update the availability for the coming 90 days.\n  \n  * To further improve accuracy, you could tweak intervals based on the popularity or remaining capacity of the product. For example, only regularly fetch availabilty once the remaining capacity falls below 100.\n    \n> ### Notes\n> * Dates and times are always relative to the supplier timezone and all offsets are automatically adjusted based on daylight saving time (DST).\n> * A maximum of 90 days is allowed. If you would like to batch availability for a longer period, please make multiple calls.",
        "operationId" : "getProductAvailability",
        "parameters" : [ {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "product_id",
          "in" : "path",
          "description" : "Unique identifier for the product assigned by Prio.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from_date",
          "in" : "query",
          "description" : "[FILTER] From which date availability is requested.\nIf supplied with `to_date` , then availability request is for a date range. \nIf supplied without `to_date`, then for a single date availability is requested.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "to_date",
          "in" : "query",
          "description" : "[FILTER] Till which date availability is requested.\nIf this is empty, availability will be searched for the given `from_date` only. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "include_disabled",
          "in" : "query",
          "description" : "[FILTER] Include disabled / closed (`availability_active:false`) entries. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          }
        }, {
          "name" : "availability_capacity_id",
          "in" : "query",
          "description" : "[FILTER] on `availability_capacity_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "spots_open_min",
          "in" : "query",
          "description" : "[FILTER] The minimum remaining `availability_spots_open`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "exclusiveMaximum" : false,
            "type" : "integer"
          }
        }, {
          "name" : "sub_products_depth",
          "in" : "query",
          "description" : "[FILTER] The iteration depth of the included entries of the sub-products in the response. This will not apply to sub-products which have shared capacity linked to the main product.\n\nExample Setup:\n```\nProduct 101 (Main)\n  Product 201 (Sub)\n    Product 301 (Nested)\n    Product 302 (Nested)\n  Product 202 (Sub)\n    Product 401 (Nested)\n    Product 402 (Nested)\n```\n* `sub_products_depth:0` will return Product 101.\n* `sub_products_depth:1` will return Product 101, 201 and 202.\n* `sub_products_depth:2` will return Product 101, 201, 202, 301, 302, 401 and 402.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 1,
            "default" : 0
          }
        }, {
          "name" : "party_size",
          "in" : "query",
          "description" : "[FILTER] The party size that can be accommodated during this time slot. Only applicable for selected merchants.\n",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "exclusiveMaximum" : false,
            "type" : "integer"
          }
        }, {
          "name" : "availability_modified",
          "in" : "query",
          "description" : "[FILTER] Only show entries modified after the given date.\n  \n  \n  Fetch incremental updates through this endpoint.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Availability Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailabilitiesListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/products" ]
        } ]
      }
    },
    "/availability" : {
      "get" : {
        "tags" : [ "Availability" ],
        "summary" : "List Product Availability",
        "description" : "The availability API is used to make sure that the product or service is available on the desired date and time slot. \n\nDepending on the `product_availability` parameter given in the product feed, the availability needs to be requested using this endpoint prior to making a booking.\n\nThis endpoint should be called in order to get up-to-date availability information for a product with managed capacity. \nThe response will contain the availability for each time slot of the requested product that lies within the specified date range. \n\n**Optimize response time**\n\nThe response times depend on two important factors:\n\n  1. Whether the `product_source` is PrioTicket or a third party system. If the product origin is a third party system, we heavily rely on the performance of that system as well, limiting our ability to ensure low response times. \n  2. Pagination and search complexity. The higher you set the ItemsPerPage param and the more [FILTER] values you add to the URL query, the slower the response time will be. Try to keep it to a minimum to ensure the best results.\n\n**Caching Recommendations**\n\nWe only recommend caching if you would like to show availability for multiple products at once or for example hide fully booked products in a general overview page. Consider carefully whether caching is needed.\n\n\n  An example caching policy: \n  \n  * Before every order, we recommend checking the availability again to get the exact price and availability.\n  * Once per hour, update the availability for the coming week.\n  * Once per day, update the availability for the coming month.\n  * Once per week, update the availability for the coming 90 days.\n  \n  * To further improve accuracy, you could tweak intervals based on the popularity or remaining capacity of the product. For example, only regularly fetch availabilty once the remaining capacity falls below 100.\n    \n> ### Notes\n> * Dates and times are always relative to the supplier timezone and all offsets are automatically adjusted based on daylight saving time (DST).\n> * A maximum of 90 days is allowed. If you would like to batch availability for a longer period, please make multiple calls.\n> * The retrieval of multiple products for longer date ranges can result in slower response times.  ",
        "operationId" : "getAvailability",
        "parameters" : [ {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "product_id",
          "in" : "query",
          "description" : "[FILTER] on `product_id`.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product IDs",
            "type" : "array",
            "example" : [ "PRODUCT_ID_123" ],
            "items" : {
              "title" : "Product ID",
              "type" : "string",
              "example" : "PRODUCT_ID_123"
            }
          },
          "example" : [ "PRODUCT_ID_123" ]
        }, {
          "name" : "from_date",
          "in" : "query",
          "description" : "[FILTER] From which date availability is requested.\nIf supplied with `to_date` , then availability request is for a date range. \nIf supplied without `to_date`, then for a single date availability is requested.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "to_date",
          "in" : "query",
          "description" : "[FILTER] Till which date availability is requested.\nIf this is empty, availability will be searched for the given `from_date` only. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "include_disabled",
          "in" : "query",
          "description" : "[FILTER] Include disabled / closed (`availability_active:false`) entries. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          }
        }, {
          "name" : "availability_capacity_id",
          "in" : "query",
          "description" : "[FILTER] on `availability_capacity_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order_reference",
          "in" : "query",
          "description" : "[FILTER] on `order_reference`.\n\nWhen provided with an order reference the API will automatically return the availability slots for all products within that order. This can be helpful during amendment scenarios.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "example" : "ORDRREF123456"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "spots_open_min",
          "in" : "query",
          "description" : "[FILTER] The minimum remaining `availability_spots_open`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "exclusiveMaximum" : false,
            "type" : "integer"
          }
        }, {
          "name" : "sub_products_depth",
          "in" : "query",
          "description" : "[FILTER] The iteration depth of the included entries of the sub-products in the response. This will not apply to sub-products which have shared capacity linked to the main product.\n\nExample Setup:\n```\nProduct 101 (Main)\n  Product 201 (Sub)\n    Product 301 (Nested)\n    Product 302 (Nested)\n  Product 202 (Sub)\n    Product 401 (Nested)\n    Product 402 (Nested)\n```\n* `sub_products_depth:0` will return Product 101.\n* `sub_products_depth:1` will return Product 101, 201 and 202.\n* `sub_products_depth:2` will return Product 101, 201, 202, 301, 302, 401 and 402.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 1,
            "default" : 0
          }
        }, {
          "name" : "party_size",
          "in" : "query",
          "description" : "[FILTER] The party size that can be accommodated during this time slot. Only applicable for selected merchants.\n",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "exclusiveMaximum" : false,
            "type" : "integer"
          }
        }, {
          "name" : "external_cache_policy",
          "in" : "query",
          "description" : "[CACHE] External cache policy.\n\nPrioticket stores snapshots of third-party capacity to improve response times and reduce networking latency. Using an intelligent algorithm our system can decide whether capacity can be served from our cache or a roundtrip to the third-party reservation system is required. These checks include runtime specific metrics such as last modification date, popularity of the product and date range (length and time in advance) to determine the likelihood of the capacity being changed since our last retrieval. \n\nIn most circumstances it is recommended to use the default cache policy, however using this setting you can configure an alternate behaviour. This setting is only applicable to products which source their availabilty from a third-party reservation system (`product_third_party:true`).\n<details>\n  <summary>**External Cache Policies**</summary>\n  \nPolicies:\n* `CACHE_PASS` - Force to pass the cache (Not Recommended).\n\n  Prevents stale and provides realtime data at all times. This setting is likely to cause a considerable increase in response time as one or more synchronous roundtrips are required to one or more third-party systems. These requests will be executed in parallel but our system needs to wait for the slowest performing system to respond. If any third-party system fails or does not acknowledge within the timeout window, this request will fail.\n\n* `CACHE_FORCE` - Force cache.\n\n  Always retrieve data from cache. This can be usefull when you want to batch / search a lot of products at once and allow for some data to be stale.\n Scenarios include daily batching of availability, searching for available products across your complete inventory or determining whether a product is in high or low demand.\n\n* `CACHE_DYNAMIC` - Dynamic cache (Recommended).\nOur system decides during runtime whether it is required to fetch availability directly from the source system or our own internal cache. Written rules optimize response times by automatically weighing third-party latency and cache age (stale data). Automatic fallback is configured in case of the third-party system not being available during a refresh. \n</details>\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Cache Policy",
            "type" : "string",
            "description" : "Method of caching.",
            "example" : "CACHE_DYNAMIC",
            "default" : "CACHE_DYNAMIC",
            "enum" : [ "CACHE_PASS", "CACHE_FORCE", "CACHE_DYNAMIC" ]
          }
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Availability Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailabilitiesListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/availability" ]
        } ]
      },
      "put" : {
        "tags" : [ "Availability" ],
        "summary" : "Update Product Availability Batch",
        "description" : "Update availability in bulk.\n> **Warning:** All existing timeslots between the provided `from_date` and `to_date` will be overwritten.",
        "operationId" : "updateAvailabilityBatch",
        "parameters" : [ {
          "name" : "product_id",
          "in" : "query",
          "description" : "[FILTER] on `product_id`.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product IDs",
            "maxItems" : 20,
            "type" : "array",
            "example" : [ "PRODUCT_ID_123" ],
            "items" : {
              "title" : "Product ID",
              "type" : "string",
              "example" : "PRODUCT_ID_123"
            }
          },
          "example" : [ "PRODUCT_ID_123" ]
        }, {
          "name" : "from_date",
          "in" : "query",
          "description" : "[RANGE] Date range for which availability is adjusted.\n\nWhen updating a single timeslot you should populate this field using `availability_from_date_time`.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "to_date",
          "in" : "query",
          "description" : "[RANGE] Date range till which availability is adjusted.\n\nWhen updating a single timeslot you should populate this field using `availability_to_date_time`.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "availability_capacity_id",
          "in" : "query",
          "description" : "[FILTER] on `availability_capacity_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Availability Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailabilitiesListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/availability" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Availability" ],
        "summary" : "Remove Product Availability.",
        "description" : "Delete individual timeslots or a complete collection (capacity).",
        "operationId" : "removeAvailability",
        "parameters" : [ {
          "name" : "availability_id",
          "in" : "query",
          "description" : "[FILTER] on `availability_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "availability_capacity_id",
          "in" : "query",
          "description" : "[FILTER] on `availability_capacity_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Availability Removed"
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/availability" ]
        } ]
      }
    },
    "/availability/{availability_id}" : {
      "patch" : {
        "tags" : [ "Availability" ],
        "summary" : "Update Availability Slot",
        "description" : "This API allows you to synchronize the Prioticket system with your actual capacity in realtime.",
        "operationId" : "updateAvailability",
        "parameters" : [ {
          "name" : "availability_id",
          "in" : "path",
          "description" : "The unique ID for this availability slot.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "Availability Slot ID",
            "type" : "string",
            "example" : "20191026090010006526"
          },
          "example" : "20191026090010006526"
        }, {
          "name" : "availability_spots_reserved",
          "in" : "query",
          "description" : "[PATCH] Adjusted `availability_spots_reserved`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "exclusiveMaximum" : false,
            "type" : "integer",
            "example" : 15
          },
          "example" : 15
        }, {
          "name" : "availability_spots_booked",
          "in" : "query",
          "description" : "[PATCH] Adjusted `availability_spots_booked`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "exclusiveMaximum" : false,
            "type" : "integer",
            "example" : 60
          },
          "example" : 60
        }, {
          "name" : "availability_spots_open",
          "in" : "query",
          "description" : "[PATCH] Adjusted `availability_spots_open`.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "exclusiveMaximum" : false,
            "type" : "integer",
            "example" : 10
          },
          "example" : 10
        } ],
        "responses" : {
          "202" : {
            "description" : "Product Availability Adjustment Accepted",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/availability" ]
        } ]
      }
    },
    "/reservations" : {
      "post" : {
        "tags" : [ "Reservations / Cart" ],
        "summary" : "Create Reservation / Create Cart",
        "description" : "This API is called to reserve one or multiple product(s).\n* This endpoint can also be requested for products without managed capacity.\n* This endpoint should be called only once per order. \n  Followup request such as amending the cart should be done using the 'Update Reservation` endpoint.",
        "operationId" : "createReservation",
        "requestBody" : {
          "description" : "Create Reservation Request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateReservationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Reservation Created",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationDetailResponse"
                }
              }
            },
            "links" : {
              "GetReservationByReference" : {
                "$ref" : "#/components/links/GetReservationByReference"
              },
              "DeleteBookingReservationByReference" : {
                "$ref" : "#/components/links/DeleteBookingReservationByReference"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/reservation" ]
        } ]
      }
    },
    "/reservations/{reservation_reference}" : {
      "get" : {
        "tags" : [ "Reservations / Cart" ],
        "summary" : "Reservation Details / Cart Details",
        "description" : "This API is called to get reservation details and status.\n> You are still able to retrieve the cart details for expired reservations up to 10 days.",
        "operationId" : "getReservation",
        "parameters" : [ {
          "name" : "reservation_reference",
          "in" : "path",
          "description" : "A unique identifier got in response of the create reservation API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          }
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get Reservation Detail Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationDetailResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/reservation" ]
        } ]
      },
      "put" : {
        "tags" : [ "Reservations / Cart" ],
        "summary" : "Update Reservation / Update Cart",
        "description" : "This API is called to update an existing reservation / cart.\n> This endpoint can also be requested for products without availability (`product_availability:false`) or managed capacity (`product_capacity:false`).\n\n**Cart Functionality:**\n\n * To add a product to the cart, send a `reservation_details` array item with a blank `booking_reservation_reference`.\n \n * To amend an existing booking, please send the corresponding `booking_reservation_reference` for the array item with the amended data. In this case the latest request takes precedence and therefore the quantity is always overwritten, not summed.\n \n    Only sent the booking details of those bookings you would like to amend.\n \n * To remove a product from the cart, please call the \"Remove Cart Item\" endpoint. \n \n * To only change the contact details, do not provide the `reservation_details` object in the request.\n \n * TIP: The full reservation / cart details will be returned on every request. Therefore you are able to manage the cart outside of your system if required. ReadOnly properties which are included in the response, but not allowed in the request, such as `booking_reservation_valid_until` will be ignored and can be safely sent. If you choose not to do this, make sure both carts are kept in sync.",
        "operationId" : "updateReservation",
        "parameters" : [ {
          "name" : "reservation_reference",
          "in" : "path",
          "description" : "A unique identifier for the created reservation in Prio.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update Reservation Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateReservationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Reservation Updated",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationDetailResponse"
                }
              }
            },
            "links" : {
              "GetReservationByReference" : {
                "$ref" : "#/components/links/GetReservationByReference"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/reservation" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Reservations / Cart" ],
        "summary" : "Cancel Reservation / Remove Cart Item / Empty Cart",
        "description" : "This API is called to cancel a reserved timeslot, delete products from your cart or empty the cart.\nIn case of a full cancellation, you are no longer able to amend the reservation.\nOtherwise, the updated cart will be returned.\n\nNote that (combi-)pricing might have changed.\n\n> If payment is made, funds will be automatically refunded.",
        "operationId" : "cancelReservation",
        "parameters" : [ {
          "name" : "reservation_reference",
          "in" : "path",
          "description" : "A unique identifier for the created reservation in the Prio system.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          }
        }, {
          "name" : "booking_reservation_reference",
          "in" : "query",
          "description" : "When using the Cart functionality you are able to remove individual products.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Booking Reservation References",
            "type" : "array",
            "items" : {
              "title" : "Booking Reservation Reference",
              "minLength" : 8,
              "type" : "string",
              "example" : "BOOKING_RESERVATION_REFERENCE_123"
            }
          }
        }, {
          "name" : "cancellation_reason",
          "in" : "query",
          "description" : "Optional reason for this cancellation.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "Payment declined"
        } ],
        "responses" : {
          "200" : {
            "description" : "Item(s) removed from Cart",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationDetailResponse"
                }
              }
            },
            "links" : {
              "GetReservationByReference" : {
                "$ref" : "#/components/links/GetReservationByReference"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/reservation" ]
        } ]
      }
    },
    "/reservations/{reservation_reference}/promocode" : {
      "post" : {
        "tags" : [ "Reservations / Cart" ],
        "summary" : "Add Promocode",
        "description" : "This API is called to apply promocodes on a reservation.\n\n**Promocode Functionality:**\n\n * To add a promocode to the Cart / Reservation, add the applicable promocode to the query. The promocode will automatically be added to the Cart and the updated prices will be returned in the response.\n* There could be multiple reasons for a promocode to be declined. For example, insufficient cart balance, expired, already used etc. In this case an error `INVALID_PROMOCODE` will be returned with a customer friendly message which can be shown on your front-end.",
        "operationId" : "addPromocode",
        "parameters" : [ {
          "name" : "reservation_reference",
          "in" : "path",
          "description" : "A unique identifier got in response of the reservation_reference API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "promo_code",
          "in" : "query",
          "description" : "The promocode which should be applied to the cart.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "PROMOCODE_123"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Promocode Added",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationDetailResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/orders" ]
        } ]
      }
    },
    "/reservations/{reservation_reference}/promocode/{promo_code}" : {
      "delete" : {
        "tags" : [ "Reservations / Cart" ],
        "summary" : "Remove Promocode",
        "description" : "This API is called to remove an applied promocode on a reservation.\nIf a DELETE method is successfully applied, the origin server SHOULD send a 200 (Promocode Removed) status code if the action has been enacted. The new reservation will be returned with the updated prices.\n> If a promocode or an existing order applied with a promocode is cancelled, the use count will be restored.",
        "operationId" : "removePromocode",
        "parameters" : [ {
          "name" : "reservation_reference",
          "in" : "path",
          "description" : "A unique identifier got in response of the reservation API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "RESREF123"
        }, {
          "name" : "promo_code",
          "in" : "path",
          "description" : "The promocode which should should be removed from the cart.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "PROMOCODE_123"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Promocode Removed",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationDetailResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/reservation" ]
        } ]
      }
    },
    "/orders" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "List Orders",
        "description" : "This API is meant to return a small subset of orders. By default the last 3 months are returned.\n> If you would like to retrieve all orders for Reporting / BI purposes we recommended a different approach, please contact your account manager for more information.\n\n> By default only the latest revision will be returned.\n",
        "operationId" : "getOrders",
        "parameters" : [ {
          "name" : "reseller_id",
          "in" : "query",
          "description" : "[FILTER] on `reseller_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "501"
          },
          "example" : "501"
        }, {
          "name" : "market_admin_id",
          "in" : "query",
          "description" : "[FILTER] on `market_admin_id`.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "567565856"
          },
          "example" : "74343"
        }, {
          "name" : "supplier_id",
          "in" : "query",
          "description" : "[FILTER] on `supplier_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "145"
          },
          "example" : "145"
        }, {
          "name" : "order_reference",
          "in" : "query",
          "description" : "[FILTER] on `order_reference`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "example" : "ORDRREF123456"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "order_external_reference",
          "in" : "query",
          "description" : "[FILTER] on `order_external_reference`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "EXTERNALREF123"
          },
          "example" : "EXTERNALREF123"
        }, {
          "name" : "order_status",
          "in" : "query",
          "description" : "[FILTER] on `order_status`.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "example" : [ "ORDER_CONFIRMED" ],
            "items" : {
              "$ref" : "#/components/schemas/OrderStatusTypes"
            }
          },
          "example" : [ "ORDER_CONFIRMED" ]
        }, {
          "name" : "order_contact_uid",
          "in" : "query",
          "description" : "[FILTER] on `order_contact_uid`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "f44226c0-e142-11ea-86d2-83036af9991e"
          },
          "example" : "f847dc60-aaf0-11ea-8926-471c6c723e1d"
        }, {
          "name" : "order_contact_name",
          "in" : "query",
          "description" : "[FILTER] on `order_contact_name`, `contact_name_first` and `contact_name_last`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "John Doe"
        }, {
          "name" : "order_contact_email",
          "in" : "query",
          "description" : "[FILTER] on `order_contact_email`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "email"
          },
          "example" : "JohnDoe@example.com"
        }, {
          "name" : "order_created_from",
          "in" : "query",
          "description" : "[FILTER] on `order_created`. Only the orders created from this specific date will be returned. A longer time range might increase response times.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Order Created From",
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "order_created_to",
          "in" : "query",
          "description" : "[FILTER] on `order_created`. Only the orders created till this specific date will be returned. A longer time range might increase response times.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Order Created Till",
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "order_modified",
          "in" : "query",
          "description" : "[FILTER] on `order_modified`. Only the orders modified after the given date will be returned. This includes newly created orders.\n\nFor caching purposes we recommend using the `If-Modified-Since` header instead.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Order Modified",
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "booking_reference",
          "in" : "query",
          "description" : "[FILTER] on `booking_reference`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Booking Reference",
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "BOOKINGREF123"
        }, {
          "name" : "booking_external_reference",
          "in" : "query",
          "description" : "[FILTER] on `booking_external_reference`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Booking External Reference",
            "type" : "string",
            "example" : "EXTERNALREF123"
          },
          "example" : "EXTERNALREF123"
        }, {
          "name" : "booking_travel_date_from",
          "in" : "query",
          "description" : "[FILTER] on `booking_travel_date`. Only the bookings with a travel date from this specific date will be returned. A longer time range might increase response times.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Booking Tavel Date From",
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "booking_travel_date_to",
          "in" : "query",
          "description" : "[FILTER] on `booking_travel_date`. Only the bookings with a travel date till this specific date will be returned. A longer time range might increase response times.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Booking Tavel Date Till",
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "booking_redemption_date_from",
          "in" : "query",
          "description" : "[FILTER] on `booking_redemption_date`. Only the bookings redeemed from this specific date will be returned. A longer time range might increase response times.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Booking Redemption Date From",
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "booking_redemption_date_to",
          "in" : "query",
          "description" : "[FILTER] on `booking_redemption_date`. Only the bookings redeemed till this specific date will be returned. A longer time range might increase response times.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Booking Redemption Date Till",
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "product_id",
          "in" : "query",
          "description" : "[FILTER] on `product_id`.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product IDs",
            "type" : "array",
            "example" : [ "PRODUCT_ID_123" ],
            "items" : {
              "title" : "Product ID",
              "type" : "string",
              "example" : "PRODUCT_ID_123"
            }
          },
          "example" : [ "PRODUCT_ID_123" ]
        }, {
          "name" : "product_type_code",
          "in" : "query",
          "description" : "[FILTER] on `product_type_code`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "1539762088951995"
        }, {
          "name" : "product_availability_id",
          "in" : "query",
          "description" : "[FILTER] on `product_availability_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "20191026090010006526"
        }, {
          "name" : "product_availability_capacity_id",
          "in" : "query",
          "description" : "[FILTER] on `product_availability_capacity_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "20191026090010006526"
        }, {
          "name" : "product_class",
          "in" : "query",
          "description" : "[FILTER] on Product Class (`product_class`).\n<details>\n  <summary>**Product Classes**</summary>\n  \n  * `STANDARD` - Product types in the standard class are the most common and are supported by almost all systems.\n  \n  * `COMBI` - Product is a combi-product. This product is the main combi product and is not bookable on its own. All of the sub-products linked to this combi should be booked as well. These products are listed inside `product_combi_details`.\n  \n  * `CLUSTER` - Product is a cluster-product. This product is the main cluster product and is not bookable. One of the sub-products linked to this cluster should be booked instead. These products are listed inside `product_cluster_details`.\n  \n  * `MERCHANDISE` - \n  \n  * `BUNDLE` - Product is a bundle-product. This product is the main bundle product and is not bookable on its own. All of the sub-products linked to this bundle should be booked as well. These products are listed inside `product_bundle_details`.\n  \n  * `OTHER` - Products in the other/custom class are completely dynamic.\n\n</details>",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Class",
            "type" : "array",
            "example" : [ "STANDARD", "CLUSTER", "COMBI", "MERCHANDISE" ],
            "items" : {
              "title" : "Product Class",
              "type" : "string",
              "example" : "STANDARD",
              "enum" : [ "STANDARD", "COMBI", "CLUSTER", "MERCHANDISE", "BUNDLE", "OTHER" ]
            }
          },
          "example" : [ "STANDARD", "COMBI", "MERCHANDISE" ]
        }, {
          "name" : "order_created_email",
          "in" : "query",
          "description" : "[FILTER] on `order_created_email`. Only the orders made by this user / cashier will be returned.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "examplecashier@prioticket.com"
        }, {
          "name" : "order_search_query",
          "in" : "query",
          "description" : "[SEARCH] on keywords. This API provides full-text (wildcard) search capabilities. \n\nOnly results linked to your account will be returned and searching is only available in case cache is enabled (`cache:true`)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Search Query",
            "type" : "string"
          }
        }, {
          "name" : "filter_bookings",
          "in" : "query",
          "description" : "[CONFIG] Filter (sub) bookings from response. \n\nWhether to include all bookings belonging to the same order or only those matching the defined filters. By default the system will return every booking of an order, regardless whether some of those bookings do not match the defined filters.\n\nFor example. when a filter for `product_id` is set, only orders which contain that product will be returned, but additional bookings (for different product IDs) of that same order might be listed as well.\nBy enabling this filter, only bookings for that `product_id` would be returned.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          },
          "example" : false
        }, {
          "name" : "partner_sales",
          "in" : "query",
          "description" : "[FILTER] on partner sales.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          },
          "example" : false
        }, {
          "name" : "order_view_type",
          "in" : "query",
          "description" : "[CONFIG] **(ADVANCED)** account view type.\n\nThis value defaults and is limited to the scope of your credentials.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Account Type",
            "type" : "string",
            "example" : "DISTRIBUTOR",
            "deprecated" : true,
            "enum" : [ "GUEST", "PARTNER", "DISTRIBUTOR", "RESELLER", "PLATFORM", "SUPER_ADMIN", "MARKET_ADMIN", "SUPPLIER_ADMIN", "SUPPLIER" ]
          },
          "example" : "DISTRIBUTOR"
        }, {
          "name" : "order_sort_by",
          "in" : "query",
          "description" : "[SORT] Select sorting method.\n\nUPCOMING: [INVOICE_DATE].",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Order Sort By",
            "type" : "string",
            "description" : "Method of sorting.",
            "example" : "ORDER_CREATED",
            "default" : "ORDER_CREATED",
            "enum" : [ "ORDER_CREATED", "ORDER_MODIFIED", "REDEMPTION_DATE", "TRAVEL_DATE", "SEARCH_RELEVANCE" ]
          },
          "example" : "ORDER_CREATED"
        }, {
          "name" : "order_sort_order",
          "in" : "query",
          "description" : "[SORT] Keyword used to sort result sets in either ascending or descending order.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Order Sort Order",
            "type" : "string",
            "description" : "Order of sorting.",
            "example" : "ASC",
            "default" : "DESC",
            "enum" : [ "ASC", "DESC" ]
          },
          "example" : "ASC"
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "example" : 5,
            "default" : 10
          },
          "example" : 5
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "cache",
          "in" : "query",
          "description" : "[CACHE] Whether the results should be loaded from the caching server. This will significantly improve performance and disabling this functionality is not recommended.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Cache",
            "type" : "boolean",
            "example" : true,
            "default" : true
          },
          "example" : true
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get Orders Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderListResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/orders" ]
        } ]
      },
      "post" : {
        "tags" : [ "Orders" ],
        "summary" : "Create Order / Confirm Reservation / Checkout Cart",
        "description" : "This API is called to book / confirm product(s) and get a barcode / QR-code in response.\n\nCreating an order triggers a payment obligation. Make sure that you received the money from the guest and please note that some products are non-refundable. Do not create an order if its not certain that the product will be purchased.\n\nMake sure that you cross-check the `order_pricing.price_total` with the amount charged to the guest. Mismatches might indicate missing fees or discounts, causing financial mismatches between our systems. We recommend aborting the booking process in case this happens.\n\n---\n## **Booking Options**\n\n**Direct Booking** \n\n  + Direct booking of a product without availability (`product_availability:false`) and no traveldate (`product_traveldate_required:false`) (non-dated, no capacity ticket)\n  \n  + Direct booking of a product without availability (`product_availability:false`) and required traveldate (`product_traveldate_required:true`) (dated, unlimited capacity ticket)\n  \n  + Direct booking of a product with availability (`product_availability:true`) and with or without capacity (`product_capacity:true/false`).\n  \n  > * Adding a promotional code to a Direct Booking is not supported.\n  > * Direct payment settlement with a Direct Booking is not supported.\n  \n**Confirm Reservation / Checkout Cart**\n\n  + Booking of product(s) with a `reservation_reference` (Confirmation of an active reservation (Confirm and Order)). This can be any product with any configuration.\n\n> Please note that multiple types of **Direct Booking** can be made at once, but only a single **Confirm Reservation** at a time is supported. Would you wish to confirm multiple reserved products at once, please put multiple bookings in a single reservation (Cart). You can not \"mix\" different booking options (**Direct Booking** && **Confirm Reservation**) in the same request.\n  Therefore only multiple entries of the **Direct Booking** option is being supported.\n  \n> * In case multiple products are to be booked, if any of them are unavailable, the whole order will be declined.\n> * You are unable to combine products with different base currencies in the same order.",
        "operationId" : "createOrder",
        "requestBody" : {
          "description" : "Create Order Request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOrderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Order Created",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDetailResponse"
                }
              }
            },
            "links" : {
              "GetOrderByOrderReference" : {
                "operationId" : "getOrder",
                "parameters" : {
                  "order_reference" : "$response.body#/order_reference"
                },
                "description" : "The `order_reference` value returned in the response can be used as the `order_reference` parameter in `GET /orders/{order_reference}`.\n"
              },
              "UpdateOrderByOrderReference" : {
                "operationId" : "updateOrder",
                "parameters" : {
                  "order_reference" : "$response.body#/order_reference"
                },
                "description" : "The `order_reference` value returned in the response can be used as the `order_reference` parameter in `PUT /orders/{order_reference}`.\n"
              },
              "CancelOrderByOrderReference" : {
                "operationId" : "cancelOrder",
                "parameters" : {
                  "order_reference" : "$response.body#/order_reference"
                },
                "description" : "The `order_reference` value returned in the response can be used as the `order_reference` parameter in `DELETE /orders/{order_reference}`.\n"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "402" : {
            "description" : "Payment Required\n\nThe current payment state is invalid or the credit limit has been reached.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "PAYMENT_REQUIRED",
                  "error_description" : "The provided payment details are invalid.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/orders" ]
        } ]
      }
    },
    "/orders/{order_reference}" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "Order Details",
        "description" : "This API is called to get order details and status.",
        "operationId" : "getOrder",
        "parameters" : [ {
          "name" : "order_reference",
          "in" : "path",
          "description" : "A unique identifier got in response of booking API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "example" : "ORDRREF123456"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "order_version",
          "in" : "query",
          "description" : "Order Version / Revision number. By default the latest revision will be returned.\n\nIf set, the `cache` value will be ignored.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 1
          },
          "example" : 1
        }, {
          "name" : "cache",
          "in" : "query",
          "description" : "[CACHE] Whether the results should be loaded from the caching server. This will significantly improve performance and disabling this functionality is not recommended.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Cache",
            "type" : "boolean",
            "example" : true,
            "default" : true
          },
          "example" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Get Order Detail Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDetailResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDetailResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDetailResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/orders" ]
        } ]
      },
      "put" : {
        "tags" : [ "Orders" ],
        "summary" : "Update / Amend Order",
        "description" : "This API is called to update an order or booking. Regular users should only update basic order details such as contact information.\nFor requesting other timeslots or changing the booking count, we recommend that you cancel the current order and rebook.\n> Make sure that you provide the complete top-level order object and that all original fields with either the current or amended values (e.g. `order_distributor_id`, `order_external_reference`, all `order_contacts` etc) are sent,  missing (optional) fields will be removed from our records. Note that the opposite is true for `order_bookings`, only the bookings you would like to amend should be provided (see advanced functionality below).\n---\n### **Advanced Functionality**\n<details>\n  <summary>**Amending confirmed orders**</summary>\n\n  We always recommend that you do a full cancellation and create a new order in case of amendments.\n  \n  Alternatively we have the advanced method of amending an existing order with the following benefits:\n  \n  * Versioning history on order and booking level.\n  \n  * Best effort algorithm to retain your existing vouchers or adding additional bookings to your combi-passes.\n  \n  * Payment credit system where existing payments are stored for later purchases.\n  \n  * Keeping the same `order_reference`.\n  \n  \n  In case you would like to fully amend an existing order, but retain the same `order_reference`, you can sent the amended booking details with the same `booking_reference` in the request. The original booking will be fully replaced with the newly created (confirmed) booking and therefore you can follow the same approach as you would normally do when creating new orders using the direct booking method, but with the following differences:\n  \n  * Products that were not in the original order, but found in the amendment request will be added (Add booking to existing order). This allows to easily upsell existing orders and in advanced scenarios add products to the same group / combi codes.\n  \n  * Products with amended quantity will be either partially cancelled or additionally added. Note that we will NOT take into the account the capacity difference.\n    \n    For example if the original booking contains 4 tickets and the remaining capacity prior to the amendment is 2, you are NOT able to upsell towards 6 tickets. Although that there would be sufficient remaining capacity to book the additional 2 tickets, the total required capacity (in this case 6) should be equal or less than the current remaining capacity.\n    \n    We have done this on purpose to prevent concurrency issues when for example the cancellation is delayed and capacity is not released immediately, causing your amendment to fail.\n    This also allows us to block (reserve) your new products first, then cancel your original booking, making sure you never 'lose' your tickets in case of an error.\n    \n  * The total payment difference will be calculated and will be either charged or (partially) refunded. Please note that in case of a surcharge, you might be required to submit an additional payment based on your settlement method and payment configuration.\n  \n    Note that all payments linked to the original order will be returned as well, regardless of the `order_version`.\n  \n  * The `order_reference` and `booking_reference` will be retained and as such the versions will be updated as `order_version + 1` and only the amended booking will be set to `booking_version + 1`.\n  \n  * If the original order contained price variations such as cart discounts, partner discounts or promocodes, those will be re-applied on the amended order as well if applicable.\n  \n  * All booking and cancellation restrictions still apply, if you try to amend any non-cancellable products from the original order (implicitly indicating that you want to cancel those) the request will fail. Similarly you are discouraged (and often not allowed) to cancel any bookings that have already been redeemed. \n  \n    Furthermore, bookings that were already cancelled in the original order should not be passed in the new request. Therefore they will also not be included in the new version.\n    \n  * In case the bookings were already invoiced, the original booking will be credited and a new invoice will be created.\n  \n  * In case a product cannot be cancelled nor amended but additional guests are added, we might create a second booking for the same product.\n  \n  * In case of amendments we have a best effort algorithm to retain the current voucher (codes), but depending on the product, some vouchers will be invalidated and replaced.\n  \n  > Bookings will be directly amended using the direct booking concept, you are unable to revert this action. For third-party products we are heavily relying on their system capabilities. Some do not support amendments and therefore a swift cancel and re-book (with or without capacity block) is required instead.\n    This means that the failure rate on this API can be slightly higher than usual.\n    \n  > It is important that you only sent the booking objects of the bookings you would like to amend, our system does not check which changes are made, instead we simply cancel the original booking and replace it with a new booking.\n\n</details>",
        "operationId" : "updateOrder",
        "parameters" : [ {
          "name" : "order_reference",
          "in" : "path",
          "description" : "A unique identifier got in response of booking API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "price_adjustment",
          "in" : "query",
          "description" : "The system will adjust the price, either increasing it (AMENDMENT_DISCOUNT) or decreasing it (AMENDMENT_SURCHARGE). When set to false the price will not be adjusted and a pending payment record will be inserted.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : false
        }, {
          "name" : "price_adjustment_applicable_on_reseller",
          "in" : "query",
          "description" : "Whether to solely allocate the price adjustment to the reseller.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : false
        }, {
          "name" : "preview",
          "in" : "query",
          "description" : "The system will not process the order, instead it will return a preview of the requested amendment allowing for review.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : false
        } ],
        "requestBody" : {
          "description" : "Update Order Request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated order",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDetailResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/orders" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Orders" ],
        "summary" : "Cancel Order / Booking",
        "description" : "This API is called to (partial) cancel an order/ booking.\nIn case of a full cancellation, you are no longer able to amend the order. Otherwise, the updated order will be returned.\n\nAgain, to avoid mismatches and validate a correct implementation, make sure you compare the returned `order_pricing.price_total`. \n\nWhen cancelling a booking, it's recommended to provide a valid reason for the cancellation. This is done by including a valid reason in the request.\n\n> This API can only be called for bookings with `product_cancellation_allowed:true`. In case your order contains non-cancellable products, a full cancellation will result in an error. You will still be able to do partial-cancellations for those bookings with cancellable products.",
        "operationId" : "cancelOrder",
        "parameters" : [ {
          "name" : "order_reference",
          "in" : "path",
          "description" : "In case only the `order_reference` is provided, a full cancellation will be made.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "Order Reference",
            "minLength" : 8,
            "type" : "string",
            "description" : "Order reference.",
            "example" : "ORDRREF123456"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "booking_reference",
          "in" : "query",
          "description" : "[FILTER] In case the `booking_reference` is provided, a partial cancellation will be made. Only the specified booking(s) will be cancelled.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Booking References",
            "type" : "array",
            "example" : [ "BOOKING_REFERENCE_123" ],
            "items" : {
              "title" : "Booking Reference",
              "minLength" : 8,
              "type" : "string",
              "example" : "BOOKING_REFERENCE_123"
            }
          },
          "example" : [ "BOOKING_REFERENCE_123" ]
        }, {
          "name" : "product_type_transaction_id",
          "in" : "query",
          "description" : "[FILTER] **(ADVANCED)** In case the `product_type_transaction_id` is provided, a partial cancellation will be made. Only the specified transaction(s) will be cancelled.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Type Transaction IDs",
            "type" : "array",
            "example" : [ "159118380521834001" ],
            "items" : {
              "title" : "Product Type Transaction ID",
              "type" : "string",
              "description" : "Transaction ID of this product type.",
              "example" : "159118380521834001"
            }
          },
          "example" : [ "159118380521834001" ]
        }, {
          "name" : "cancellation_reason",
          "in" : "query",
          "description" : "[INFO] Optional reason for this cancellation.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "Payment declined."
          },
          "example" : "Payment declined."
        }, {
          "name" : "payment_refund",
          "in" : "query",
          "description" : "[CONFIG] Whether the guest payment should be refunded. In case the order is partially cancelled, the amount will be partially refunded as well. If multiple payments are made (split-payment) then all linked payments will be refunded. This value will be ignored in case no payment is made.\n\nFor more flexible refunds you could use the Cancel / Refund Payment API instead.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : true,
            "default" : true
          },
          "example" : true
        }, {
          "name" : "override_third_party_policy",
          "in" : "query",
          "description" : "[CONFIG] If the third-party system does not permit order cancellations, you can still cancel the order within the Prioticket system. \nHowever, please be aware that this may result in a discrepancy between the systems. Use this option with caution.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          },
          "example" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Item(s) removed from order",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDetailResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/orders" ]
        } ]
      }
    },
    "/orders/{order_reference}/voucher" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "Get Voucher",
        "description" : "Get a valid voucher / ticket in PDF format.\n\nSome third party reservation systems are unable to provide the voucher codes in a string format, instead you can obtain the PDF file using this API.\nThis endpoint can also be used in case the voucher is not released directly upon booking confirmation.\n> Please note that by sending the correct Media Type header you can define whether to receive a download URL (`application/json`) or an encoded PDF file directly (`application/pdf`).\n",
        "operationId" : "getVoucher",
        "parameters" : [ {
          "name" : "order_reference",
          "in" : "path",
          "description" : "A unique identifier got in response of booking API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "Order Reference",
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "booking_reference",
          "in" : "query",
          "description" : "A unique identifier got in response of booking API.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Booking Reference",
            "minLength" : 8,
            "type" : "string",
            "example" : "BOOKING_REFERENCE_123"
          },
          "example" : "BOOKINGREF123"
        }, {
          "name" : "voucher_additional_information",
          "in" : "query",
          "description" : "This information will be shown on the voucher in a seperate section.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Additional Information",
            "type" : "string",
            "example" : "Last minute info."
          }
        }, {
          "name" : "force_release",
          "in" : "query",
          "description" : "Force release of the voucher if the booking is still pending.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Force Voucher Release",
            "type" : "boolean",
            "example" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A PDF file",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoucherResponseJSON"
                }
              },
              "application/pdf" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetVoucherResponsePDF"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/orders/voucher" ]
        } ]
      }
    },
    "/orders/{order_reference}/deidentify" : {
      "put" : {
        "tags" : [ "Orders" ],
        "summary" : "De-identify Order",
        "description" : "This API is called to de-identify customer information on an order. \n\nThis endpoint is making use of pseudonymization which is a de-identification technique that replaces sensitive data values with cryptographically generated tokens. Pseudonymization is widely used in industries like finance and healthcare to help reduce the risk of data in use, narrow compliance scope, and minimize the exposure of sensitive data to systems while preserving data utility and accuracy.\n> Requests for \"right to be forgotten (RTBF)\" can be facilitated by this endpoint.",
        "operationId" : "deidentifyOrder",
        "parameters" : [ {
          "name" : "order_reference",
          "in" : "path",
          "description" : "A unique identifier got in response of booking API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "ORDRREF123456"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated order",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDetailResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/orders" ]
        } ]
      }
    },
    "/payments" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "List Payments",
        "description" : "This API is called to list all payments in your account.\n",
        "operationId" : "getPayments",
        "parameters" : [ {
          "name" : "order_reference",
          "in" : "query",
          "description" : "[FILTER] on `order_reference`. You can also pass the `reservation_reference` in this field.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "payment_id",
          "in" : "query",
          "description" : "[FILTER] on `payment_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "format" : "uuid",
            "example" : "de1829d0-e144-11ea-bc09-f935c77bef95"
          },
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        }, {
          "name" : "payment_merchant_reference",
          "in" : "query",
          "description" : "[FILTER] on `payment_merchant_reference`.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        }, {
          "name" : "payment_service_provider_reference",
          "in" : "query",
          "description" : "[FILTER] on `payment_service_provider_reference`.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        }, {
          "name" : "payment_external_reference",
          "in" : "query",
          "description" : "[FILTER] on `payment_external_reference`.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "SHOPPER_REFERENCE"
          },
          "example" : "SHOPPER_REFERENCE"
        }, {
          "name" : "payment_class",
          "in" : "query",
          "description" : "**(ADVANCED)** By default sales payments will be returned. Alternatively you can also retrieve the purchase related payments.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaymentClass"
          },
          "example" : "SALES"
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "example" : 5,
            "default" : 10
          },
          "example" : 5
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get Payments Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentListResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/payments" ]
        } ]
      },
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "Create Payment",
        "description" : "This API is called to initiate a payment on a Prio connected PSP or to settle a manual payment.  This is a required step if `SettlementType:DIRECT`. \n> * Only applicable to guest payments. Not applicable to B2B resellers (Indirect sales / `SettlementType:EXTERNAL`).\n> * Once a payment has been made you are unable to amend the reservation.\n",
        "operationId" : "addPayment",
        "parameters" : [ {
          "name" : "order_reference",
          "in" : "query",
          "description" : "If only a `order_reference` is provided, a full payment will be registered and all bookings will be automatically paid. You can also pass the `reservation_reference` in this field.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "booking_reference",
          "in" : "query",
          "description" : "**(ADVANCED)** In case a `booking_reference` is provided, a partial payment will be registered. Only the specified booking will be paid.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Booking References",
            "type" : "array",
            "example" : [ "BOOKING_REFERENCE_123" ],
            "items" : {
              "title" : "Booking Reference",
              "minLength" : 8,
              "type" : "string",
              "example" : "BOOKING_REFERENCE_123"
            }
          },
          "example" : [ "BOOKING_REFERENCE_123" ]
        }, {
          "name" : "payment_class",
          "in" : "query",
          "description" : "**(ADVANCED)** By default the sales amount will be settled via this API. Alternatively you can also settle the outstanding purchase amount of an order or create an unreferenced payment (e.g. a deposit) which can be allocated to an order or invoice later on.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaymentClass"
          },
          "example" : "SALES"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreatePaymentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Make Payment Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreatePaymentResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Payment initiated, result will be notified on the set `return_url`.",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "callbacks" : {
          "payment" : {
            "{$request.body#/return_url}" : {
              "post" : {
                "summary" : "Payment Result",
                "description" : "This notification is sent if a payment result is available.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "title" : "Sample N-Genius Payment Response",
                        "required" : [ "resultCode" ],
                        "type" : "object",
                        "properties" : {
                          "resultCode" : {
                            "title" : "Result Code",
                            "type" : "string",
                            "description" : "Provides information about the result of the request.",
                            "readOnly" : true,
                            "example" : "Authorised"
                          }
                        },
                        "example" : "{\n  \"result_code\": \"Authorised\"\n}\n"
                      }
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, we will consider the host to be down immediately. As queued notification are not applicable for this action.\n\nWe'll not retry sending the notication and an automatic refund will be initiated for the recent payment.\n"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/payments" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Payments" ],
        "summary" : "Cancel / Refund Payment",
        "description" : "This API is called to Cancel / Refund your payment. Only use this API to cancel a payment in progress, e.g. a payment initiated on a payment terminal, or to refund a payment without cancelling the order.\n\nIn case you would like to cancel AND refund you can simply call the Cancel Reservation or the Cancel Order API (`payment_refund:true`) which will refund the payment automatically (also upon auto-cancellation due to reservation expiry). Any card authorizations or blocks will be released as well.\n\nEither the `order_reference`, `booking_reference`, `product_type_transaction_id`, `payment_id`, `payment_merchant_reference` or `payment_service_provider_reference` is required to identify the payment(s) to refund. If provided, only the matching payment(s) will be refunded.",
        "operationId" : "cancelPayment",
        "parameters" : [ {
          "name" : "order_reference",
          "in" : "query",
          "description" : "A unique order / reservation reference. If provided, all payments linked to this order will be refunded.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "example" : "ORDRREF123456"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "booking_reference",
          "in" : "query",
          "description" : "**(ADVANCED)** In case a `booking_reference` is provided, a partial refund will be registered. Only the specified booking will be refunded.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Booking References",
            "type" : "array",
            "example" : [ "BOOKING_REFERENCE_123" ],
            "items" : {
              "title" : "Booking Reference",
              "minLength" : 8,
              "type" : "string",
              "example" : "BOOKING_REFERENCE_123"
            }
          },
          "example" : [ "BOOKING_REFERENCE_123" ]
        }, {
          "name" : "product_type_transaction_id",
          "in" : "query",
          "description" : "**(ADVANCED)** In case the `product_type_transaction_id` is provided, a partial refund will be made. Only the specified transaction(s) will be refunded.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Product Type Transaction IDs",
            "type" : "array",
            "example" : [ "159118380521834001" ],
            "items" : {
              "title" : "Product Type Transaction ID",
              "type" : "string",
              "description" : "Transaction ID of this product type.",
              "example" : "159118380521834001"
            }
          },
          "example" : [ "159118380521834001" ]
        }, {
          "name" : "payment_id",
          "in" : "query",
          "description" : "Unique Payment ID set by the Prio system. This is an internal identifier.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "format" : "uuid",
            "example" : "de1829d0-e144-11ea-bc09-f935c77bef95"
          },
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        }, {
          "name" : "payment_merchant_reference",
          "in" : "query",
          "description" : "Unique (external) payment reference set by the merchant / (third) party / POS system initiating the payment. ",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "example" : "1478349849927_771663371"
          },
          "example" : "1478349849927_771663371"
        }, {
          "name" : "payment_service_provider_reference",
          "in" : "query",
          "description" : "Reference set by payment service provider",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "example" : "852596799876396F"
          },
          "example" : "852596799876396F"
        }, {
          "name" : "refund_amount",
          "in" : "query",
          "description" : "**(ADVANCED)** Amount of money to be refunded. If not provided, the full amount will be refunded.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "20.50"
          },
          "example" : "20.50"
        }, {
          "name" : "refund_reason",
          "in" : "query",
          "description" : "Reason for this refund.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Refund Reason",
            "type" : "string",
            "description" : "Refund reason.",
            "example" : "Guest reimbursement"
          },
          "example" : "Guest reimbursement"
        } ],
        "responses" : {
          "200" : {
            "description" : "Payment Cancelled / Refunded",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentDetailsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/payments" ]
        } ]
      }
    },
    "/payments/config" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get Payment Configuration",
        "description" : "This API is called to get available payment methods and configuration from a Prio PSP. ",
        "operationId" : "getPaymentConfig",
        "parameters" : [ {
          "name" : "payment_gateway_type",
          "in" : "query",
          "description" : "Selected payment service provider.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaymentGatewayType"
          },
          "example" : "ADYEN"
        }, {
          "name" : "order_reference",
          "in" : "query",
          "description" : "[FILTER] Some payment service providers allow to filter payment methods / configuration based on for example shopper region and order value. If a `order_reference` or `reservation_reference` is provided, such details will be sent forward to the PSP system.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Order Reference",
            "minLength" : 8,
            "type" : "string",
            "description" : "Order reference.",
            "example" : "ORDRREF123456"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "payment_external_reference",
          "in" : "query",
          "description" : "[FILTER] Return the stored payment methods for a specific (returning) shopper (`payment_recurring:true`).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "SHOPPER_REFERENCE"
          },
          "example" : "SHOPPER_REFERENCE"
        } ],
        "responses" : {
          "200" : {
            "description" : "Payment Configuration",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentConfig"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/payments" ]
        } ]
      }
    },
    "/payments/email" : {
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "Sent Payment Email",
        "description" : "This API allows to sent a payment email. \n\nEmail Recipient rules:\n1. If set, we sent to the first `contact_type:PAYMENT`.\n2. Otherwise, if set, we sent to the first `contact_type:BOOKER`.\n3. Otherwise, if set, we sent to the first `contact_type:CONTACT`.\n4. If none of the above are set, we sent to the first contact in the array.\n5. If no contacts are provided, an error will be returned.",
        "operationId" : "sentPaymentEmail",
        "parameters" : [ {
          "name" : "order_reference",
          "in" : "query",
          "description" : "Order reference for which the payment email should be sent. You can also pass the `reservation_reference` in this field.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Order Reference",
            "type" : "string",
            "example" : "ORDRREF123456"
          },
          "example" : "ORDRREF123456"
        }, {
          "name" : "booking_reference",
          "in" : "query",
          "description" : "Specific booking reference for which the payment email should be sent.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minLength" : 8,
            "type" : "string"
          },
          "example" : "BOOKINGREF123"
        } ],
        "responses" : {
          "204" : {
            "description" : "Payment email sent",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/payments" ]
        } ]
      }
    },
    "/payments/{payment_id}/details" : {
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "Submit Additional Payment Details",
        "description" : "This API allows to submit additional payment details. Only applicable to merchants using the Adyen Marketplace. [More Information](https://docs.adyen.com/checkout/drop-in-web#step-4-additional-front-end)",
        "operationId" : "addPaymentDetails",
        "parameters" : [ {
          "name" : "payment_id",
          "in" : "path",
          "description" : "A unique identifier got in response of the create payment API.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "format" : "uuid",
            "example" : "de1829d0-e144-11ea-bc09-f935c77bef95"
          },
          "example" : "de1829d0-e144-11ea-bc09-f935c77bef95"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdyenSetPaymentDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successful payment response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubmitPaymentDetailsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/payments" ]
        } ]
      }
    },
    "/contacts" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "List Contacts",
        "description" : "Get list of contacts.",
        "operationId" : "getContacts",
        "parameters" : [ {
          "name" : "reseller_id",
          "in" : "query",
          "description" : "[FILTER] on `reseller_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : 501
        }, {
          "name" : "distributor_id",
          "in" : "query",
          "description" : "[FILTER] on `distributor_id`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : 501
        }, {
          "name" : "contact_type",
          "in" : "query",
          "description" : "[FILTER] on `contact_type`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ContactType"
          },
          "example" : "GUEST"
        }, {
          "name" : "contact_external_uid",
          "in" : "query",
          "description" : "[FILTER] on `contact_external_uid`.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "5330d6d0-cb34-11ea-8e26-095824377b3f"
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "example" : 5,
            "default" : 10
          },
          "example" : 5
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "If-Modified-Since",
            "type" : "string",
            "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
          },
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get Contacts Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactListResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
            "headers" : {
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/contacts" ]
        } ]
      }
    },
    "/contacts/{contact_uid}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Contact Details",
        "description" : "Get contact details.",
        "operationId" : "getContact",
        "parameters" : [ {
          "name" : "contact_uid",
          "in" : "path",
          "description" : "Unique Contact ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "format" : "uuid",
            "example" : "f44226c0-e142-11ea-86d2-83036af9991e"
          },
          "example" : "f44226c0-e142-11ea-86d2-83036af9991e"
        }, {
          "name" : "include_versions",
          "in" : "query",
          "description" : "[CONFIG] Include all contact revisions.",
          "required" : false,
          "deprecated" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Get Contact Detail Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactDetailResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/contacts" ]
        } ]
      },
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "Update Contact",
        "description" : "This API is called to update an existing contact.\n\n**Contact Functionality:**\n \n * To amend an existing contact, please send the corresponding `contact_uid` in both the path as well as the body parameter with the amended data. In this case the latest request takes precedence and therefore the data is always overwritten, not merged.\n \n * TIP: The contact details will be returned on every request. Therefore you are able to merge and combine all data on your side manually.\n \n > Please note that this API will not amend the contact details of individual orders by default. To amend the contact details of an order, please pass the corresponding order references as well.",
        "operationId" : "updateContact",
        "parameters" : [ {
          "name" : "contact_uid",
          "in" : "path",
          "description" : "Unique Contact ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "title" : "Contact UID",
            "minLength" : 8,
            "type" : "string",
            "format" : "uuid",
            "example" : "f44226c0-e142-11ea-86d2-83036af9991e"
          },
          "example" : "f44226c0-e142-11ea-86d2-83036af9991e"
        }, {
          "name" : "order_reference",
          "in" : "query",
          "description" : "By default, previous orders will not be amended. If you would like to update existing orders to the latest contact version, please include these here as well.\n  If the contact was not linked to the order yet, it will be added.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "title" : "Order References",
            "type" : "array",
            "example" : [ "ORDRREF123456", "ORDRREF12345678" ],
            "items" : {
              "title" : "Order Reference",
              "type" : "string",
              "example" : "ORDRREF123456"
            }
          }
        } ],
        "requestBody" : {
          "description" : "Update Contact Request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateContactRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Update Contact Response",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactDetailResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/contacts" ]
        } ]
      }
    },
    "/webhooks" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "List Webhooks",
        "description" : "List all webhooks.",
        "operationId" : "getWebhooks",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "query",
          "description" : "[FILTER] on webhook (`webhook_id`).",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "title" : "Webhook ID",
            "type" : "string",
            "description" : "Webhook ID.",
            "example" : "cf3bf1c0-0123-11ed-bb92-8dd6d349e28e"
          },
          "example" : "cf3bf1c0-0123-11ed-bb92-8dd6d349e28e"
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "example" : 5,
            "default" : 10
          },
          "example" : 5
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "List all webhooks",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/webhooks" ]
        } ]
      },
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Create Webhook",
        "description" : "Add webhook to receive events.",
        "operationId" : "addWebhook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateWebhookRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Webhook created",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateWebhookResponse"
                }
              }
            },
            "links" : {
              "removeWebhook" : {
                "operationId" : "removeWebhook",
                "description" : "The `webhook_id` value returned in the response can be used as the `webhook_id` parameter in `DELETE /webhooks/{webhook_id}`. parameters:\n  webhook_id: $response.body#/webhook_id\n"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "callbacks" : {
          "products" : {
            "{$request.body#/webhook_url}" : {
              "put" : {
                "summary" : "Product Updated",
                "description" : "This notification is sent if a product has been updated.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/ProductDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              },
              "post" : {
                "summary" : "Product Created / Assigned",
                "description" : "This notification is sent if a product has been created or assigned to your account.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/ProductDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              },
              "delete" : {
                "summary" : "Product Deleted / Unassigned",
                "description" : "This notification is sent if a product has been deleted or unassigned from your account.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/ProductDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              }
            }
          },
          "categories" : {
            "{$request.body#/webhook_url}" : {
              "post" : {
                "summary" : "Category Changed",
                "description" : "This notification is sent if categories have changed.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/DistributorProductCategoriesResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "deprecated" : true,
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              }
            }
          },
          "locations" : {
            "{$request.body#/webhook_url}" : {
              "post" : {
                "summary" : "Location Changed",
                "description" : "This notification is sent if locations have changed.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/LocationListResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "deprecated" : true,
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              }
            }
          },
          "availability" : {
            "{$request.body#/webhook_url}" : {
              "post" : {
                "summary" : "Availability Changed",
                "description" : "This notification is sent if availability / capacity has changed.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/AvailabilitiesListResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "deprecated" : true,
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              }
            }
          },
          "orders" : {
            "{$request.body#/webhook_url}" : {
              "put" : {
                "summary" : "Order Updated",
                "description" : "This notification is sent if an order has been updated or the status has changed (excluding payments and cancellations).",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/OrderDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              },
              "post" : {
                "summary" : "Order Created",
                "description" : "This notification is sent if an order has been created.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/OrderDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              },
              "delete" : {
                "summary" : "Order (partially) Cancelled",
                "description" : "This notification is sent if an order has been (partially) cancelled.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/OrderDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              }
            }
          },
          "payments" : {
            "{$request.body#/webhook_url}" : {
              "post" : {
                "summary" : "Payment Created",
                "description" : "This notification is sent if a payment has been created. This also triggers for asynchronous PSP payment confirmations.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/PaymentDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              },
              "delete" : {
                "summary" : "Payment Cancelled / Refunded",
                "description" : "This notification is sent if a payment has been cancelled or refunded.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/PaymentDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              }
            }
          },
          "contacts" : {
            "{$request.body#/webhook_url}" : {
              "put" : {
                "summary" : "Contact Updated",
                "description" : "This notification is sent if a contact has been updated.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/ContactDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "deprecated" : true,
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              },
              "post" : {
                "summary" : "Contact Created",
                "description" : "This notification is sent if a contact has been created.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/ContactDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "deprecated" : true,
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              }
            }
          },
          "vouchers" : {
            "{$request.body#/webhook_url}" : {
              "post" : {
                "summary" : "Voucher Released",
                "description" : "This notification is sent if a voucher has been allocated.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/GetVoucherResponseJSON"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              },
              "delete" : {
                "summary" : "Voucher Revoked",
                "description" : "This notification is sent if a voucher has been revoked.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/GetVoucherResponseJSON"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "deprecated" : true,
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              }
            }
          },
          "redemption" : {
            "{$request.body#/webhook_url}" : {
              "post" : {
                "summary" : "Booking / Voucher Redeemed",
                "description" : "This notification is sent if a booking or voucher has been redeemed.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/OrderDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              }
            }
          },
          "credit" : {
            "{$request.body#/webhook_url}" : {
              "post" : {
                "summary" : "Credit Changed",
                "description" : "This notification is sent if the credit limit is reached or reset.",
                "parameters" : [ {
                  "name" : "Webhook-Identifier",
                  "in" : "header",
                  "description" : "Unique webhook identifier that triggered this notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Webhook ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Identifier",
                  "in" : "header",
                  "description" : "Unique notification ID.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification ID",
                    "type" : "string",
                    "format" : "uuid",
                    "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                  },
                  "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
                }, {
                  "name" : "Notification-Account-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the account related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Account Identifier.",
                    "type" : "string",
                    "readOnly" : true,
                    "example" : "NOTIFICATION_ACCOUNT_ID",
                    "deprecated" : true
                  },
                  "example" : "NOTIFICATION_ACCOUNT_ID"
                }, {
                  "name" : "Notification-Item-Identifier",
                  "in" : "header",
                  "description" : "Identifier of the item related to this event.",
                  "required" : true,
                  "deprecated" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "title" : "Notification Item Identifier",
                    "type" : "string",
                    "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
                    "readOnly" : true,
                    "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                  },
                  "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
                }, {
                  "name" : "Notification-Event",
                  "in" : "header",
                  "description" : "Type of notification.",
                  "required" : true,
                  "style" : "simple",
                  "explode" : false,
                  "schema" : {
                    "$ref" : "#/components/schemas/NotificationEvent"
                  },
                  "example" : "PRODUCT_CREATE"
                } ],
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/CreditDetailResponse"
                      },
                      "example" : "Please check the schema for the expected payload. Note that all readOnly properties will be returned as well."
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "200" : {
                    "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
                  }
                },
                "deprecated" : true,
                "security" : [ {
                  "ApiKeyAuth" : [ ],
                  "basicAuth" : [ ]
                } ]
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/webhooks" ]
        } ]
      }
    },
    "/webhooks/{webhook_id}" : {
      "delete" : {
        "tags" : [ "Notifications" ],
        "summary" : "Remove Webhook",
        "description" : "Remove webhook.",
        "operationId" : "removeWebhook",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "description" : "Unique Webhook ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minLength" : 8,
            "type" : "string",
            "format" : "uuid",
            "example" : "de1829d0-e144-11ea-bc09-f935c77bef95"
          },
          "example" : "de1829d0-e144-11ea-bc09-f935c77bef95"
        } ],
        "responses" : {
          "204" : {
            "description" : "Webhook Removed"
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/webhooks" ]
        } ]
      }
    },
    "/notifications" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "List Notifications (Upcoming)",
        "description" : "List triggered notifications.",
        "operationId" : "getNotifications",
        "parameters" : [ {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "example" : 5,
            "default" : 10
          },
          "example" : 5
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 1,
            "default" : 1
          },
          "example" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "List all notifications",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/notifications" ]
        } ]
      },
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Create Notification (Example only)",
        "description" : "Trigger sample notification. Only used for testing your integration.",
        "operationId" : "addNotification",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateNotificationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Notification(s) triggered",
            "headers" : {
              "Cache-Control" : {
                "$ref" : "#/components/headers/Cache-Control"
              },
              "Last-Modified" : {
                "$ref" : "#/components/headers/Last-Modified"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "Content-Length" : {
                "$ref" : "#/components/headers/Content-Length"
              },
              "Access-Control-Allow-Methods" : {
                "$ref" : "#/components/headers/Access-Control-Allow-Methods"
              },
              "Content-Security-Policy" : {
                "$ref" : "#/components/headers/Content-Security-Policy"
              },
              "X-XSS-Protection" : {
                "$ref" : "#/components/headers/X-XSS-Protection"
              },
              "X-Content-Type-Options" : {
                "$ref" : "#/components/headers/X-Content-Type-Options"
              },
              "X-RateLimit-Limit" : {
                "$ref" : "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining" : {
                "$ref" : "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset" : {
                "$ref" : "#/components/headers/X-RateLimit-Reset"
              },
              "Origin" : {
                "$ref" : "#/components/headers/Origin"
              }
            }
          },
          "400" : {
            "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INVALID_REQUEST",
                  "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
                  "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "invalid_token",
                  "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
            "headers" : {
              "WWW-Authenticate" : {
                "description" : "Defines the authentication method that should be used to gain access to a resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "insufficient_scope",
                  "error_description" : "The request requires higher privileges than provided by the access token.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "METHOD_NOT_ALLOWED",
                  "error_description" : "The request method is not supported for the requested resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_ACCEPTABLE",
                  "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "CONFLICT",
                  "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "UNPROCESSABLE_ENTITY",
                  "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "LIMIT_REACHED",
                  "error_description" : "The user has sent too many requests in a given amount of time.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "INTERNAL_SERVER_ERROR",
                  "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
                }
              }
            }
          },
          "501" : {
            "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "NOT_IMPLEMENTED",
                  "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "502" : {
            "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "BAD_GATEWAY",
                  "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "SERVICE_UNAVAILABLE",
                  "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          },
          "504" : {
            "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                },
                "example" : {
                  "error" : "GATEWAY_TIMEOUT",
                  "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
                  "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKeyAuth" : [ ],
          "OAuth2" : [ "https://www.prioticketapis.com/auth/distributor/notifications" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiVersion" : {
        "title" : "API Version",
        "type" : "string",
        "description" : "Represents the version of the service API that's served in the response.",
        "readOnly" : true,
        "example" : "3.8.0"
      },
      "Kind" : {
        "title" : "Kind",
        "type" : "string",
        "description" : "The kind property serves as a guide to what type of information this particular object stores.",
        "readOnly" : true,
        "enum" : [ "location", "route", "category", "product", "currency", "tax", "addon", "availability", "stock", "reservation", "order", "promocode", "promo", "webhook", "notification", "voucher", "contact", "payment", "credit", "destination", "recommendation" ]
      },
      "NotificationEvent" : {
        "title" : "Notification Event",
        "type" : "string",
        "description" : "Type of notification event.\n\n\nNotification Events:\n  \n  Product:\n  \n  * `PRODUCT_CREATE` - Get notified of product creation.\n  * `PRODUCT_UPDATE` - Get notified of product updation.\n  * `PRODUCT_DELETE` - Get notified of product deletion.\n  * `PRODUCT_ASSIGN` - Get notified of product assignment.\n  * `PRODUCT_UNASSIGN` - Get notified of product unassignment.\n  \n Category:\n \n * `CATEGORY_CHANGE` - (Upcoming) Get notified of category change.\n \n Location:\n \n * `LOCATION_CHANGE` - (Upcoming) Get notified of location change.\n \n Availability:\n \n * `AVAILABILITY_CHANGE` - (Upcoming) Get notified of availability change.\n  \n  Order:\n  \n  * `ORDER_CREATE` - Get notified of order creation.\n  * `ORDER_UPDATE` - Get notified of order updation.\n  * `ORDER_CANCEL` - Get notified of full order cancellations.\n  * `ORDER_CANCEL_PARTIAL` - Get notified of partial order cancellations.\n  \n  Payment:\n  \n  * `PAYMENT_CREATE` - Get notified of payment creation.\n  * `PAYMENT_REFUND` - Get notified of full payment cancellations and refunds.\n  * `PAYMENT_REFUND_PARTIAL` - Get notified of partial refunds.\n  \n  Contact: \n  \n  * `CONTACT_CREATE` - (Upcoming) Get notified of contact creation.\n  * `CONTACT_UPDATE` - (Upcoming) Get notified of contact updation.\n  \n  Voucher:\n  \n  * `VOUCHER_RELEASE` - Get notified of voucher release.\n  * `VOUCHER_REVOKE` - (Upcoming) Get notified of voucher revocation.\n  \n  Redemption:\n  \n  * `REDEMPTION` - Get notified of redemption.\n  \n  Credit Limit:\n  \n  * `CREDIT_REACHED` - (Upcoming) Get notified once the credit limit has been reached.\n  * `CREDIT_RESET` - (Upcoming) Get notified of credit reset.",
        "example" : "ORDER_CREATE",
        "enum" : [ "PRODUCT_CREATE", "PRODUCT_UPDATE", "PRODUCT_DELETE", "PRODUCT_ASSIGN", "PRODUCT_UNASSIGN", "ORDER_CREATE", "ORDER_UPDATE", "ORDER_CANCEL", "ORDER_CANCEL_PARTIAL", "PAYMENT_CREATE", "PAYMENT_REFUND", "PAYMENT_REFUND_PARTIAL", "VOUCHER_RELEASE", "VOUCHER_REVOKE", "REDEMPTION", "CREDIT_REACHED", "CREDIT_RESET", "CATEGORY_CHANGE", "LOCATION_CHANGE", "AVAILABILITY_CHANGE" ]
      },
      "ClientCredentialsGrantRequest" : {
        "title" : "Client Credentials Grant Request",
        "required" : [ "grant_type" ],
        "type" : "object",
        "properties" : {
          "grant_type" : {
            "title" : "Grant Type",
            "type" : "string",
            "description" : "Value MUST be set to \"client_credentials\".",
            "example" : "client_credentials"
          },
          "scope" : {
            "title" : "Scope",
            "type" : "string",
            "description" : "The scope of the access request.",
            "example" : "https://www.prioticketapis.com/auth/distributor.booking"
          }
        },
        "additionalProperties" : false
      },
      "ClientCredentialsGrantResponse" : {
        "title" : "Client Credentials Grant Response",
        "required" : [ "access_token", "expires_in", "token_type" ],
        "type" : "object",
        "properties" : {
          "access_token" : {
            "title" : "Access Token",
            "type" : "string",
            "description" : "The access token issued by the authorization server.",
            "example" : "eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ"
          },
          "token_type" : {
            "title" : "Token Type",
            "type" : "string",
            "description" : "The type of the token issued.",
            "example" : "Bearer"
          },
          "expires_in" : {
            "title" : "Expires In",
            "type" : "integer",
            "description" : "The lifetime in seconds of the access token. For example, the value \"3600\" denotes that the access token will expire in one hour from the time the response was generated.",
            "example" : 3600
          },
          "scope" : {
            "title" : "Scope",
            "type" : "string",
            "description" : "OPTIONAL, if identical to the scope requested by the client; otherwise, REQUIRED.",
            "example" : "https://www.prioticketapis.com/auth/distributor.booking"
          }
        },
        "additionalProperties" : false,
        "example" : {
          "access_token" : "eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ",
          "token_type" : "Bearer",
          "expires_in" : 3600,
          "scope" : "https://www.prioticketapis.com/auth/distributor.booking"
        }
      },
      "ProductCurrency" : {
        "title" : "Product Currency",
        "required" : [ "product_currency_code", "product_id" ],
        "type" : "object",
        "properties" : {
          "product_id" : {
            "title" : "Product ID",
            "type" : "string",
            "description" : "Unique identifier for the product assigned by Prio.",
            "readOnly" : true,
            "example" : "PRODUCT_ID_123"
          },
          "product_currency_code" : {
            "title" : "Product Currency Code",
            "type" : "string",
            "description" : "Product Currency Code, according to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).",
            "example" : "USD"
          }
        },
        "description" : "Reference to the same product with a different currency."
      },
      "CurrencyConversion" : {
        "title" : "Currency Conversion",
        "required" : [ "currency_date", "currency_rates", "curreny_base" ],
        "type" : "object",
        "properties" : {
          "currency_base" : {
            "title" : "Currency Base",
            "type" : "string",
            "description" : "Currency base code, according to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).",
            "example" : "USD"
          },
          "currency_date" : {
            "title" : "Currency Date",
            "type" : "string",
            "description" : "Applicable date for these rates.",
            "format" : "date"
          },
          "currency_rates" : {
            "title" : "Currency Rates",
            "type" : "object",
            "additionalProperties" : {
              "title" : "Currency Rate",
              "type" : "string",
              "description" : "Conversion rate for this foreign currency."
            },
            "description" : "Conversion rate for each foreign currency.",
            "example" : {
              "CAD" : "1.260046",
              "CHF" : "0.933058"
            }
          }
        },
        "description" : "Conversion rates for a specific currency."
      },
      "RouteModel" : {
        "title" : "Route Model",
        "required" : [ "route_active", "route_id", "route_name" ],
        "type" : "object",
        "properties" : {
          "route_active" : {
            "title" : "Route Active",
            "type" : "boolean",
            "description" : "Whether this route should be shown.",
            "example" : true,
            "default" : true
          },
          "route_id" : {
            "title" : "Route ID",
            "type" : "string",
            "description" : "Unique identifier of this route.",
            "example" : "ROUTEID123456"
          },
          "route_name" : {
            "title" : "Route Name",
            "type" : "string",
            "description" : "Returns route name.",
            "example" : "Green Route"
          },
          "route_description" : {
            "title" : "Route Description",
            "type" : "string",
            "description" : "Description of the route."
          },
          "route_color" : {
            "title" : "Route Color",
            "type" : "string",
            "description" : "Returns the color of this route. (HEX)",
            "example" : "#FF0000"
          },
          "route_type" : {
            "title" : "Route Type",
            "type" : "string",
            "description" : "The type of route.",
            "example" : "DRIVING",
            "enum" : [ "DRIVING", "WALKING", "BICYCLING", "TRANSIT", "BOAT", "OTHER" ]
          },
          "route_start_time" : {
            "title" : "Route Start Time",
            "type" : "string",
            "description" : "The starting time of the route.",
            "example" : "09:00:00"
          },
          "route_end_time" : {
            "title" : "Route End Time",
            "type" : "string",
            "description" : "The end time of the route.",
            "example" : "20:00:00"
          },
          "route_duration" : {
            "title" : "Route Duration",
            "type" : "integer",
            "description" : "The duration of the route (in minutes).",
            "example" : 90
          },
          "route_frequency" : {
            "title" : "Route Frequency",
            "type" : "integer",
            "description" : "Returns the \"loop\" frequency of this route.",
            "example" : 8
          },
          "route_audio_languages" : {
            "title" : "Route Audio Languages",
            "type" : "array",
            "description" : "The audio languages available on this route. Language is defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.",
            "example" : [ "en", "jp", "nl" ],
            "items" : {
              "title" : "Route Audio Language",
              "type" : "string"
            }
          },
          "route_live_languages" : {
            "title" : "Route Live Languages",
            "type" : "array",
            "description" : "The guide languages available on this route. Language is defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.",
            "example" : [ "en", "jp", "nl" ],
            "items" : {
              "title" : "Route Live Language",
              "type" : "string"
            }
          },
          "route_products" : {
            "title" : "Route Products",
            "type" : "array",
            "description" : "List of applicable products on this route.",
            "items" : {
              "title" : "Product ID",
              "type" : "string",
              "description" : "Unique identifier for the product assigned by Prio.",
              "readOnly" : true,
              "example" : "PRODUCT_ID_123"
            }
          },
          "route_locations" : {
            "title" : "Route Locations",
            "type" : "array",
            "description" : "Specifies an array of directional waypoints. Waypoints alter a route by routing it through the specified location(s).",
            "items" : {
              "$ref" : "#/components/schemas/RouteLocation"
            }
          }
        },
        "additionalProperties" : false
      },
      "RouteLocation" : {
        "title" : "Route Location",
        "required" : [ "route_location_active", "route_location_id", "route_location_name" ],
        "type" : "object",
        "properties" : {
          "route_location_active" : {
            "title" : "Route Location Active",
            "type" : "boolean",
            "description" : "Whether this location is active.",
            "example" : true
          },
          "route_location_id" : {
            "title" : "Route Location ID",
            "type" : "string",
            "description" : "The unique location ID.",
            "example" : "LOCATIONID123456"
          },
          "route_location_name" : {
            "title" : "Route Location Name",
            "type" : "string",
            "description" : "The name of the location.",
            "example" : "Paseo de Coln"
          },
          "route_location_description" : {
            "title" : "Route Location Description",
            "type" : "string",
            "description" : "The description of the location.",
            "example" : "Route description."
          },
          "route_location_url" : {
            "title" : "Route Location URL",
            "type" : "string",
            "description" : "Additional information about this location.",
            "format" : "uri",
            "example" : "https://example.com"
          },
          "route_location_latitude" : {
            "title" : "Route Location Latitude",
            "type" : "string",
            "description" : "Route location latitude.",
            "example" : "37.383752"
          },
          "route_location_longitude" : {
            "title" : "Route Location Longitude",
            "type" : "string",
            "description" : "Route location longitude.",
            "example" : "-5.997302999999988"
          },
          "route_location_stopover" : {
            "title" : "Route Location Stopover",
            "type" : "boolean",
            "description" : "A boolean which indicates that the waypoint is a stop on the route, which has the effect of showing it as a destination.",
            "example" : true
          }
        },
        "additionalProperties" : false
      },
      "LocationModel" : {
        "title" : "Location Model",
        "required" : [ "location_id", "location_name", "location_type" ],
        "type" : "object",
        "properties" : {
          "location_id" : {
            "title" : "Location ID",
            "type" : "string",
            "description" : "Unique identifier of this location.",
            "readOnly" : true,
            "example" : "LOCATION_ID_123"
          },
          "location_label" : {
            "title" : "Location Label",
            "type" : "string",
            "description" : "The label for this location.",
            "example" : "Theaters"
          },
          "location_name" : {
            "title" : "Location Name",
            "type" : "string",
            "description" : "Returns location name.",
            "example" : "Theater 1"
          },
          "location_description" : {
            "title" : "Location Description",
            "type" : "string",
            "description" : "Optional description of the location.",
            "example" : "The largest theater in Amsterdam."
          },
          "location_url" : {
            "title" : "Location URL",
            "type" : "string",
            "description" : "The location URL.\n\nCan contain additional information about the location, or for example, show a link to an online video-conference.\n",
            "format" : "URI"
          },
          "location_type" : {
            "$ref" : "#/components/schemas/LocationType"
          },
          "location_address" : {
            "$ref" : "#/components/schemas/AddressModel"
          },
          "location_contacts" : {
            "title" : "Location Contacts",
            "type" : "array",
            "description" : "Location contacts.",
            "items" : {
              "$ref" : "#/components/schemas/ContactDetails"
            }
          },
          "location_opening_times" : {
            "title" : "Location Opening Times",
            "type" : "array",
            "description" : "Opening times of this location.",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/OpeningTimes"
            }
          },
          "location_custom_fields" : {
            "title" : "Location Custom Fields",
            "type" : "array",
            "description" : "Freeform entry of any key-value pair.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Location model."
      },
      "LocationType" : {
        "title" : "Location Type",
        "type" : "string",
        "description" : "Type of location.\n\n <details>\n  <summary>**Location Types**</summary>\n\n  * `SHOP` - Location where tickets can be purchased. Generally also offers the ability for customers to get support.\n  * `COMPANY` - Headquarters or similar location. \n  * `PICKUP` - Location where passengers can be picked-up, tour starts or vouchers can be retrieved.\n  * `POI` - Arbitrary Point-of-Interest.\n  * `VENUE` - Venue of the supplier.\n  * `DEPARTURE` - Departure location.\n  * `START` - Starting point of the product / tour.\n  * `END` - Ending point of the product / tour.\n  * `ENTRY` - Entrance of the venue. Generally for large venues which have multiple entrances.\n  * `DESTINATION` - In case of tours or transport.\n  * `MEETING` - Meeting point.\n  * `INFO` - Generally a location where customers can retrieve more information / support.\n  * `STOP` - In case of tours or transport.\n  * `ONLINE` - (UPCOMING) Activity or information is available online. A `location_url` is likely provided.\n  * `STEP` - A step in a certain tour or transport.\n  * `OTHER` - Any type not listed above.\n  * `UNKNOWN` - Type unknown / not set.\n  \n  </details>",
        "readOnly" : true,
        "example" : "VENUE",
        "default" : "VENUE",
        "enum" : [ "SHOP", "COMPANY", "PICKUP", "POI", "VENUE", "DEPARTURE", "START", "END", "ENTRY", "DESTINATION", "MEETING", "INFO", "STOP", "ONLINE", "STEP", "OTHER", "UNKNOWN" ]
      },
      "ProductDestinationModel" : {
        "title" : "Destination",
        "required" : [ "destination_id", "destination_images", "destination_name", "destination_products" ],
        "type" : "object",
        "properties" : {
          "destination_id" : {
            "title" : "Destination ID",
            "type" : "string",
            "description" : "Unique destination identifier.",
            "readOnly" : true,
            "example" : "3742"
          },
          "destination_parent_id" : {
            "title" : "Destination Parent ID",
            "type" : "string",
            "description" : "Unique destination parent identifier.",
            "readOnly" : true,
            "example" : "3742"
          },
          "destination_name" : {
            "title" : "Destination Name",
            "type" : "string",
            "description" : "Destination name.",
            "example" : "Paris"
          },
          "destination_slug" : {
            "title" : "Destination Slug",
            "type" : "string",
            "description" : "SEO friendly slug which can be used during URL building.",
            "example" : "paris-3742"
          },
          "destination_description" : {
            "title" : "Destination Description",
            "type" : "string",
            "description" : "Destination description.",
            "example" : "City of Love"
          },
          "destination_images" : {
            "title" : "Destination Images",
            "type" : "array",
            "description" : "It contains images related to the destination.",
            "items" : {
              "$ref" : "#/components/schemas/Image"
            }
          },
          "destination_products" : {
            "title" : "Destination Products.",
            "type" : "array",
            "description" : "The products available in this destination.",
            "items" : {
              "title" : "Product ID",
              "type" : "string",
              "description" : "Unique identifier for the product assigned by Prio.",
              "readOnly" : true,
              "example" : "PRODUCT_ID_123"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Destination details."
      },
      "RecommendationModel" : {
        "title" : "Recommendation",
        "required" : [ "recommendation_id", "recommendation_name", "recommendation_products" ],
        "type" : "object",
        "properties" : {
          "recommendation_id" : {
            "title" : "Recommendation ID",
            "type" : "string",
            "description" : "Unique recommendation identifier.",
            "readOnly" : true,
            "example" : "3743"
          },
          "recommendation_title" : {
            "title" : "Recommendation Title",
            "type" : "string",
            "description" : "Recommendation name.",
            "example" : "Christmas Special "
          },
          "recommendation_description" : {
            "title" : "Recommendation Description",
            "type" : "string",
            "description" : "Recommendation description.",
            "example" : "Hot selling"
          },
          "recommendation_start_date" : {
            "title" : "Recommendation Start Date",
            "type" : "string",
            "description" : "Start date on which this recommendation becomes visible.",
            "format" : "date-time"
          },
          "recommendation_end_date" : {
            "title" : "Recommendation End Date",
            "type" : "string",
            "description" : "End date for this recommendation.",
            "format" : "date-time"
          },
          "recommendation_products" : {
            "title" : "Recommendation Products.",
            "type" : "array",
            "description" : "The products available in this recommendation.",
            "items" : {
              "title" : "Product ID",
              "type" : "string",
              "description" : "Unique identifier for the product assigned by Prio.",
              "readOnly" : true,
              "example" : "PRODUCT_ID_123"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Recommendation details."
      },
      "CategoryModel" : {
        "title" : "Category",
        "required" : [ "category_id", "category_name", "category_type" ],
        "type" : "object",
        "properties" : {
          "category_id" : {
            "title" : "Category ID",
            "type" : "string",
            "description" : "Unique category identifier.",
            "readOnly" : true,
            "example" : "3743"
          },
          "category_name" : {
            "title" : "Category Name",
            "type" : "string",
            "description" : "Category name.",
            "example" : "Museums"
          },
          "category_description" : {
            "title" : "Category Description",
            "type" : "string",
            "description" : "Category description.",
            "example" : "Art Museums"
          },
          "category_parent_id" : {
            "title" : "Category Parent ID",
            "type" : "string",
            "description" : "Optional parent category.",
            "example" : "2393"
          },
          "category_type" : {
            "title" : "Category Type",
            "type" : "string",
            "description" : "Category type.",
            "example" : "SYSTEM",
            "enum" : [ "SYSTEM", "RESELLER", "MERCHANDISE" ]
          },
          "category_slug" : {
            "title" : "Category Slug",
            "type" : "string",
            "description" : "SEO friendly slug which can be used during URL building.",
            "example" : "museums-3743"
          },
          "category_icon" : {
            "title" : "Category Icon",
            "type" : "string",
            "description" : "URL which points to category icon.",
            "format" : "uri",
            "example" : "https://prioticket.com/qrcodes/categoryupload/img_1438406614_museum.png"
          },
          "category_images" : {
            "title" : "Category Images",
            "type" : "array",
            "description" : "It contains images related to the category.",
            "items" : {
              "$ref" : "#/components/schemas/Image"
            }
          },
          "category_products" : {
            "title" : "Category Products.",
            "type" : "array",
            "description" : "The products available in this category.",
            "items" : {
              "title" : "Product ID",
              "type" : "string",
              "description" : "Unique identifier for the product assigned by Prio.",
              "readOnly" : true,
              "example" : "PRODUCT_ID_123"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Category details."
      },
      "ProductClass" : {
        "title" : "Product Class",
        "type" : "string",
        "description" : "<details>\n  <summary>**Product Classes**</summary>\n  \n  * `STANDARD` - Product types in the standard class are the most common and are supported by almost all systems.\n  \n  * `COMBI` - Product is a combi-product. This product is the main combi product and is not bookable on its own. All of the sub-products linked to this combi should be booked as well. These products are listed inside `product_combi_details`.\n  \n  * `CLUSTER` - Product is a cluster-product. This product is the main cluster product and is not bookable. One of the sub-products linked to this cluster should be booked instead. These products are listed inside `product_cluster_details`.\n  \n  * `MERCHANDISE` - \n  \n  * `BUNDLE` - Product is a bundle-product. This product is the main bundle product and is not bookable on its own. All of the sub-products linked to this bundle should be booked as well. These products are listed inside `product_bundle_details`.\n  \n  * `ADDON` - \n  \n  * `OTHER` - Products in the other/custom class are completely dynamic.\n\n</details>\n",
        "readOnly" : true,
        "enum" : [ "STANDARD", "COMBI", "CLUSTER", "MERCHANDISE", "BUNDLE", "ADDON", "OTHER" ]
      },
      "ProductTypeClass" : {
        "title" : "Product Type Class",
        "type" : "string",
        "description" : "<details>\n  <summary>**Product Type Classes**</summary>\n  \n  * `STANDARD` - Product types in the standard class are the most common and are supported by almost all systems. These types will always be age-restricted.\n  \n  * `INDIVIDUAL` - Product types in the individual class are less common and therefore have fewer supported systems. These types will never be age-restricted.\n  \n  * `ITEM` - Product types in the item class do not refer to actual persons, instead they could, for example, be packages (Regular, Silver, Diamond), objects (Merchandise, private tours), a type of event, class identifier (Economy, Business) and much more.\n  \n  * `GROUP` - Product types in the group class always consist of multiple persons. It can, for example, be a family of 2 Adults and 2 Childs.\n  \n  * `CUSTOM` - Product types in the custom class are completely dynamic and therefore require explicit mapping with external systems. They do not return as CUSTOM, instead they can take any form.\n\n</details>\n",
        "readOnly" : true,
        "enum" : [ "STANDARD", "INDIVIDUAL", "ITEM", "GROUP", "CUSTOM" ],
        "x-enum-descriptions" : [ "Product types in the standard class are the most common and are supported by almost all systems. These types will always be age-restricted.", "Product types in the individual class are less common and therefore have fewer supported systems. These types will never be age-restricted.", "Product types in the item class do not refer to actual persons, instead they could, for example, be packages (Regular, Silver, Diamond), objects (Merchandise, private tours), a type of event, class identifier (Economy, Business) and much more.", "Product types in the group class always consist of multiple persons. It can, for example, be a family of 2 Adults and 2 Childs.", "Product types in the custom class are completely dynamic and therefore require explicit mapping with external systems. They do not return as CUSTOM, instead they can take any form." ]
      },
      "ProductType" : {
        "title" : "Product Type",
        "type" : "string",
        "description" : "Each product contains product types. These product types can offer aged based ticketing (such as Adult and Child), but also provide a variety of other flexible product variations such as group pricing, business and economy seating or different car configurations.\n\nBecause some products might behave different from others, each product type is categorized within a product class; a group of products that behaves similarly.\n<details>\n  <summary>**Product Types**</summary>\n\n  * Class Standard:\n    \n    Product types in the standard class are the most common and are supported by almost all systems. These types will always be age-restricted.\n    \n    Tour and experience providers have the flexibility to vary prices and apply different rules based on the age of their customers. This means they can charge full ticket prices for adults while offering discounted rates for children, or they may have specific requirements such as requiring at least one adult for every group of children booking a tour.\n    \n    During the process of checking prices and proceeding to checkout, customers should be able to select the number of individuals from each available age group for their booking.\n  \n    * `ADULT` - Adult.\n    \n    * `CHILD` - Child.\n    \n    * `SENIOR` - Senior.\n    \n    * `YOUTH` - Youth.\n        \n    * `INFANT` - Infant.\n    \n  * Class Individual:\n  \n    Product types in the individual class are less common and therefore have fewer supported systems. These types will never be age-restricted.\n    \n    * `PERSON` - Person.\n    \n    * `STUDENT` - Student.\n    \n    * `RESIDENT` - Resident.\n    \n    * `MILITARY` - Military.\n    \n    * `IMPAIRED` - Impaired.\n  \n  * Class Item:\n  \n    Product types in the item class do not refer to actual persons, instead they could, for example, be packages (Regular, Silver, Diamond), objects (Merchandise, private tours), a type of event, class identifier (Economy, Business) and much more.\n  \n    * `ITEM` - Item.\n    \n  * Class Group:\n   \n    Product types in the group class always consist of multiple persons. It can, for example, be a family of 2 Adults and 2 Childs.\n    \n    * `GROUP` - Group.\n    \n    * `FAMILY` - Family.\n    \n  * Class Custom:\n  \n    Product types in the custom class are completely dynamic and therefore require explicit mapping with external systems. They do not return as `CUSTOM`, instead they can take any form.\n    \n    * `CUSTOM` - Custom.\n    \n</details>\n",
        "example" : "ADULT",
        "enum" : [ "ADULT", "CHILD", "SENIOR", "YOUTH", "INFANT", "PERSON", "STUDENT", "RESIDENT", "MILITARY", "IMPAIRED", "ITEM", "GROUP", "FAMILY", "CUSTOM" ]
      },
      "ExtraOptions" : {
        "title" : "Product Options",
        "required" : [ "option_count_type", "option_id", "option_mandatory", "option_name", "option_price_type", "option_selection_type", "option_type" ],
        "type" : "object",
        "properties" : {
          "option_id" : {
            "title" : "Option ID",
            "type" : "string",
            "description" : "Option ID.",
            "example" : "PRODUCT_OPTION_ID"
          },
          "option_name" : {
            "title" : "Option Name",
            "type" : "string",
            "description" : "(Translatable) Option name.",
            "readOnly" : true,
            "example" : "Drinks"
          },
          "option_description" : {
            "title" : "Option Description",
            "type" : "string",
            "description" : "(Translatable) Option description.",
            "readOnly" : true,
            "example" : "What kind of drinks should be included?"
          },
          "option_start_date" : {
            "title" : "Option Start Date",
            "type" : "string",
            "description" : "Starting date of option.",
            "format" : "date-time",
            "readOnly" : true,
            "deprecated" : true
          },
          "option_end_date" : {
            "title" : "Option End Date",
            "type" : "string",
            "description" : "End date of option.",
            "format" : "date-time",
            "readOnly" : true,
            "deprecated" : true
          },
          "option_label" : {
            "title" : "Option label",
            "type" : "string",
            "description" : "Option label.",
            "readOnly" : true,
            "example" : "MISCELLANEOUS",
            "deprecated" : true,
            "enum" : [ "DISCOUNT", "FEATURE", "MERCHANDISE", "MISCELLANEOUS", "OTHER" ]
          },
          "option_type" : {
            "title" : "Extra Option Type",
            "type" : "string",
            "description" : "* `SINGLE` - Single option value is available.\n* `RADIO` - Customer can select only one out of multiple option values.\n* `CHECKBOX` - Customers can select one or more option values.\n* `SHORT_ANSWER` - A one-line input field for text. (UPCOMING)\n* `PARAGRAPH` - A multi-line input field for text. (UPCOMING)\n* `DROPDOWN` - A selection from a dropdown. (UPCOMING)\n* `BOOLEAN` - A yes/no button. (UPCOMING)\n* `DATE` - A date. (UPCOMING)\n* `TIME` - A time. (UPCOMING)\n* `DATETIME` - A date and time. (UPCOMING)\n* `NUMBER` - A number. (UPCOMING)\n* `LOCATION_SEARCH` - A search widget that supports finding matched location given user input from provided location list. (UPCOMING)\n",
            "readOnly" : true,
            "example" : "SINGLE",
            "enum" : [ "SINGLE", "RADIO", "CHECKBOX", "SHORT_ANSWER", "PARAGRAPH", "DROPDOWN", "BOOLEAN", "DATE", "TIME", "DATETIME", "NUMBER", "LOCATION_SEARCH" ]
          },
          "option_selection_type" : {
            "title" : "Option Selection Type",
            "type" : "string",
            "description" : "* `MANUAL` - Whether the guest is able to select the options himself.\n* `AUTO` - **(ADVANCED)** Whether the option is automatically added to the cart. This only applies to `option_count_type:RESTRICTED`. Only available for `option_type:SINGLE`.\n",
            "readOnly" : true,
            "example" : "MANUAL",
            "enum" : [ "MANUAL", "AUTO" ]
          },
          "option_count_type" : {
            "title" : "Option Count Type",
            "type" : "string",
            "description" : "* `FLEXIBLE` - The sum of `option_values.value_count` is not restricted to the `booking quantity` (Product Option) or `product_type_count` (Product Type Option). Do note that it should still adhere to `option_quantity_min` and `option_quantity_max`.\n* `RESTRICTED` - The sum of `option_values.value_count` must be equal to the `booking quantity` (Product Option) or `product_type_count` (Product Type Option).\n",
            "readOnly" : true,
            "example" : "FLEXIBLE",
            "enum" : [ "FLEXIBLE", "RESTRICTED" ]
          },
          "option_count_visible" : {
            "title" : "Option Count Visible",
            "type" : "boolean",
            "description" : "Whether the selected quantity should be visible in the cart or shown as combined single price.",
            "example" : true
          },
          "option_list_type" : {
            "title" : "Option List Type",
            "type" : "string",
            "description" : "Whether to show this option on product level (once on the page), or repeat the option for each selected `product_type` / Person / PAX.\n* `PRODUCT` - Show the option once on product level.\n* `PRODUCT_TYPE` - Show the option for each selected `product_type`.\n",
            "readOnly" : true,
            "example" : "PRODUCT_TYPE",
            "enum" : [ "PRODUCT", "PRODUCT_TYPE" ]
          },
          "option_price_type" : {
            "title" : "Option Price Type",
            "type" : "string",
            "description" : "Whether this option has individual pricing for each `product_type` or a fixed amount. If `PRODUCT_TYPE` then the prices will be returned per `value_product_type_id` regardless of whether this is a Product- or Product Type Option.\n* `PRODUCT` - Prices are equal regardless of the selected `product_type`'s. Price is still increased based on the selected quantity.\n* `PRODUCT_TYPE` - Prices are different per `product_type`. For `product_options` this will always be in combination with `option_count_type:RESTRICTED` (as you are unable to determine how many options should be charged for which `product_type`).\n* `INCLUDED` - Prices are already included in the sales price of the product itself. Amounts are shown for informational purposes only.\n",
            "readOnly" : true,
            "example" : "PRODUCT_TYPE",
            "enum" : [ "PRODUCT", "PRODUCT_TYPE" ]
          },
          "option_booking_quantity_min" : {
            "title" : "Option Booking Quantity Minimum",
            "type" : "integer",
            "description" : "The minimum booking quantity required for this option to be applicable. The booking quantity is a sum of all values of `product_type_count`.",
            "readOnly" : true,
            "example" : 1
          },
          "option_booking_quantity_max" : {
            "title" : "Option Booking Quantity Maximum",
            "type" : "integer",
            "description" : "The maximum booking quantity allowed for this option to be applicable The booking quantity is a sum of all values of `product_type_count`.",
            "readOnly" : true,
            "example" : 5
          },
          "option_quantity_min" : {
            "title" : "Option Quantity Minimum",
            "type" : "integer",
            "description" : "The minimum option count required.  If `option_mandatory:true` and `option_quantity_min` is not set then option count should be equal to `product_type_count`.\n  Option count is a sum of all values of `option_values.value_count`.",
            "readOnly" : true,
            "example" : 1,
            "default" : 0
          },
          "option_quantity_max" : {
            "title" : "Option Quantity Maximum",
            "type" : "integer",
            "description" : "The maximum option count allowed.  If `option_mandatory:true` and `option_quantity_max` is not set then option count should be equal to `product_type_count`.\n  Option count is a sum of all values of `option_values.value_count`.",
            "readOnly" : true,
            "example" : 5,
            "default" : 0
          },
          "option_discount_applicable" : {
            "title" : "Option Discount Applicable",
            "type" : "boolean",
            "description" : "Whether any cart or promotional discounts apply on this option.",
            "example" : false
          },
          "option_mandatory" : {
            "title" : "Option Mandatory",
            "type" : "boolean",
            "description" : "Whether it is mandatory to set this option.",
            "readOnly" : true,
            "example" : true,
            "default" : false
          },
          "option_values" : {
            "title" : "Option Values",
            "type" : "array",
            "description" : "Option values.",
            "items" : {
              "$ref" : "#/components/schemas/ExtraOptionValueDetails"
            }
          }
        },
        "description" : "Product options."
      },
      "RoutesListResponse" : {
        "title" : "Routes List Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/RoutesListResponseData"
          }
        },
        "description" : "Routes list response."
      },
      "RoutesListResponseData" : {
        "title" : "Routes List Response Data",
        "type" : "object",
        "description" : "Routes list response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "required" : [ "items", "total_items" ],
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Routes",
              "type" : "array",
              "description" : "Routes.",
              "items" : {
                "$ref" : "#/components/schemas/RouteModel"
              }
            }
          }
        } ]
      },
      "LocationListResponse" : {
        "title" : "Location List Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/LocationListResponseData"
          }
        },
        "description" : "Location list response."
      },
      "LocationListResponseData" : {
        "title" : "Location List Response Data",
        "description" : "Location list response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "required" : [ "items", "total_items" ],
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Locations",
              "type" : "array",
              "description" : "Locations.",
              "items" : {
                "$ref" : "#/components/schemas/LocationListModel"
              }
            }
          }
        } ]
      },
      "LocationListModel" : {
        "title" : "Location",
        "description" : "Location list model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/LocationModel"
        }, {
          "type" : "object",
          "properties" : {
            "location_products" : {
              "title" : "Location Products",
              "type" : "array",
              "description" : "The products available at this location.",
              "items" : {
                "title" : "Product ID",
                "type" : "string",
                "description" : "Unique identifier for the product assigned by Prio.",
                "readOnly" : true,
                "example" : "PRODUCT_ID_123"
              }
            }
          }
        } ]
      },
      "DistributorProductTaxesResponse" : {
        "title" : "Product Taxes Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/DistributorProductTaxesResponseData"
          }
        },
        "description" : "Product tax list response."
      },
      "DistributorProductTaxesResponseData" : {
        "title" : "Distributor Product Taxes Response Data",
        "type" : "object",
        "description" : "Distributor product taxes response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Product Taxes",
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ProductTaxDetail"
              }
            }
          }
        } ]
      },
      "DistributorCurrencyRatesResponse" : {
        "title" : "Currency Rates Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/DistributorCurrencyRatesResponseData"
          }
        },
        "description" : "Product currency list response."
      },
      "DistributorCurrencyRatesResponseData" : {
        "title" : "Currency Rates Response Data",
        "required" : [ "items", "kind", "total_items" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "total_items" : {
            "$ref" : "#/components/schemas/TotalItems"
          },
          "items" : {
            "title" : "Currency Rates",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CurrencyConversion"
            }
          }
        },
        "description" : "Currency rates response data."
      },
      "ProductDestinationsResponse" : {
        "title" : "Product Destination Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/ProductDestinationsResponseData"
          }
        },
        "description" : "Product destination list response."
      },
      "ProductDestinationsResponseData" : {
        "title" : "Product Destinations Response Data",
        "type" : "object",
        "description" : "Product destinations response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "required" : [ "items", "total_items" ],
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Destinations",
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ProductDestinationModel"
              }
            }
          }
        } ]
      },
      "DistributorProductCategoriesResponse" : {
        "title" : "Product Categories Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/DistributorProductCategoriesResponseData"
          }
        },
        "description" : "Product category list response."
      },
      "DistributorProductRecommendationsResponse" : {
        "title" : "Product Recommendations Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/DistributorProductRecommendationsResponseData"
          }
        },
        "description" : "Product recommendations list response."
      },
      "DistributorProductRecommendationsResponseData" : {
        "title" : "Distributor Product Recommendations Response Data",
        "required" : [ "items", "kind", "total_items" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "total_items" : {
            "$ref" : "#/components/schemas/TotalItems"
          },
          "items" : {
            "title" : "Categories",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RecommendationModel"
            }
          }
        },
        "description" : "Distributor product recommendations response data."
      },
      "DistributorProductCategoriesResponseData" : {
        "title" : "Distributor Product Categories Response Data",
        "required" : [ "items", "kind", "total_items" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "total_items" : {
            "$ref" : "#/components/schemas/TotalItems"
          },
          "items" : {
            "title" : "Categories",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CategoryModel"
            }
          }
        },
        "description" : "Distributor product categories response data."
      },
      "ReservedPaginationData" : {
        "title" : "Reserved Pagination Data",
        "required" : [ "current_item_count", "items_per_page", "kind", "page_index", "start_index", "total_items", "total_pages" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "current_item_count" : {
            "title" : "Current Item Count",
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The number of items in this result set. Should be equivalent to items.length, and is provided as a convenience property. For example, suppose a developer requests a set of search items, and asks for 10 items per page. The total set of that search has 14 total items. The first page of items will have 10 items in it, so both `items_per_page` and `current_item_count` will equal \"10\". The next page of items will have the remaining 4 items; `items_per_page` will still be \"10\", but `current_item_count` will be \"4\".",
            "example" : 10
          },
          "items_per_page" : {
            "title" : "Items Per Page",
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The number of items in the result. This is not necessarily the size of the data.items array; if we are viewing the last page of items, the size of data.items may be less than `items_per_page`. However the size of data.items should not exceed `items_per_page`.",
            "example" : 10
          },
          "start_index" : {
            "title" : "Start Index",
            "minimum" : 1,
            "type" : "integer",
            "description" : "The index of the first item in data.items. For consistency, `start_index` should be 1-based. For example, the first item in the first set of items should have a `start_index` of 1. If the user requests the next set of data, the `start_index` may be 10.",
            "example" : 1
          },
          "total_items" : {
            "title" : "Total Items",
            "minimum" : 0,
            "type" : "integer",
            "description" : "The total number of items available in this set. For example, if a user has 100 blog posts, the response may only contain 10 items, but the `total_items` would be 100.",
            "example" : 200
          },
          "page_index" : {
            "title" : "Page Index",
            "minimum" : 1,
            "type" : "integer",
            "description" : "The index of the current page of items. For consistency, `page_index` should be 1-based. For example, the first page of items has a `page_index` of 1. `page_index` can also be calculated from the item-based paging properties: `page_index` = floor(`start_index` / `items_per_page`) + 1.",
            "example" : 1
          },
          "total_pages" : {
            "title" : "Total Pages",
            "minimum" : 0,
            "type" : "integer",
            "description" : "The total number of pages in the result set. `total_pages` can also be calculated from the item-based paging properties above: `total_pages` = ceiling(`total_items` / `items_per_page`)",
            "example" : 20
          }
        },
        "description" : "The following properties are located in the data object, and help page through a list of items.\nThe paging properties below allow for various styles of paging, including:\n+ Previous/Next paging - Allows user's to move forward and backward through a list, one page at a time. The nextLink and previousLink properties (described in the \"Reserved Property Names for Links\" section below) are used for this style of paging.\n+ Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?startIndex=200.\n+ Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The pageIndex and totalPages properties are used for this style of paging."
      },
      "ProductListResponse" : {
        "title" : "Product List Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/ProductListResponseData"
          }
        },
        "description" : "Product list response."
      },
      "ProductListResponseData" : {
        "title" : "Product List Response Data",
        "description" : "Product list response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "required" : [ "items" ],
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Products",
              "type" : "array",
              "description" : "Returns a list of all products.",
              "items" : {
                "$ref" : "#/components/schemas/ProductModel"
              }
            }
          }
        } ]
      },
      "ProductDetailResponse" : {
        "title" : "Product Detail Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/ProductDetailData"
          }
        },
        "description" : "Product detail response."
      },
      "ProductDetailData" : {
        "title" : "Product Detail Data",
        "required" : [ "kind", "product" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "product" : {
            "$ref" : "#/components/schemas/ProductModel"
          }
        },
        "description" : "Product detail data."
      },
      "WebhookListResponse" : {
        "title" : "Webhook List Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/WebhookListResponseData"
          }
        },
        "description" : "Webhook list response."
      },
      "WebhookListResponseData" : {
        "title" : "Webhook List Response Data",
        "description" : "Webhook list response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "required" : [ "items", "total_items" ],
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Webhooks",
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Webhook"
              }
            }
          }
        } ]
      },
      "NotificationListResponse" : {
        "title" : "Notification List Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/NotificationListResponseData"
          }
        },
        "description" : "Notification list response."
      },
      "NotificationListResponseData" : {
        "title" : "Notification List Response Data",
        "description" : "Notification list response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "required" : [ "items", "total_items" ],
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Notifications",
              "type" : "array",
              "description" : "Notifications.",
              "items" : {
                "$ref" : "#/components/schemas/WebhookNotification"
              }
            }
          }
        } ]
      },
      "ProductModel" : {
        "title" : "Product Model",
        "required" : [ "product_addon", "product_admission_type", "product_availability", "product_availability_assigned", "product_booking_start_date", "product_cancellation_allowed", "product_capacity", "product_capacity_type", "product_code_settings", "product_content", "product_content_languages", "product_created", "product_created_email", "product_created_name", "product_currency", "product_daily_pricing", "product_default_language", "product_dynamic_pricing", "product_id", "product_market_admin_id", "product_market_admin_name", "product_modified", "product_modified_email", "product_modified_name", "product_overbooking_allowed", "product_past_date_booking_allowed", "product_pickup_point", "product_quantity_pricing", "product_redemption_rules", "product_relation_details_visible", "product_seasonal_pricing", "product_service_type", "product_source_id", "product_source_name", "product_start_date", "product_supplier_id", "product_third_party", "product_traveldate_required", "product_view_type" ],
        "type" : "object",
        "properties" : {
          "product_id" : {
            "title" : "Product ID",
            "type" : "string",
            "description" : "Unique identifier for the product assigned by Prio.",
            "readOnly" : true,
            "example" : "PRODUCT_ID_123"
          },
          "product_external_id" : {
            "title" : "Product External ID",
            "type" : "string",
            "description" : "Unique identifier for the product assigned by the third party.",
            "example" : "PRODUCT_EXTERNAL_ID_123"
          },
          "product_internal_reference" : {
            "title" : "Product Internal Reference",
            "type" : "string",
            "description" : "Internal Reference / SKU for the product.",
            "example" : "PRODUCT_INTERNAL_REF"
          },
          "product_platform_id" : {
            "title" : "Product Platform ID",
            "type" : "string",
            "description" : "Unique identifier of the platform.",
            "readOnly" : true,
            "example" : "1",
            "deprecated" : true
          },
          "product_platform_name" : {
            "title" : "Product Platform Name",
            "type" : "string",
            "description" : "Name of the platform.",
            "readOnly" : true,
            "example" : "Platform Name",
            "deprecated" : true
          },
          "product_distributor_id" : {
            "title" : "Product Distributor ID",
            "type" : "string",
            "description" : "Unique identifier for the distributor.",
            "readOnly" : true,
            "example" : "501"
          },
          "product_distributor_name" : {
            "title" : "Product Distributor Name",
            "type" : "string",
            "description" : "Name of the distributor.",
            "readOnly" : true,
            "example" : "Demo Distributor"
          },
          "product_reseller_id" : {
            "title" : "Product Reseller ID.",
            "type" : "string",
            "description" : "Unique identifier of the reseller.",
            "readOnly" : true,
            "example" : "1300"
          },
          "product_reseller_name" : {
            "title" : "Product Reseller Name",
            "type" : "string",
            "description" : "Name of the reseller.",
            "readOnly" : true,
            "example" : "Demo reseller"
          },
          "product_market_admin_id" : {
            "title" : "Product Market Admin ID",
            "type" : "string",
            "description" : "Unique identifier for the market admin.",
            "readOnly" : true,
            "example" : "345345342"
          },
          "product_market_admin_name" : {
            "title" : "Product Market Admin Name",
            "type" : "string",
            "description" : "Name of the market admin.",
            "readOnly" : true,
            "example" : "Test Market Admin"
          },
          "product_supplier_admin_id" : {
            "title" : "Product Supplier Admin ID",
            "type" : "string",
            "description" : "Unique identifier for the supplier admin.",
            "readOnly" : true,
            "example" : "PRODUCT_SUPPLIER_ADMIN_ID"
          },
          "product_supplier_admin_name" : {
            "title" : "Product Supplier Admin Name",
            "type" : "string",
            "description" : "Name of the supplier admin.",
            "readOnly" : true,
            "example" : "Supplier Admin Name"
          },
          "product_supplier_id" : {
            "title" : "Product Supplier ID",
            "type" : "string",
            "description" : "Unique identifier for supplier.",
            "example" : "PRODUCT_SUPPLIER_ID"
          },
          "product_source_id" : {
            "title" : "Product Source ID",
            "type" : "string",
            "description" : "Unique ID of the product source.",
            "readOnly" : true,
            "example" : "34564574"
          },
          "product_source_name" : {
            "title" : "Product Source Name",
            "type" : "string",
            "description" : "Source of the product. \n\nEither PrioTicket or the name of the other reservation system e.g. CSS.",
            "readOnly" : true,
            "example" : "Prioticket"
          },
          "product_contract_source_id" : {
            "title" : "Product Contract Source ID",
            "type" : "string",
            "description" : "Contract source id."
          },
          "product_contract_source_name" : {
            "title" : "Product Contract Source Name",
            "type" : "string",
            "description" : "Contract source of the product. \n\nEither PrioTicket or the name of the contracting party.",
            "example" : "Prioticket"
          },
          "product_default_language" : {
            "title" : "Product Default Language",
            "type" : "string",
            "description" : "Default Supplier Language. \n\nLanguage is defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.",
            "example" : "en",
            "default" : "en"
          },
          "product_version" : {
            "title" : "Product Version",
            "type" : "integer",
            "description" : "Product version.",
            "example" : 1
          },
          "product_color" : {
            "title" : "Product Color",
            "type" : "string",
            "description" : "Color of the product. (HEX)",
            "example" : "#b9f2ff"
          },
          "product_slug" : {
            "title" : "Product Slug",
            "type" : "string",
            "description" : "SEO friendly slug which can be used during URL building.",
            "example" : "westminster-to-greenwich-sightseeing-cruise-t71379"
          },
          "product_supplier_url" : {
            "title" : "Product Supplier URL",
            "type" : "string",
            "format" : "uri",
            "readOnly" : true,
            "example" : "https://example.com/"
          },
          "product_supplier_key_public" : {
            "title" : "Product Supplier Public Key",
            "type" : "string",
            "description" : "Supplier public key (Internal use only).",
            "example" : "b7064e02-37a5-9ce5-ff63-b7536b364102"
          },
          "product_from_price" : {
            "title" : "Product From Price",
            "type" : "string",
            "description" : "Static from price which can be shown on the main product tile. (Usually regular Adult including discount and season independent).",
            "example" : "16.40"
          },
          "product_start_date" : {
            "title" : "Product Start Date",
            "type" : "string",
            "description" : "Starting date of product.",
            "format" : "date-time"
          },
          "product_end_date" : {
            "title" : "Product End date",
            "type" : "string",
            "description" : "End date of the product.",
            "format" : "date-time"
          },
          "product_booking_start_date" : {
            "title" : "Product Booking Start Date",
            "type" : "string",
            "description" : "The earliest date on which the product is available for sale. This can be earlier than the `product_start_date`.",
            "format" : "date-time"
          },
          "product_booking_end_date" : {
            "title" : "Product Booking End Date",
            "type" : "string",
            "description" : "The date on which the product is no longer available for sale. This can be earlier than the `product_end_date`.",
            "format" : "date-time",
            "deprecated" : true
          },
          "product_booking_advance_time_min" : {
            "title" : "Product Booking Advance Time Min",
            "type" : "integer",
            "description" : "The minimum amount of minutes you are required to book in advance to the selected travel date (`booking_travel_date`) or availability slot (`availability_from_date_time`).",
            "example" : 60
          },
          "product_booking_advance_time_max" : {
            "title" : "Product Booking Advance Time Max",
            "type" : "integer",
            "description" : "The maximum amount of minutes you are allowed to book in advance to the selected travel date (`booking_travel_date`) or availability slot (`availability_from_date_time`).",
            "example" : 1440,
            "deprecated" : true
          },
          "product_booking_after_time" : {
            "title" : "Product Booking Afer Time",
            "type" : "integer",
            "description" : "The maximum amount of minutes you are allowed to book after the selected travel date (`booking_travel_date`) or availability slot (`availability_from_date_time`).",
            "example" : 60,
            "deprecated" : true
          },
          "product_booking_quantity_min" : {
            "title" : "Product Booking Quantity Max",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The minimum amount of available seats/spot/places/services required per product booking. ",
            "example" : 1
          },
          "product_booking_quantity_max" : {
            "title" : "Product Booking Quantity Max",
            "multipleOf" : 1,
            "maximum" : 500,
            "type" : "integer",
            "description" : "The maximum amount of available seats/spots/places/services allowed per product booking.",
            "example" : 5
          },
          "product_turnout_time" : {
            "title" : "Product Turnout Time",
            "type" : "integer",
            "description" : "The amount of minutes at which guests should arrive prior to the start time of the reservation.\n\nFor example: You need to be at the meeting point 15 minutes in advance.",
            "example" : 15
          },
          "product_duration" : {
            "title" : "Product Duration",
            "type" : "integer",
            "description" : "Duration of product / tour/ service in minutes.",
            "example" : 90
          },
          "product_show_capacity_count" : {
            "title" : "Product Show Capacity Count",
            "type" : "integer",
            "description" : "The value from which the current capacity should be shown to the customer.\n\nOnly applicable if `product_capacity:true`.",
            "example" : 25
          },
          "product_third_party" : {
            "title" : "Product Third Party",
            "type" : "boolean",
            "description" : "Whether the product is from a third party.",
            "example" : false,
            "default" : false
          },
          "product_seasonal_pricing" : {
            "title" : "Product Seasonal Pricing",
            "type" : "boolean",
            "description" : "Whether pricing can differentiate between specific date ranges (Product types can be returned more than once with different settings).",
            "readOnly" : true,
            "example" : true,
            "default" : false
          },
          "product_quantity_pricing" : {
            "title" : "Product Quantity Pricing",
            "type" : "boolean",
            "description" : "Different pricing based on the booking quantity.",
            "readOnly" : true,
            "example" : true,
            "default" : false
          },
          "product_daily_pricing" : {
            "title" : "Product Daily Pricing",
            "type" : "boolean",
            "description" : "Whether pricing can differentiate between specific days.",
            "readOnly" : true,
            "example" : true,
            "default" : false
          },
          "product_dynamic_pricing" : {
            "title" : "Product Dynamic Pricing",
            "type" : "boolean",
            "description" : "Whether pricing can differentiate between specific availability slots (e.g. Peakhours).",
            "readOnly" : true,
            "example" : true,
            "default" : false
          },
          "product_relation_details_visible" : {
            "title" : "Product Relation Details Visible",
            "type" : "boolean",
            "description" : "Whether you should show the underlying details of the linked sub-products. Only applicable if either `product_class:CLUSTER`, `product_class:COMBI` or `product_addon:true`.",
            "example" : true,
            "default" : false
          },
          "product_timepicker_visible" : {
            "title" : "Product Timepicker Visible",
            "type" : "boolean",
            "description" : "Whether you should show the timepicker during booking.",
            "example" : true,
            "default" : true
          },
          "product_sub_only" : {
            "title" : "Product Sub Only",
            "type" : "boolean",
            "description" : "In case `product_sub_only:true` then the product is not available for individual sales. Instead it should be listed as part of a main cluster/combi/addon product only.",
            "example" : false,
            "deprecated" : true,
            "default" : false
          },
          "product_cluster" : {
            "title" : "Product Has Cluster",
            "type" : "boolean",
            "description" : "Product is a cluster-product. In case this value is indicated as `true`, this product is the main cluster product and is not bookable. One of the sub-products linked to this cluster should be booked instead. These products are listed inside `product_cluster_details`.",
            "readOnly" : true,
            "example" : true,
            "deprecated" : true,
            "default" : false
          },
          "product_combi" : {
            "title" : "Product Has Combi",
            "type" : "boolean",
            "description" : "Product is a combi-product. In case this value is indicated as `true`, this product is the main combi product and is not bookable on its own. All of the sub-products linked to this combi should be booked as well. These products are listed inside `product_combi_details`.",
            "readOnly" : true,
            "example" : true,
            "deprecated" : true,
            "default" : false
          },
          "product_bundle" : {
            "title" : "Product Has Bundle",
            "type" : "boolean",
            "description" : "Product is a bundle-product. In case this value is indicated as `true`, this product is the main bundle product and is not bookable on its own. All of the sub-products linked to this bundle should be booked as well. These products are listed inside `product_bundle_details`.",
            "readOnly" : true,
            "example" : true,
            "deprecated" : true,
            "default" : false
          },
          "product_addon" : {
            "title" : "Product Has Addon",
            "type" : "boolean",
            "description" : "Product has one or more addon-products. In case this value is indicated as `true`, this product has one or more optional addons. All of the optional addons are listed inside `product_addon_details`.",
            "readOnly" : true,
            "example" : true,
            "default" : false
          },
          "product_availability" : {
            "title" : "Product Has Availability",
            "type" : "boolean",
            "description" : "Whether it is required to select an availability slot to make a booking request. \n\nIn case (`product_class:CLUSTER` or `product_class:COMBI`) and `product_availability:true` then the product has shared capacity (`product_capacity_type:SHARED`) across the sub-products. \n\nIf `product_availability:false` then this main cluster/combi product does not have shared capacity across the sub-products and therefore those should be checked individually. \n\nCheck `product_admission_type` for more details.",
            "example" : true,
            "default" : true
          },
          "product_availability_assigned" : {
            "title" : "Product Has Assigned Availability",
            "type" : "boolean",
            "description" : "Whether availability slots are assigned to a specific `spot`. In case `product_availability_assigned:true` assigned 'spots' will be returned once a booking is confirmed (using a best available seat algorithm).\n\nOptionally, if seatmaps are being supported, you are able to send your own selected seats.",
            "readOnly" : true,
            "example" : true,
            "default" : false
          },
          "product_capacity" : {
            "title" : "Product Has Limited Capacity",
            "type" : "boolean",
            "description" : "Whether this product has managed (limited) capacity. \n\nCheck `product_capacity_type` for more details.",
            "example" : true,
            "default" : true
          },
          "product_traveldate_required" : {
            "title" : "Product Traveldate Required",
            "type" : "boolean",
            "description" : "Whether a traveldate is required upon booking. \nRedundant if availability is selected.",
            "example" : false,
            "default" : false
          },
          "product_cancellation_allowed" : {
            "title" : "Product Cancellation Allowed",
            "type" : "boolean",
            "description" : "Whether it is allowed to cancel this product. \n\nNote that even if a product can be cancelled, cancellation fees might still apply.\nPlease check `product_cancellation_policies` for more details.",
            "readOnly" : true,
            "example" : true,
            "default" : true
          },
          "product_overbooking_allowed" : {
            "title" : "Product Overbooking Allowed",
            "type" : "boolean",
            "description" : "Whether it is allowed to overbook. Not appplicable to third party products.",
            "readOnly" : true,
            "example" : false,
            "default" : false
          },
          "product_past_date_booking_allowed" : {
            "title" : "Product Past Date Booking Allowed",
            "type" : "boolean",
            "description" : "Whether it is allowed to select a date in the past.",
            "readOnly" : true,
            "example" : true,
            "default" : false
          },
          "product_capacity_id" : {
            "title" : "Product Capacity ID",
            "type" : "string",
            "description" : "Product capacity identifier. ",
            "readOnly" : true,
            "example" : "43525235"
          },
          "product_capacity_shared_id" : {
            "title" : "Product Shared Capacity ID",
            "type" : "string",
            "description" : "Shared availability / Capacity identifier. \n\nOnly applicable if `capacity_type:SHARED / COMBINED`.",
            "readOnly" : true,
            "example" : "435252453"
          },
          "product_capacity_type" : {
            "$ref" : "#/components/schemas/CapacityType"
          },
          "product_admission_type" : {
            "$ref" : "#/components/schemas/ProductAdmissionType"
          },
          "product_status" : {
            "$ref" : "#/components/schemas/ProductStatus"
          },
          "product_catalogue_status" : {
            "$ref" : "#/components/schemas/ProductCatalogueStatus"
          },
          "product_class" : {
            "$ref" : "#/components/schemas/ProductClass"
          },
          "product_service_type" : {
            "$ref" : "#/components/schemas/ProductServiceType"
          },
          "product_pickup_point" : {
            "title" : "Product Pickup",
            "type" : "string",
            "description" : "Whether its required to set a pickup point for this product. Details on the available locations are inside `product_locations`.",
            "readOnly" : true,
            "example" : "MANDATORY",
            "enum" : [ "MANDATORY", "OPTIONAL", "NOT_SET" ]
          },
          "product_pickup_point_details" : {
            "title" : "Product Pickup Points",
            "type" : "array",
            "description" : "If `product_pickup_point:MANDATORY/OPTIONAL`, then `pickup_point_details` are required.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/PickupPoint"
            }
          },
          "product_content" : {
            "$ref" : "#/components/schemas/ProductContent"
          },
          "product_redemption_rules" : {
            "$ref" : "#/components/schemas/ProductRedemptionRules"
          },
          "product_code_settings" : {
            "$ref" : "#/components/schemas/ProductCodeSettings"
          },
          "product_payment_detail" : {
            "$ref" : "#/components/schemas/ProductPaymentDetails"
          },
          "product_type_seasons" : {
            "title" : "Product Type Seasons",
            "type" : "array",
            "description" : "Product types per season. \nNot returned in case of bundle products.",
            "items" : {
              "$ref" : "#/components/schemas/ProductTypeSeason"
            }
          },
          "product_options" : {
            "title" : "Product Options",
            "type" : "array",
            "description" : "General product options.",
            "items" : {
              "$ref" : "#/components/schemas/ExtraOptions"
            }
          },
          "product_cancellation_policies" : {
            "title" : "Product Cancellation Policies",
            "type" : "array",
            "description" : "Sometimes a product has a cancellation fee. In that case the order amount might not be refunded in full. If no cancellation policies are set and `product_cancellation_allowed:true` then you can always cancel products until they are redeemed.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/CancellationPolicy"
            }
          },
          "product_opening_times" : {
            "title" : "Product Opening Times",
            "type" : "array",
            "description" : "Opening times of the product / venue.",
            "items" : {
              "$ref" : "#/components/schemas/OpeningTimes"
            }
          },
          "product_currencies" : {
            "title" : "Product Currencies",
            "type" : "array",
            "description" : "If this product is available in multiple supplier base currencies, all related products are listed here.",
            "items" : {
              "$ref" : "#/components/schemas/ProductCurrency"
            }
          },
          "product_flags" : {
            "title" : "Product Flags",
            "type" : "array",
            "description" : "Product flags.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Flag"
            }
          },
          "product_block_out_dates" : {
            "title" : "Product Block Out Dates",
            "type" : "array",
            "description" : "Dates when the product is not available, these dates will not show as available dates.",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductBlockoutDate"
            }
          },
          "product_special_dates" : {
            "title" : "Product Special Dates",
            "type" : "array",
            "description" : "Dates for a special event, depending on the products extra information might be available.",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductSpecialDate"
            }
          },
          "product_locations" : {
            "title" : "Product Locations",
            "type" : "array",
            "description" : "Venues / Locations of interested for this product.",
            "items" : {
              "$ref" : "#/components/schemas/ProductLocation"
            }
          },
          "product_cluster_details" : {
            "title" : "Product Clusters",
            "type" : "array",
            "description" : "In case `product_class:CLUSTER` the following array will be populated. This array contains all linked cluster-products to this main cluster-product. One of these should be booked instead of the main-product. Depending on the configuration, details and availability might be shared across these products.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductRelationDetails"
            }
          },
          "product_combi_details" : {
            "title" : "Product Combi's",
            "type" : "array",
            "description" : "The List Products API lists all available product configurations enabled for the distributor.\nIf you have a combination (combi-product) of (Product A + Product B) a third product (Product C) will be created. \n\nThe API will return the following:\n```\nArray [\n   Product A Details {\n    `product_id`:'PRODUCT_ID_A'\n    `product_combi:false`,\n    `product_combi_details`:[])\n   }\n   \n   Product B Details {\n    `product_id`:'PRODUCT_ID_B',\n    `product_combi:false`,\n    `product_combi_details`:[])\n   }\n   \n   Product C Details { \n     `product_id`:'PRODUCT_ID_C'\n     `product_combi:true`, \n     `product_combi_details`:['PRODUCT_ID_A', 'PRODUCT_ID_B')\n   }\n]\n```\nEvery product has a unique ID and acts as a separate entity. Therefore there is no need to handle this logic on your side and you could handle them as separate products. \nIn case `product_class:COMBI` the following array will be populated. This array contains all linked combi-products to this main combi-product. Depending on the configuration, details and availability might be shared across these products.\n* To make a combination booking ALL combi sub-products MUST be set in the booking request as well as the main combi-product itself. Failing to do so will cause an invalid response.\n* All sub-products must be set in the `product_combi_details` object of the main combi-product booking object, else the products will be set as individual bookings. (Some sub-products can be booked as separate products as well)\n* All sub-products will inherited the `product_type_details` configuration of the main combi-product and therefore should not be set.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductRelationDetails"
            }
          },
          "product_bundle_details" : {
            "title" : "Product Bundle",
            "type" : "array",
            "description" : "In case `product_class:BUNDLE` the following array will be populated. This array contains all linked bundle-products to this main product. All of these should be booked in addition to the main product. ",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductRelationDetails"
            }
          },
          "product_addon_details" : {
            "title" : "Product Addons",
            "type" : "array",
            "description" : "In case `product_addon:true` the following array will be populated. This array contains all linked addon-products to this main product. One or more of these could be booked in addition to the main product. ",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductRelationDetails"
            }
          },
          "product_categories" : {
            "title" : "Product Categories",
            "type" : "array",
            "description" : "The categories the product belongs to.",
            "items" : {
              "title" : "Category",
              "type" : "string",
              "description" : "Category.",
              "example" : "PRODUCT_CATEGORY_ID_123"
            }
          },
          "product_recommendations" : {
            "title" : "Product Recommendations",
            "type" : "array",
            "description" : "The recommendations the product has applied.",
            "items" : {
              "title" : "Recommendation",
              "type" : "string",
              "description" : "Recommendations ID",
              "example" : "PRODUCT_RECOMMENDATION_ID_123"
            }
          },
          "product_destinations" : {
            "title" : "Product Destinations",
            "type" : "array",
            "description" : "The destinations the product belongs to.",
            "readOnly" : true,
            "items" : {
              "title" : "Destination",
              "type" : "string",
              "description" : "Destination.",
              "example" : "PRODUCT_DESTINATION_ID_123"
            }
          },
          "product_languages" : {
            "title" : "Product Languages",
            "type" : "array",
            "description" : "Language codes for the available languages of the product, e.g. Shows are available in English and Spanish. \n\nLanguage is defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.",
            "example" : [ "en", "es", "jp" ],
            "items" : {
              "title" : "Product Language",
              "type" : "string",
              "description" : "Product language."
            }
          },
          "product_content_languages" : {
            "title" : "Product Content Languages",
            "type" : "array",
            "description" : "Language Codes of the languages for which the product data is available. \n\nLanguage is defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. This field can be used to show multilingual content on your website.",
            "example" : [ "en", "nl" ],
            "items" : {
              "title" : "Content Language Code",
              "type" : "string"
            }
          },
          "product_guide_languages" : {
            "title" : "Product Guide Languages",
            "type" : "array",
            "description" : "Language codes of the available guides.\n\nLanguage is defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/GuideLanguage"
            }
          },
          "product_routes" : {
            "title" : "Product Routes",
            "type" : "array",
            "description" : "Array of routes linked to this product.",
            "readOnly" : true,
            "items" : {
              "title" : "Route ID",
              "type" : "string",
              "example" : "PRODUCT_ROUTE_ID_123"
            }
          },
          "product_notes" : {
            "title" : "Product Notes",
            "type" : "array",
            "description" : "Optional notes on this product.",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "product_google_categories" : {
            "title" : "Product Google Categories",
            "type" : "string",
            "description" : "Comma-separated list of attached Google categories (https://developers.google.com/travel/things-to-do/reference/feed-spec/product-category).",
            "readOnly" : true
          },
          "product_custom_fields" : {
            "title" : "Product Custom Fields",
            "type" : "array",
            "description" : "Freeform entry of any key-value pair.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            }
          },
          "product_created" : {
            "title" : "Product Created",
            "type" : "string",
            "description" : "The date on which the product has been created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "product_created_name" : {
            "title" : "Product Created Name",
            "type" : "string",
            "description" : "User who created the product.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com"
          },
          "product_created_email" : {
            "title" : "Product Created Email",
            "type" : "string",
            "description" : "Username that created the product.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com"
          },
          "product_modified" : {
            "title" : "Product Modified",
            "type" : "string",
            "description" : "The date on which the product has been last modified.",
            "format" : "date-time",
            "readOnly" : true
          },
          "product_modified_name" : {
            "title" : "Product Modified Name",
            "type" : "string",
            "description" : "User who modified the product.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com"
          },
          "product_modified_email" : {
            "title" : "Product Created Email",
            "type" : "string",
            "description" : "Username that modified the product.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com"
          },
          "product_view_type" : {
            "$ref" : "#/components/schemas/AccountType"
          }
        },
        "additionalProperties" : false,
        "description" : "Product model."
      },
      "GuideLanguage" : {
        "title" : "Guide Language",
        "required" : [ "language_codes", "language_type" ],
        "type" : "object",
        "properties" : {
          "language_codes" : {
            "title" : "Language Codes",
            "type" : "array",
            "description" : "Language codes.",
            "items" : {
              "title" : "Language Code",
              "type" : "string",
              "example" : "nl"
            }
          },
          "language_type" : {
            "title" : "Language Type",
            "type" : "string",
            "description" : "Type of language.",
            "example" : "GUIDE_AUDIO",
            "enum" : [ "GUIDE_LIVE", "GUIDE_AUDIO", "GUIDE_READING" ]
          }
        },
        "description" : "Language code of the available guide.\n\nLanguage is defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format."
      },
      "ProductTermsAndConditions" : {
        "title" : "Product Terms and Conditions",
        "type" : "object",
        "properties" : {
          "terms_mandatory" : {
            "title" : "Terms Mandatory",
            "type" : "boolean",
            "description" : "Whether it is mandatory to show / accept these conditions.",
            "default" : false
          },
          "terms_url" : {
            "title" : "Terms URL",
            "type" : "string",
            "description" : "Terms URL.",
            "format" : "URL"
          }
        },
        "description" : "Product terms and conditions."
      },
      "RedemptionDurationType" : {
        "title" : "Redemption Duration Type",
        "type" : "string",
        "description" : "When the actual countdown starts.\n\nOnly applicable if `redemption_has_duration:true`.\n* `TRAVEL_DATE` - This product countdown starts on the selected traveldate (`booking_travel_date` or `availability_from_date_time`)\n* `BOOKING_DATE` - This product countdown starts on the booking date (directly after purchase).\n* `SCAN` - This product countdown starts after the first scan.\n* `CONVERSION` - This product countdown starts after converting the voucher into a pass.\n",
        "example" : "SCAN",
        "default" : "SCAN",
        "enum" : [ "TRAVEL_DATE", "BOOKING_DATE", "SCAN", "CONVERSION" ]
      },
      "RedemptionCountType" : {
        "title" : "Redemption Count Type",
        "type" : "string",
        "description" : "The amount of allowed redemptions for this product.\n\nIf `redemption_has_duration:true`, then this value is ONLY applicable during an active countdown. Otherwise it is a general admission counter.\n* `UNLIMITED` - This product can be redeemed an unlimited amount of times (during the redeem duration).\n* `LIMITED` - This product can be redeemed a limited amount of times (during the redeem duration).\n",
        "example" : "LIMITED",
        "default" : "LIMITED",
        "enum" : [ "UNLIMITED", "LIMITED" ]
      },
      "RedemptionRules" : {
        "title" : "Redemption Rules",
        "type" : "object",
        "properties" : {
          "redemption_grace_time_before" : {
            "title" : "Redemption Grace Time Before",
            "type" : "integer"
          },
          "redemption_grace_time_after" : {
            "title" : "Redemption Grace Time After",
            "type" : "integer"
          },
          "redemption_has_duration" : {
            "title" : "Redemption has duration",
            "type" : "boolean",
            "description" : "In case this product has a fixed duration a countdown will be started based on the `redemption_duration_type`.",
            "example" : true,
            "default" : false
          },
          "redemption_duration_time" : {
            "title" : "Redemption Duration Time",
            "type" : "integer",
            "description" : "The total amount of time in seconds that the pass is supposed to be valid. Only applicable if `redemption_has_duration:true`.",
            "example" : 86400
          },
          "redemption_duration_type" : {
            "$ref" : "#/components/schemas/RedemptionDurationType"
          },
          "redemption_count_type" : {
            "$ref" : "#/components/schemas/RedemptionCountType"
          },
          "redemption_count_value" : {
            "title" : "Redemption Count Value",
            "type" : "integer",
            "description" : "The amount of times this product can be redeemed. \n\nOnly applicable if `redemption_count_type:LIMITED`.",
            "example" : 5,
            "default" : 1
          }
        }
      },
      "ProductRedemptionRules" : {
        "title" : "Product Redemption Rules",
        "required" : [ "redemption_count_type", "redemption_has_duration" ],
        "type" : "object",
        "properties" : {
          "redemption_has_duration" : {
            "title" : "Redemption has duration",
            "type" : "boolean",
            "description" : "In case this product has a fixed duration a countdown will be started based on the `redemption_duration_type`.",
            "example" : true,
            "default" : false
          },
          "redemption_duration_time" : {
            "title" : "Redemption Duration Time",
            "type" : "integer",
            "description" : "The total amount of time in seconds that the pass is supposed to be valid. Only applicable if `redemption_has_duration:true`.",
            "example" : 86400
          },
          "redemption_duration_type" : {
            "$ref" : "#/components/schemas/RedemptionDurationType"
          },
          "redemption_count_type" : {
            "$ref" : "#/components/schemas/RedemptionCountType"
          },
          "redemption_count_value" : {
            "title" : "Redemption Count Value",
            "type" : "integer",
            "description" : "The amount of times this product can be redeemed. \n\nOnly applicable if `redemption_count_type:LIMITED`.",
            "example" : 5,
            "default" : 1
          }
        },
        "description" : "Rules on the product redemption.",
        "readOnly" : true
      },
      "ProductRelationDetails" : {
        "title" : "Product Relation",
        "required" : [ "product_admission_type", "product_currency_code", "product_id", "product_parent_id", "product_supplier_id", "product_supplier_name", "product_title" ],
        "type" : "object",
        "properties" : {
          "product_id" : {
            "title" : "Product ID",
            "type" : "string",
            "description" : "Unique identifier for the product assigned by Prio.",
            "example" : "PRODUCT_RELATION_123"
          },
          "product_parent_id" : {
            "title" : "Product Parent ID",
            "type" : "string",
            "description" : "Unique identifier for the parent product assigned by Prio.",
            "readOnly" : true,
            "example" : "PRODUCT_PARENT_ID_123"
          },
          "product_supplier_id" : {
            "title" : "Product Supplier ID",
            "type" : "string",
            "description" : "Unique identifier for supplier.",
            "readOnly" : true,
            "example" : "PRODUCT_SUPPLIER_ID"
          },
          "product_supplier_name" : {
            "title" : "Product Supplier Name",
            "type" : "string",
            "description" : "Name of the supplier which offers the product(s).",
            "readOnly" : true,
            "example" : "Test Museum"
          },
          "product_title" : {
            "title" : "Product Title",
            "type" : "string",
            "description" : "The title of product.",
            "example" : "Test Product"
          },
          "product_from_price" : {
            "title" : "Product From Price",
            "type" : "string",
            "description" : "Static From price which can be shown. (Usually regular Adult including discount). Also used for price filtering.",
            "example" : "16.40"
          },
          "product_currency_code" : {
            "title" : "Product Currency Code",
            "type" : "string",
            "description" : "Product Currency Code, according to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).",
            "readOnly" : true,
            "example" : "USD"
          },
          "product_start_date" : {
            "title" : "Product Start Date",
            "type" : "string",
            "description" : "Starting date of the product.",
            "format" : "date-time"
          },
          "product_end_date" : {
            "title" : "Product End Date",
            "type" : "string",
            "description" : "End date of the product.",
            "format" : "date-time"
          },
          "product_timepicker_visible" : {
            "title" : "Product Timepicker Visible",
            "type" : "boolean",
            "description" : "Whether you should show the timepicker during booking.",
            "example" : true,
            "default" : true
          },
          "product_traveldate_dependency" : {
            "title" : "Product Traveldate Dependency",
            "type" : "boolean",
            "description" : "This addon should be booked on the same date as the main booking.",
            "example" : true,
            "default" : true
          },
          "product_booking_window_product_id" : {
            "title" : "Product Booking Window Product ID",
            "type" : "string",
            "description" : "The booking window dependant product, also called dependencies, indicates the restrictions on sub-ticket bookings in regards to the selected travel-date of another product. This means that some products can only be bought between a fixed booking window relative to another product (booking). This is mainly used in itenaries and tours where external factors such as travel time restrict a guest to book multiple attractions in a short period.\n\nThis dependancy can be set for another (previous) sub-product in this array or the main product of this booking.\n\nOnly applicable if `product_class:COMBI` or `product_addon:true`.",
            "example" : "PRODUCT_ID_123"
          },
          "product_booking_window_start_time" : {
            "title" : "Product Booking Window Start Time",
            "type" : "integer",
            "description" : "The minimum amount of minutes passed after the selected travel date (`booking_travel_date`) or availability slot (`availability_from_date_time`) of the `product_booking_window_product_id`.\n\nOnly applicable if `product_class:COMBI` or `product_addon:true`.",
            "example" : 1440
          },
          "product_booking_window_end_time" : {
            "title" : "Product Booking Window End Time",
            "type" : "integer",
            "description" : "The maximum amount of minutes allowed after the previously selected travel date (`booking_travel_date`) or availability slot (`availability_from_date_time`) of the `product_booking_window_product_id`.\n\nOnly applicable if `product_class:COMBI` or `product_addon:true`.",
            "example" : 2160
          },
          "product_class" : {
            "$ref" : "#/components/schemas/ProductClass"
          },
          "product_admission_type" : {
            "$ref" : "#/components/schemas/ProductAdmissionType"
          },
          "product_relation_type" : {
            "$ref" : "#/components/schemas/RelationType"
          },
          "product_images" : {
            "title" : "Product Images",
            "type" : "array",
            "description" : "It contains images related to the product.",
            "items" : {
              "$ref" : "#/components/schemas/Image"
            }
          },
          "product_type_seasons" : {
            "title" : "Product Type Seasons",
            "type" : "array",
            "description" : "Product types per season.",
            "items" : {
              "$ref" : "#/components/schemas/ProductTypeSeason"
            }
          }
        },
        "description" : "Details on the Product Relation (sub-products)."
      },
      "ProductSubDetail" : {
        "title" : "Product Sub Detail",
        "required" : [ "product_admission_type", "product_currency_code", "product_id", "product_parent_id", "product_supplier_id", "product_supplier_name", "product_title" ],
        "type" : "object",
        "properties" : {
          "product_parent_id" : {
            "title" : "Product Parent ID",
            "type" : "string",
            "description" : "Unique identifier for the parent product assigned by Prio.",
            "readOnly" : true,
            "example" : "PRODUCT_PARENT_ID_123"
          },
          "product_id" : {
            "title" : "Product Sub ID",
            "type" : "string",
            "description" : "Unique identifier for the product assigned by Prio.",
            "example" : "PRODUCT_COMBI_ID_123"
          },
          "product_title" : {
            "title" : "Product Title",
            "type" : "string",
            "description" : "The title of product.",
            "readOnly" : true,
            "example" : "Test Product"
          },
          "product_supplier_id" : {
            "title" : "Product Supplier ID",
            "type" : "string",
            "description" : "Unique identifier for supplier.",
            "readOnly" : true,
            "example" : "PRODUCT_SUPPLIER_ID"
          },
          "product_supplier_name" : {
            "title" : "Product Supplier Name",
            "type" : "string",
            "description" : "Name of the supplier which offers the product(s).",
            "readOnly" : true,
            "example" : "Test Museum"
          },
          "product_admission_type" : {
            "$ref" : "#/components/schemas/ProductAdmissionType"
          },
          "product_currency_code" : {
            "title" : "Product Currency Code",
            "type" : "string",
            "description" : "Product Currency Code, according to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).",
            "readOnly" : true,
            "example" : "USD"
          },
          "product_availability_id" : {
            "title" : "Product Combi Availability ID",
            "type" : "string",
            "description" : "The unique ID for the availability slot. Only mandatory if `product_availability:true`",
            "example" : "20191026090010006526"
          },
          "product_availability_from_date_time" : {
            "title" : "Product Availability From Date Time",
            "type" : "string",
            "description" : "The starting date and time of the activity availability.",
            "format" : "date-time",
            "readOnly" : true
          },
          "product_availability_to_date_time" : {
            "title" : "Product Availability To Date Time",
            "type" : "string",
            "description" : "The till date and time of the activity availability.",
            "format" : "date-time",
            "readOnly" : true
          },
          "product_availability_capacity_id" : {
            "title" : "Availability Slot Capacity ID",
            "type" : "string",
            "description" : "Availability group / capacity identifier.",
            "readOnly" : true,
            "example" : "43525235"
          },
          "product_availability_capacity_shared_id" : {
            "title" : "Availability Slot Shared Capacity ID",
            "type" : "string",
            "description" : "Shared availability / capacity identifier. Only applicable if `capacity_type:SHARED / COMBINED`.",
            "readOnly" : true,
            "example" : "435252453"
          },
          "product_type_details" : {
            "title" : "Product Type Booking Details",
            "type" : "array",
            "description" : "A list specifying the booking quantity per product type. Only returned for bundle products.",
            "items" : {
              "$ref" : "#/components/schemas/BookingItemWithPricing"
            }
          },
          "booking_travel_date" : {
            "title" : "Booking Combi Travel Date",
            "type" : "string",
            "description" : "If `product_availability:false` you can still define the expected redemption date of this product. Required if `product_traveldate_required:true`.",
            "format" : "date-time"
          },
          "booking_external_reference" : {
            "title" : "Booking External Reference",
            "type" : "string",
            "description" : "A unique booking identifier within the external system.",
            "example" : "BOOKING_EXTERNALREF123"
          }
        },
        "description" : "Product sub detail."
      },
      "ProductAddonDetail" : {
        "title" : "Product Addon Detail",
        "required" : [ "product_admission_type", "product_id", "product_supplier_id", "product_supplier_name", "product_title" ],
        "type" : "object",
        "properties" : {
          "product_id" : {
            "title" : "Product Sub ID",
            "type" : "string",
            "description" : "Unique identifier for the product assigned by Prio.",
            "example" : "PRODUCT_COMBI_ID_123"
          },
          "product_title" : {
            "title" : "Product Title",
            "type" : "string",
            "description" : "The title of product.",
            "readOnly" : true,
            "example" : "Test Product"
          },
          "product_supplier_id" : {
            "title" : "Product Supplier ID",
            "type" : "string",
            "description" : "Unique identifier for supplier.",
            "readOnly" : true,
            "example" : "PRODUCT_SUPPLIER_ID"
          },
          "product_supplier_name" : {
            "title" : "Product Supplier Name",
            "type" : "string",
            "description" : "Name of the supplier which offers the product(s).",
            "readOnly" : true,
            "example" : "Test Museum"
          },
          "product_admission_type" : {
            "$ref" : "#/components/schemas/ProductAdmissionType"
          },
          "product_availability_from_date_time" : {
            "title" : "Product Availability From Date Time",
            "type" : "string",
            "description" : "The starting date and time of the activity availability.",
            "format" : "date-time",
            "readOnly" : true
          },
          "product_availability_to_date_time" : {
            "title" : "Product Availability To Date Time",
            "type" : "string",
            "description" : "The till date and time of the activity availability.",
            "format" : "date-time",
            "readOnly" : true
          },
          "booking_travel_date" : {
            "title" : "Booking Combi Travel Date",
            "type" : "string",
            "description" : "If `product_availability:false` you can still define the expected redemption date of this product. Required if `product_traveldate_required:true`.",
            "format" : "date-time"
          },
          "booking_order_reference" : {
            "title" : "Booking Order Reference",
            "type" : "string",
            "description" : "Booking order reference",
            "example" : "BOOKING_ORDER_REFERENCE"
          },
          "booking_reference" : {
            "title" : "Booking Reference",
            "type" : "string",
            "description" : "A unique booking identifier within the system.",
            "example" : "BOOKING_REF123"
          },
          "booking_status" : {
            "$ref" : "#/components/schemas/BookingStatusTypes"
          }
        },
        "description" : "Product Addon detail."
      },
      "ProductLocation" : {
        "title" : "Product Location",
        "description" : "Product location.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/LocationModel"
        }, {
          "required" : [ "location_pickup_point" ],
          "type" : "object",
          "properties" : {
            "location_pickup_point" : {
              "title" : "Location Has Pickup Point",
              "type" : "boolean",
              "description" : "Whether this location is a pickup point.",
              "example" : true,
              "default" : false
            }
          }
        } ]
      },
      "ProductAdmissionType" : {
        "title" : "Product Admission Types",
        "type" : "string",
        "description" : "<details>\n  <summary>**Product Admission Types**</summary>\n  \n* `TIME_PERIOD` - Customers can arrive at any time between the start (`availability_from_date_time`) and end time (`availability_to_date_time`) of the availability slot. Multiple periods in a single day should be expected.\n  Therefore a date- and timepicker should be shown.\n\n* `TIME_DATE` - Variation on `TIME_PERIOD`, whereas only a single period exists in a day. It is not required to choose between different times within a day, therefore only a datepicker is required.\n  Note that in case the slot includes midnight (two or more days), the day from which the `availability_from_date_time` originated should take precedence.\n\n* `TIME_POINT` - Customers are required to be present at the start time of the availability slot but can leave any time they want.\n* `TIME_OPEN` - Customers can arrive at any time. Availablity is not applicable.\n* `TIME_SLOT` - Customers are required to be present at the start time of the availability slot, and the service is expected to finish at the end time of the slot. </details>\n",
        "readOnly" : true,
        "example" : "TIME_PERIOD",
        "enum" : [ "TIME_PERIOD", "TIME_DATE", "TIME_POINT", "TIME_SLOT", "TIME_OPEN" ]
      },
      "ProductContent" : {
        "title" : "Product Content",
        "required" : [ "product_long_description", "product_short_description", "product_supplier_name", "product_title" ],
        "type" : "object",
        "properties" : {
          "product_title" : {
            "title" : "Product Title.",
            "type" : "string",
            "description" : "The title of product.",
            "example" : "Test Product"
          },
          "product_supplier_name" : {
            "title" : "Product Supplier Name",
            "type" : "string",
            "description" : "Name of the supplier which offers the product(s).",
            "readOnly" : true,
            "example" : "Test Museum"
          },
          "product_duration_text" : {
            "title" : "Product Duration Text",
            "type" : "string",
            "description" : "Duration of product as contextial representation.",
            "example" : "1.5 hour"
          },
          "product_short_description" : {
            "title" : "Product Short Description",
            "type" : "string",
            "description" : "The short description of product.",
            "example" : "Rijksmuseum Entrance product + Multimediatour"
          },
          "product_long_description" : {
            "title" : "Product Long Description",
            "type" : "string",
            "description" : "The long description of product.",
            "example" : "Experience a beautiful evening cruise during the Amsterdam Light Festival without queueing up. Besides a place on a date and time of your choice, this cruise also includes a drink and a snack."
          },
          "product_additional_information" : {
            "title" : "Product Additional Information",
            "type" : "string",
            "description" : "Additional information shown on the website and voucher.",
            "example" : "Some additional information."
          },
          "product_entry_notes" : {
            "title" : "Product Entry Notes",
            "type" : "string",
            "description" : "Product entry information. (Know before you go).\nThe user-visible list of important notes, use for details such as age-restrictions or other conditions that make this service unsuitable.\n",
            "example" : "Reconfirmation: Please call or email atleast 72 hour in advance to reconfirm your arrival."
          },
          "product_booking_url" : {
            "title" : "Product Booking URL",
            "type" : "string",
            "description" : "Booking URL for this product. The page should include a button to start the booking / checkout flow.",
            "format" : "URI",
            "example" : "https://book.prioticket.com/productABC"
          },
          "product_landing_page_view_url" : {
            "title" : "Product Landing Page View URL",
            "type" : "string",
            "description" : "Product landing page for this product. Link to a list view at a higher level of available tickets and tours, prominently showing this option possibly among other options.",
            "format" : "URI",
            "example" : "https://book.prioticket.com"
          },
          "product_favorite" : {
            "title" : "Product Favorite",
            "type" : "boolean",
            "description" : "Indicator that this product is marked as a favorite.",
            "example" : false
          },
          "product_highlights" : {
            "title" : "Product Highlights",
            "type" : "array",
            "description" : "Product highlights.",
            "items" : {
              "$ref" : "#/components/schemas/Highlight"
            }
          },
          "product_includes" : {
            "title" : "Product Includes",
            "type" : "array",
            "description" : "Product includes.",
            "items" : {
              "$ref" : "#/components/schemas/ProductInclude"
            }
          },
          "product_excludes" : {
            "title" : "Product Excludes",
            "type" : "array",
            "description" : "Product excludes.",
            "items" : {
              "$ref" : "#/components/schemas/ProductExclude"
            }
          },
          "product_marketing_labels" : {
            "title" : "Product Marketing Labels",
            "type" : "array",
            "description" : "Product marketing labels.",
            "deprecated" : true,
            "items" : {
              "title" : "Marketing Label",
              "type" : "string",
              "description" : "Marketing label.",
              "example" : "Popular"
            }
          },
          "product_images" : {
            "title" : "Product Images",
            "type" : "array",
            "description" : "It contains images related to the product.",
            "items" : {
              "$ref" : "#/components/schemas/Image"
            }
          }
        },
        "description" : "All translatable product content."
      },
      "Image" : {
        "title" : "Image",
        "required" : [ "image_type", "image_url" ],
        "type" : "object",
        "properties" : {
          "image_from_date" : {
            "title" : "Image From Date",
            "type" : "string",
            "description" : "Event / Promotion starting date.",
            "format" : "date-time",
            "deprecated" : true
          },
          "image_till_date" : {
            "title" : "Image Till Date",
            "type" : "string",
            "description" : "Event / Promotion end date.",
            "format" : "date-time",
            "deprecated" : true
          },
          "image_type" : {
            "title" : "Product Image Type",
            "type" : "string",
            "description" : "Product image type.",
            "example" : "BANNER",
            "enum" : [ "BANNER", "MAIN", "DETAIL", "THUMBNAIL" ]
          },
          "image_format" : {
            "title" : "Image Format",
            "type" : "string",
            "description" : "Image format.",
            "example" : "JPG",
            "deprecated" : true
          },
          "image_size" : {
            "title" : "Image Size",
            "type" : "string",
            "description" : "Image size.",
            "deprecated" : true,
            "enum" : [ "ORIGINAL", "LARGE", "MEDIUM", "SMALL", "EXTRA_LARGE" ]
          },
          "image_url" : {
            "title" : "Image URL",
            "type" : "string",
            "description" : "Image URL.",
            "format" : "uri",
            "example" : "https://test.prioticket.com/products/145/img_1445586351_test1445593536.jpg"
          }
        },
        "additionalProperties" : false,
        "description" : "Details on the image."
      },
      "Highlight" : {
        "title" : "Product Highlight",
        "type" : "object",
        "properties" : {
          "highlight_description" : {
            "title" : "Highlight Description",
            "type" : "string",
            "description" : "Description of the highlight.",
            "example" : "Audio commentary in 21 languages through our Personal Audio System."
          },
          "highlight_type" : {
            "title" : "Highlight Type",
            "type" : "string",
            "description" : "Highlight type.",
            "example" : "SLOGAN",
            "deprecated" : true,
            "enum" : [ "SLOGAN", "ADDON", "INCLUDES", "ABOUT" ]
          },
          "highlight_icon" : {
            "title" : "Highlight Icon",
            "type" : "string",
            "description" : "Highlight icon.",
            "format" : "uri",
            "example" : "https://test.prioticket.com/products/145/img_1445586351_test1445593536.jpg",
            "deprecated" : true
          }
        },
        "additionalProperties" : false,
        "description" : "Product highlight."
      },
      "ProductInclude" : {
        "title" : "Product Include",
        "type" : "object",
        "properties" : {
          "include_name" : {
            "title" : "Include Name",
            "type" : "string",
            "description" : "The name of the included product.",
            "example" : "Drinks",
            "deprecated" : true
          },
          "include_description" : {
            "title" : "Include Description",
            "type" : "string",
            "description" : "More detail on the included product.",
            "example" : "Free non-alcoholic beverages"
          },
          "include_icon" : {
            "title" : "Include Icon",
            "type" : "string",
            "description" : "Include icon.",
            "format" : "uri",
            "example" : "https://test.prioticket.com/products/145/img_1445586351_test1445593536.jpg",
            "deprecated" : true
          }
        },
        "additionalProperties" : false,
        "description" : "Product include."
      },
      "ProductExclude" : {
        "title" : "Product Exclude",
        "type" : "object",
        "properties" : {
          "exclude_name" : {
            "title" : "Exclude Name",
            "type" : "string",
            "description" : "The name of the excluded product.",
            "example" : "Drinks",
            "deprecated" : true
          },
          "exclude_description" : {
            "title" : "Exclude Description",
            "type" : "string",
            "description" : "More detail on the excluded product.",
            "example" : "Alcoholic beverages"
          },
          "exclude_icon" : {
            "title" : "Exclude Icon",
            "type" : "string",
            "description" : "Exclude icon.",
            "format" : "uri",
            "example" : "https://test.prioticket.com/products/145/img_1445586351_test1445593536.jpg",
            "deprecated" : true
          }
        },
        "additionalProperties" : false,
        "description" : "Product exclude."
      },
      "CancellationType" : {
        "title" : "Cancellation Type",
        "type" : "string",
        "description" : "Whether the `cancellation_fee_threshold` is based on the travel date or booking date.",
        "example" : "TRAVEL_DATE",
        "enum" : [ "TRAVEL_DATE", "BOOKING_DATE" ]
      },
      "CancellationPolicy" : {
        "title" : "Cancellation Policy",
        "required" : [ "cancellation_type" ],
        "type" : "object",
        "properties" : {
          "cancellation_description" : {
            "title" : "Cancellation description",
            "type" : "string",
            "description" : "Description of this cancellation policy.",
            "example" : "Please cancel any booking 1 hour in advance."
          },
          "cancellation_type" : {
            "$ref" : "#/components/schemas/CancellationType"
          },
          "cancellation_fee_threshold" : {
            "title" : "Cancellation Fee Threshold",
            "type" : "integer",
            "description" : "The amount of minutes before / after the traveldate / booking date for which this policy is applicable.",
            "example" : 3600
          },
          "cancellation_fee_percentage" : {
            "title" : "Cancellation Fee Percentage",
            "type" : "number",
            "description" : "Percentage of the total booking value that should be charged.",
            "format" : "double",
            "example" : 20.5
          },
          "cancellation_fee_amount" : {
            "title" : "Cancellation Fee Amount",
            "type" : "string",
            "description" : "Fixed amount that should be charged.",
            "example" : "5.00"
          }
        },
        "additionalProperties" : false,
        "description" : "Optional fee that may be charged if a cancellation is requested. Either a fixed amount or a set percentage should be charged."
      },
      "CustomFieldType" : {
        "title" : "Custom Field Type",
        "type" : "string",
        "description" : "Custom Field Type:\n  * `SYSTEM` - This field is only stored and returned in the API. Only visible to the system.\n  * `USER` - This value is stored and visualized, can be shown in a customized fashion in other modules.",
        "example" : "SYSTEM",
        "deprecated" : true,
        "enum" : [ "SYSTEM", "USER" ]
      },
      "OrderEvent" : {
        "title" : "Order Event",
        "type" : "object",
        "properties" : {
          "event_order_version" : {
            "title" : "Order Version",
            "type" : "integer",
            "description" : "Order version number.",
            "example" : 2
          },
          "event_note" : {
            "title" : "Order Event Note",
            "type" : "string",
            "description" : "Event note.",
            "example" : "Change of timeslot on request of customer."
          },
          "event_type" : {
            "title" : "Type of event",
            "type" : "string",
            "description" : "Type of event.",
            "example" : "ORDER_CREATE",
            "enum" : [ "ORDER_CREATE", "ORDER_CREATE_FAILED", "ORDER_UPDATE", "ORDER_UPDATE_FAILED", "ORDER_CANCEL", "ORDER_CANCEL_FAILED", "ORDER_CANCEL_OVERRIDE", "ORDER_CANCEL_PARTIAL", "ORDER_CANCEL_PARTIAL_OVERRIDE", "PAYMENT_CREATE", "PAYMENT_CREATE_PARTIAL", "PAYMENT_REFUND", "PAYMENT_REFUND_FAILED", "PAYMENT_REFUND_OVERRIDE", "PAYMENT_REFUND_PARTIAL", "PAYMENT_REFUND_PARTIAL_OVERRIDE", "VOUCHER_RELEASE", "REDEMPTION", "REDEMPTION_FAILED", "CONTACT_UPDATE", "WEBHOOK_TRIGGER_FAILED", "OTHER_ACTION" ]
          },
          "event_created" : {
            "title" : "Event Created",
            "type" : "string",
            "description" : "Date and time of order event creation.",
            "format" : "date-time"
          },
          "event_creator_user_name" : {
            "title" : "Event Creator User Name",
            "type" : "string",
            "description" : "Name of the user that created this event.",
            "example" : "Andrew"
          },
          "event_creator_user_email" : {
            "title" : "Event Creator User Email",
            "type" : "string",
            "description" : "Email of the user that created this event.",
            "example" : "supervisor@prioticket.com"
          },
          "event_creator_user_role" : {
            "title" : "Event Creator User Role",
            "type" : "string",
            "description" : "Userrole (name) of the user that created this event.",
            "example" : "Supervisor"
          }
        },
        "description" : "Event taking place on the order."
      },
      "CustomField" : {
        "title" : "Custom Field",
        "type" : "object",
        "properties" : {
          "custom_field_name" : {
            "title" : "Custom Field Name",
            "type" : "string",
            "description" : "Unique Name / Identifier for this field.",
            "example" : "Custom Field Name"
          },
          "custom_field_value" : {
            "title" : "Custom Field Value",
            "type" : "string",
            "description" : "Freeform value of this field.",
            "example" : "Custom Field Value"
          },
          "custom_field_type" : {
            "$ref" : "#/components/schemas/CustomFieldType"
          }
        },
        "description" : "Custom Fields allow you to store and list any arbitrary value in the system.\n\nThis metadata are data elements that you create yourself. When you add metadata to your request, they are echoed in the response so that you can connect the transaction to your metadata. For example, to add a shift number and an employee ID to a transaction. You are free to create metadata fields, even encoded, as long as the datatype is a string."
      },
      "ProductTypeDetails" : {
        "title" : "Product Type Details",
        "required" : [ "product_type", "product_type_id", "product_type_pricing" ],
        "type" : "object",
        "properties" : {
          "product_type" : {
            "$ref" : "#/components/schemas/ProductType"
          },
          "product_type_class" : {
            "$ref" : "#/components/schemas/ProductTypeClass"
          },
          "product_type_variant_id" : {
            "title" : "Product Type Variant ID",
            "type" : "string",
            "description" : "Unique identifier for this product type variant.",
            "readOnly" : true,
            "example" : "PRODUCT_TYPE_VARIANT_ID_123",
            "deprecated" : true
          },
          "product_type_id" : {
            "title" : "Product Type ID",
            "type" : "string",
            "readOnly" : true,
            "example" : "PRODUCT_TYPE_ID_123"
          },
          "product_type_label" : {
            "title" : "Product Type Label",
            "type" : "string",
            "description" : "(Translatable) The actual label to show on your front-end.",
            "example" : "Adult"
          },
          "product_type_description" : {
            "title" : "Product Type Description",
            "type" : "string",
            "description" : "(Translatable) Optional description of this product type. If provided, it is highly recommended to show it on your front-end as it might contain important information about the eligibility.",
            "example" : "Standard Entry Fee"
          },
          "product_type_age_from" : {
            "title" : "Product Type Age From",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The starting age for age group.",
            "readOnly" : true,
            "example" : 18
          },
          "product_type_age_to" : {
            "title" : "Product Type Age To",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The ending age for age group.  If both `product_type_age_from` and `product_type_age_to` are empty no age-restrictions should be shown. If only `product_type_age_to` is empty, then it is advised to show the age-restriction as e.g. \"22+\".\n",
            "readOnly" : true,
            "example" : 65
          },
          "product_type_pax" : {
            "title" : "Product Type Pax",
            "multipleOf" : 1,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Number of persons that should be counted in the reporting.",
            "readOnly" : true,
            "example" : 1,
            "default" : 1
          },
          "product_type_capacity" : {
            "title" : "Product Type Capacity",
            "multipleOf" : 1,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Capacity that should be counted / blocked in the system.\n\nFor example:\n\nIf a single table with six seats is booked by two persons, the setup would be as follows:\n\n  ```\n  \"product_type_count\": 1,\n  \"product_type_pax\": 2,\n  \"product_type_capacity\": 6\n  ```\n",
            "readOnly" : true,
            "example" : 1,
            "default" : 1
          },
          "product_type_quantity_min" : {
            "title" : "Product Type Quantity Min",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The minimum required quantity to be selected. The `product_type_count` must be equal or higher.",
            "readOnly" : true,
            "example" : 1
          },
          "product_type_quantity_max" : {
            "title" : "Product Type Quantity Max",
            "multipleOf" : 1,
            "maximum" : 500,
            "type" : "integer",
            "description" : "The maximum allowed quantity to be selected. The `product_type_count` must be equal or lower.",
            "readOnly" : true,
            "example" : 10
          },
          "product_type_price_tax_id" : {
            "title" : "Product Type Price Tax ID",
            "type" : "string",
            "description" : "Tax ID for this product type. Tax information can be retrieved from the Tax API.",
            "readOnly" : true,
            "example" : "TAX_ID_123"
          },
          "product_type_price_type" : {
            "title" : "Product Type Price Type",
            "type" : "string",
            "description" : "Whether the price is applicable per individual or fixed for the whole group. \nPrice Type:\n     * `INDIVIDUAL` - Depending on the booking quantity, the price increases.\n     * `GROUP` - The price for this product type is fixed regardless of how many are booked.",
            "readOnly" : true,
            "enum" : [ "INDIVIDUAL", "GROUP" ]
          },
          "product_type_pricing" : {
            "$ref" : "#/components/schemas/ProductTypePricing"
          },
          "product_type_fees" : {
            "title" : "Product Type Fees",
            "type" : "array",
            "description" : "List of fees. Some fee types are only visible for certain users.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Fee"
            }
          },
          "product_type_quantity_variations_label" : {
            "title" : "Product Type Quantity Variations Label",
            "type" : "string",
            "readOnly" : true,
            "example" : "The more you buy, the bigger the discount gets!",
            "deprecated" : true
          },
          "product_type_quantity_variations" : {
            "title" : "Product Type Quantity Variations",
            "type" : "array",
            "description" : "Only set if `product_quantity_pricing:true`.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductTypeQuantityVariation"
            }
          },
          "product_type_daily_variations" : {
            "title" : "Product Type Daily Variations",
            "type" : "array",
            "description" : "Only set if `product_daily_pricing:true`. As an alternative to implementing these prices statically (Content API), they could also be retrieved from the Availability API (`availability_pricing`).",
            "items" : {
              "$ref" : "#/components/schemas/ProductTypeDailyVariation"
            }
          }
        },
        "description" : "Details on a single product type."
      },
      "ProductTypeSeason" : {
        "title" : "Product Type Season",
        "required" : [ "product_type_season_details", "product_type_season_start_date" ],
        "type" : "object",
        "properties" : {
          "product_type_season_label" : {
            "title" : "Product Type Season Label",
            "type" : "string",
            "description" : "Optional label for this season. Only applicable if set and `product_seasonal_pricing:true.",
            "example" : "Summer Season"
          },
          "product_type_season_start_date" : {
            "title" : "Product Type Season Start Date",
            "type" : "string",
            "description" : "Start date of this season.",
            "format" : "date-time"
          },
          "product_type_season_end_date" : {
            "title" : "Product Type Season End Date",
            "type" : "string",
            "description" : "End date of this season.",
            "format" : "date-time"
          },
          "product_type_season_details" : {
            "title" : "Product Type Season Details",
            "type" : "array",
            "description" : "Contains information related to the different product type versions in this season.",
            "items" : {
              "$ref" : "#/components/schemas/ProductTypeDetails"
            }
          }
        },
        "description" : "Details on a single product type season."
      },
      "ProductTypeQuantityVariation" : {
        "title" : "Product Type Quantity Variation",
        "required" : [ "product_type_quantity_variation_amount", "product_type_quantity_variation_min", "product_type_quantity_variation_price_type" ],
        "type" : "object",
        "properties" : {
          "product_type_quantity_variation_min" : {
            "title" : "Product Type Quantity Variation Min",
            "minimum" : 1,
            "type" : "integer",
            "description" : "If `product_quantity_pricing:true`; The minimum booking quantity of this type required for this pricing configuration. This value has `product_type_quantity_min` as an absolute minimum.",
            "example" : 1
          },
          "product_type_quantity_variation_max" : {
            "title" : "Product Type Quantity Variation Max",
            "minimum" : 1,
            "type" : "integer",
            "description" : "If `product_quantity_pricing:true`; The maximum booking quantity allowed for this pricing configuration. This value will never exceed `product_type_quantity_max`.",
            "example" : 5
          },
          "product_type_quantity_variation_discount" : {
            "title" : "Product Type Quantity Variation Discount",
            "type" : "string",
            "description" : "Quantity related discount (per piece) applicable to the product type sales price.",
            "example" : "-1.50"
          },
          "product_type_quantity_variation_amount" : {
            "title" : "Product Type Quantity Variation Amount",
            "type" : "string",
            "description" : "Quantity related price change (per piece) applicable to the product type sales price.",
            "example" : "-2.50"
          },
          "product_type_quantity_variation_price_type" : {
            "$ref" : "#/components/schemas/PriceVariationPriceType"
          },
          "product_type_quantity_variation_fees" : {
            "title" : "Product Type Quantity Variation Fees",
            "type" : "array",
            "description" : "List of fees. Some fee types are only visible for certain users.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Fee"
            }
          }
        },
        "description" : "Product type quantity variation per piece."
      },
      "PriceVariationPriceType" : {
        "title" : "Price Variation Price Type",
        "type" : "string",
        "description" : "Whether this price variation applies to the sales or resale price.",
        "example" : "SALES_PRICE",
        "default" : "SALES_PRICE",
        "enum" : [ "SALES_PRICE", "RESALE_PRICE" ]
      },
      "PriceVariationType" : {
        "title" : "Price Variation Type",
        "type" : "string",
        "description" : "<details>\n  <summary>**Price Variation Types**</summary>\n\n* `DATE_VARIATION` - Pricing based on calendar date.\n* `DATETIME_VARIATION` - Pricing based on calendar date and time.\n* `WEEKDAY_VARIATION` - Pricing based on the day of the week (e.g Monday, Tuesday). This is also called Daily pricing.\n* `CUSTOM_VARIATION` - Custom dynamic pricing. </details>\n",
        "example" : "WEEKDAY_VARIATION",
        "enum" : [ "DATE_VARIATION", "DATETIME_VARIATION", "WEEKDAY_VARIATION", "CUSTOM_VARIATION" ]
      },
      "ProductTypeDailyVariation" : {
        "title" : "Product Type Daily Variation",
        "required" : [ "product_type_daily_variation_details", "product_type_daily_variation_start_date" ],
        "type" : "object",
        "properties" : {
          "product_type_daily_variation_label" : {
            "title" : "Product Type Daily Variation Label",
            "type" : "string",
            "description" : "Product type daily variation label.",
            "example" : "Peak Hour"
          },
          "product_type_daily_variation_start_date" : {
            "title" : "Product Type Daily Variation Start Date",
            "type" : "string",
            "description" : "Product type daily variation start date.",
            "format" : "date-time"
          },
          "product_type_daily_variation_end_date" : {
            "title" : "Product Type Daily Variation End date",
            "type" : "string",
            "description" : "Product type daily variation end date.",
            "format" : "date-time"
          },
          "product_type_daily_variation_start_time" : {
            "title" : "Product Type Daily Variation Start Time",
            "type" : "string",
            "description" : "Product type daily variation start time.",
            "format" : "time",
            "example" : "09:00"
          },
          "product_type_daily_variation_end_time" : {
            "title" : "Product Type Daily Variation End Time",
            "type" : "string",
            "description" : "Product type daily variation end time.",
            "format" : "time",
            "example" : "13:00"
          },
          "product_type_daily_variation_price_type" : {
            "$ref" : "#/components/schemas/PriceVariationPriceType"
          },
          "product_type_daily_variation_details" : {
            "title" : "Product Type Daily Variation Details",
            "type" : "array",
            "description" : "Product type daily variation details.",
            "items" : {
              "$ref" : "#/components/schemas/ProductTypeDailyVariationDetail"
            }
          }
        },
        "description" : "Product type daily variation."
      },
      "ProductTypeDailyVariationDetail" : {
        "title" : "Product Type Daily Variation Detail",
        "required" : [ "product_type_daily_variation_amount" ],
        "type" : "object",
        "properties" : {
          "product_type_daily_variation_amount" : {
            "title" : "Product Type Daily Variation Amount",
            "type" : "string",
            "description" : "Product type daily variation amount.",
            "example" : "-1.00"
          },
          "product_type_daily_variation_day" : {
            "$ref" : "#/components/schemas/DayOfTheWeek"
          },
          "product_type_daily_variation_fees" : {
            "title" : "Product Type Daily Variation Fees",
            "type" : "array",
            "description" : "List of fees. Some fee types are only visible for certain users.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Fee"
            }
          }
        },
        "description" : "If `product_type_daily_variation_day` is empty, then the variation is applicable to the whole week. Otherwise each applicable individual day of the week will be returned. Days cannot be repeated within the same variation."
      },
      "Fee" : {
        "title" : "Fee",
        "required" : [ "fee_amount", "fee_included", "fee_refundable", "fee_tax_amount", "fee_tax_id", "fee_type" ],
        "type" : "object",
        "properties" : {
          "fee_label" : {
            "title" : "Fee Label",
            "type" : "string",
            "description" : "Fee label.",
            "readOnly" : true,
            "example" : "Creditcard - Variable Cost",
            "deprecated" : true
          },
          "fee_type" : {
            "$ref" : "#/components/schemas/FeeType"
          },
          "fee_amount" : {
            "title" : "Fee Amount",
            "type" : "string",
            "description" : "The applicable fee amount, can either be a surcharge or discount.",
            "readOnly" : true,
            "example" : "0.50"
          },
          "fee_percentage" : {
            "title" : "Fee Percentage",
            "type" : "string",
            "description" : "Fee percentage.",
            "example" : "25.00"
          },
          "fee_tax_id" : {
            "title" : "Fee Tax ID",
            "type" : "string",
            "description" : "Tax ID for this fee. Tax information can be retrieved from the Tax API.",
            "readOnly" : true,
            "example" : "TAX_ID_123",
            "deprecated" : true
          },
          "fee_tax_amount" : {
            "title" : "Fee Tax Amount",
            "type" : "string",
            "description" : "Amount of tax.",
            "readOnly" : true,
            "example" : "0.65"
          },
          "fee_included" : {
            "title" : "Fee Included",
            "type" : "boolean",
            "description" : "Whether this is an additional fee that should be listed separately and included in the `price_total` or is part of a calculation, e.g. margin breakdown (informational only). ",
            "readOnly" : true,
            "example" : true
          },
          "fee_refundable" : {
            "title" : "Fee Refundable",
            "type" : "boolean",
            "description" : "Whether this fee is refundable.",
            "readOnly" : true,
            "example" : true,
            "deprecated" : true
          }
        },
        "description" : "Fee details.",
        "readOnly" : true
      },
      "Margin" : {
        "title" : "Margin",
        "required" : [ "margin_amount", "margin_tax_amount", "margin_tax_id", "margin_type" ],
        "type" : "object",
        "properties" : {
          "margin_type" : {
            "$ref" : "#/components/schemas/FeeType"
          },
          "margin_amount" : {
            "title" : "Margin Amount",
            "type" : "string",
            "description" : "The calculated margin.",
            "readOnly" : true,
            "example" : "0.50"
          },
          "margin_tax_id" : {
            "title" : "Margin Tax ID",
            "type" : "string",
            "description" : "Tax ID for this margin. Tax information can be retrieved from the Tax API.",
            "readOnly" : true,
            "example" : "TAX_ID_123",
            "deprecated" : true
          },
          "margin_tax_amount" : {
            "title" : "Margin Tax Amount",
            "type" : "string",
            "description" : "Amount of tax on the margin.",
            "readOnly" : true,
            "example" : "0.65",
            "deprecated" : true
          }
        },
        "description" : "Margin details.",
        "readOnly" : true,
        "deprecated" : true
      },
      "FeeType" : {
        "title" : "Fee Type",
        "type" : "string",
        "description" : "Type of fee.\n\nFee Type:\n  * `SERVICE` - The service fee or margin for this transaction or product.\n  * `PARTNER` - The partner fee or margin for this transaction or product.\n  * `DISTRIBUTOR` - The distributor fee or margin for this transaction or product.\n  * `AFFILIATE` - The affiliate fee or margin for this transaction or product.\n  * `RESELLER` - The reseller fee or margin for this transaction or product.\n  * `MARKET_ADMIN` - The market admin fee or margin for this transaction or product.\n  * `PLATFORM` - The platform fee or margin for this transaction or product.\n  * `PAYMENT` - The payment fee for this transaction or product.\n  * `CUSTOM` - Custom fee for this transaction, product or order.",
        "readOnly" : true,
        "enum" : [ "SERVICE", "PARTNER", "DISTRIBUTOR", "AFFILIATE", "RESELLER", "MARKET_ADMIN", "PLATFORM", "PAYMENT", "CUSTOM" ]
      },
      "MarginType" : {
        "title" : "Margin Type",
        "type" : "string",
        "description" : "Type of margin.\n\nMargin Type:\n  * `PARTNER` - The partner fee or margin for this transaction or product.\n  * `DISTRIBUTOR` - The distributor fee or margin for this transaction or product.\n  * `AFFILIATE` - The affiliate fee or margin for this transaction or product.\n  * `RESELLER` - The reseller fee or margin for this transaction or product.\n  * `MARKET_ADMIN` - The market admin fee or margin for this transaction or product.\n  * `PLATFORM` - The platform fee or margin for this transaction or product.\n  * `CUSTOM` - Custom fee for this transaction, product or order.",
        "readOnly" : true,
        "enum" : [ "PARTNER", "DISTRIBUTOR", "AFFILIATE", "RESELLER", "MARKET_ADMIN", "PLATFORM", "CUSTOM" ]
      },
      "ConfirmationMode" : {
        "title" : "Confirmation Mode",
        "type" : "string",
        "description" : "The confirmation mode used when booking.\n\nConfirmation Mode:\n  * `SYNCHRONOUS` - Bookings will be confirmed synchronously. A webhook implementation is optional.\n  * `ASYNCHRONOUS` - Bookings will be confirmed asynchronously. A webhook implementation is required.\n  * `UNSPECIFIED` - The confirmation mode was not specified. A webhook implementation is recommended.",
        "readOnly" : true,
        "example" : "SYNCHRONOUS",
        "default" : "UNSPECIFIED",
        "enum" : [ "SYNCHRONOUS", "ASYNCHRONOUS", "UNSPECIFIED" ]
      },
      "RelationType" : {
        "title" : "Relation Type",
        "type" : "string",
        "description" : "Clustering in our system means creating a non-bookable main product, with sub-products linked underneath it.  Optionally, these sub-products could then be clustered themselves as well.\nThere are multiple reason why you would like to create cluster products, below we highlight the most common ones.\nDo note that `product_relation_details_visible` defines whether additional details on these sub-products should be shown.\nOnly applicable if `product_class:CLUSTER`.\n<details>\n  <summary>**Relation Types**</summary>\n  \n   * `RELATED` - Similar products which could be shown. Other museums in the region. (Cross-product)\n   * `UPGRADE` - This cluster consists of one or more products which can act as an upgrade. \n   Our system supports discounted upgrades as well as in-destination upsells, even if the product has already been activated (pass with duration).\n   \n      For example:\n   \n      * A 24 hour ticket and a 48 hour ticket.\n      * A standard and premium ticket.\n   * `OPTION` - Several flavors of a product. (Inter-product)\n   \n      For example:\n      * A bike without gears.\n      * A bike with gears.\n   * `SEATING` - (To be announced)\n   * `DESTINATION` - (To be announced)\n   * `OTHER` - Non-defined.\n   \n</details>\n",
        "deprecated" : true,
        "enum" : [ "RELATED", "UPGRADE", "OPTION", "SEATING", "DESTINATION", "OTHER" ]
      },
      "ProductTypePricing" : {
        "title" : "Product Type Pricing",
        "required" : [ "product_type_display_price", "product_type_list_price", "product_type_sales_price" ],
        "type" : "object",
        "properties" : {
          "product_type_list_price" : {
            "title" : "Product Type List Price",
            "type" : "string",
            "description" : "Standard price before discount for the end customer of this product type set by the supplier.",
            "example" : "20.50"
          },
          "product_type_discount" : {
            "title" : "Product Type Discount",
            "type" : "string",
            "description" : "Strike-through discount applicable to `product_type_list_price`.",
            "nullable" : true,
            "readOnly" : true,
            "example" : "2.00"
          },
          "product_type_discount_percentage" : {
            "title" : "Product Type Discount Percentage",
            "type" : "string",
            "description" : "Strike-through discount percentage. If blank then the Strike-through discount is not based on percentages.",
            "readOnly" : true,
            "example" : "20.00"
          },
          "product_type_discount_label" : {
            "title" : "Product Type Discount Label",
            "type" : "string",
            "description" : "Strike-through discount label.",
            "readOnly" : true,
            "example" : "Regular Discount",
            "deprecated" : true
          },
          "product_type_sales_price" : {
            "title" : "Product Type Sales Price",
            "type" : "string",
            "description" : "Standard price after discount for the end-customer set by the reseller. (`product_type_list_price` - `product_type_discount` == `product_type_sales_price`).",
            "readOnly" : true,
            "example" : "18.50"
          },
          "product_type_resale_price" : {
            "title" : "Product Type Resale Price",
            "type" : "string",
            "description" : "Price for which a product type is sold to and purchased by indirect channels.",
            "readOnly" : true,
            "example" : "16.40"
          },
          "product_type_display_price" : {
            "title" : "Product Type Display Price",
            "type" : "boolean",
            "description" : "The display price is used to show an indicative price for this specific product configuration on your user interface. This price can be used to show the guest a common or marketing related price without requiring further details such as timeslot, pieces, age etc. which would alter the final price. Each individual season can have one or more display prices.",
            "readOnly" : true
          }
        },
        "description" : "Product Type specific pricing."
      },
      "Flag" : {
        "title" : "Flag",
        "required" : [ "flag_id", "flag_name", "flag_value" ],
        "type" : "object",
        "properties" : {
          "flag_id" : {
            "title" : "Flag ID",
            "type" : "string",
            "description" : "Flag identifier.",
            "example" : "223425262"
          },
          "flag_name" : {
            "title" : "Flag Name",
            "type" : "string",
            "description" : "Flag name.",
            "example" : "Stock Code"
          },
          "flag_type" : {
            "title" : "Flag Type",
            "type" : "string",
            "description" : "Type of flag.",
            "example" : "FLAG",
            "enum" : [ "TAG", "FLAG", "CONTENT_LABEL", "PARTNER_LABEL", "MARKETING_LABEL", "FINANCIAL_LABEL", "PROMOTION_LABEL" ]
          },
          "flag_value_id" : {
            "title" : "Flag Value ID",
            "type" : "string",
            "description" : "Flag value identifier.",
            "example" : "123BCa1"
          },
          "flag_value" : {
            "title" : "Flag Value",
            "type" : "string",
            "description" : "Flag value.",
            "example" : "123BCa1"
          },
          "flag_visible" : {
            "title" : "Flag Visible",
            "type" : "boolean",
            "description" : "Whether this flag should be shown to the customer.",
            "example" : true,
            "deprecated" : true,
            "default" : true
          }
        },
        "description" : "Flag details. This object will not be returned directly upon booking."
      },
      "ProductTax" : {
        "title" : "Product Tax",
        "required" : [ "tax_amount", "tax_id", "tax_name" ],
        "type" : "object",
        "properties" : {
          "tax_id" : {
            "title" : "Tax ID",
            "type" : "string",
            "description" : "Unique identifier of this tax configuration.",
            "readOnly" : true,
            "example" : "TAX_ID_123"
          },
          "tax_name" : {
            "title" : "Tax Name",
            "type" : "string",
            "description" : "Name of the tax.",
            "readOnly" : true,
            "example" : "VAT Regular 20%",
            "deprecated" : true
          },
          "tax_amount" : {
            "title" : "Tax Amount",
            "type" : "string",
            "description" : "Amount of tax.",
            "readOnly" : true,
            "example" : "0.65"
          },
          "tax_rate" : {
            "title" : "Tax Rate",
            "type" : "string",
            "description" : "Tax rate (percentage).",
            "readOnly" : true,
            "example" : "20.00"
          }
        },
        "description" : "Applied tax.",
        "readOnly" : true
      },
      "ProductTaxDetail" : {
        "title" : "Product Tax Detail",
        "required" : [ "tax_id", "tax_name", "tax_rate", "tax_type" ],
        "type" : "object",
        "properties" : {
          "tax_id" : {
            "title" : "Tax ID",
            "type" : "string",
            "description" : "Unique identifier of this tax configuration.",
            "readOnly" : true,
            "example" : "TAX_ID_123"
          },
          "tax_name" : {
            "title" : "Tax Name",
            "type" : "string",
            "description" : "Name of the tax.",
            "readOnly" : true,
            "example" : "VAT Regular 20%"
          },
          "tax_type" : {
            "title" : "Tax Type",
            "type" : "string",
            "description" : "Tax abbreviation.",
            "readOnly" : true,
            "example" : "VAT"
          },
          "tax_rate" : {
            "title" : "Tax Rate",
            "type" : "string",
            "description" : "Tax rate (percentage).",
            "readOnly" : true,
            "example" : "20.00"
          },
          "tax_region" : {
            "title" : "Tax Region",
            "type" : "string",
            "description" : "Country or State of the related tax authority.",
            "readOnly" : true,
            "example" : "Netherlands"
          }
        },
        "description" : "Product Tax Detail.",
        "readOnly" : true
      },
      "ProductBlockoutDate" : {
        "title" : "Product Blockout Date",
        "required" : [ "date" ],
        "type" : "object",
        "properties" : {
          "product_block_out_date" : {
            "title" : "Product Block Out Date",
            "type" : "string",
            "description" : "Product block out date.",
            "format" : "date"
          },
          "product_block_out_start_time" : {
            "title" : "Product Block Out Start Time",
            "type" : "string",
            "description" : "Starting time of a event for a particular day.",
            "format" : "time",
            "example" : "09:00:00"
          },
          "product_block_out_end_time" : {
            "title" : "Product Block Out End Time",
            "type" : "string",
            "description" : "End time of a event for a particular day.",
            "format" : "time",
            "example" : "17:00:00"
          },
          "product_block_out_reason" : {
            "title" : "Product Block Out Reason",
            "type" : "string",
            "description" : "Reason for the product not to be available.",
            "example" : "Marathon"
          },
          "product_block_out_custom_field" : {
            "title" : "Product Block Out Custom Field",
            "type" : "string",
            "description" : "Custom field which can be used for adding additional information to this event.",
            "example" : "Due to the a national holiday we are unable to operate on this day, you are welcome to join us another time."
          }
        },
        "additionalProperties" : false,
        "description" : "Product blockout date."
      },
      "ProductSpecialDate" : {
        "title" : "Product Special Date",
        "required" : [ "date" ],
        "type" : "object",
        "properties" : {
          "product_special_date" : {
            "title" : "Product Special Date",
            "type" : "string",
            "description" : "Product special date.",
            "format" : "date"
          },
          "product_special_start_time" : {
            "title" : "Product Special Start Time",
            "type" : "string",
            "description" : "Starting time of a event for a particular day.",
            "format" : "time",
            "example" : "09:00:00"
          },
          "product_special_end_time" : {
            "title" : "Product Special End Time",
            "type" : "string",
            "description" : "End time of a event for a particular day.",
            "format" : "time",
            "example" : "17:00:00"
          },
          "product_special_reason" : {
            "title" : "Product Special Reason",
            "type" : "string",
            "description" : "Reason for the product not to be available.",
            "example" : "Marathon"
          },
          "product_special_custom_field" : {
            "title" : "Product Special Custom Field",
            "type" : "string",
            "description" : "Custom field which can be used for adding additional information to this event.",
            "example" : "Due to the Marathon we are unable to operate on this day, you are welcome to join us next week"
          }
        },
        "additionalProperties" : false,
        "description" : "Product special date."
      },
      "OpeningTimes" : {
        "title" : "Opening Times",
        "required" : [ "opening_time_details" ],
        "type" : "object",
        "properties" : {
          "opening_time_valid_from" : {
            "title" : "Opening Time Valid From",
            "type" : "string",
            "description" : "Opening time valid from.",
            "format" : "date"
          },
          "opening_time_valid_till" : {
            "title" : "Opening Time Valid Till",
            "type" : "string",
            "description" : "Opening time valid till.",
            "format" : "date"
          },
          "opening_time_details" : {
            "title" : "Opening Time Details",
            "type" : "array",
            "description" : "Opening Time Details, based on the days of the week. If unset, the product / venue can be deemed unavailable / closed.",
            "items" : {
              "$ref" : "#/components/schemas/OpeningTimeDetail"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Opening times."
      },
      "OpeningTimeDetail" : {
        "title" : "Opening Time Detail",
        "required" : [ "opening_time_day" ],
        "type" : "object",
        "properties" : {
          "opening_time_day" : {
            "$ref" : "#/components/schemas/DayOfTheWeek"
          },
          "opening_time_start" : {
            "title" : "Opening Time Start",
            "type" : "string",
            "description" : "Starting time of a venue for a particular day.",
            "format" : "time",
            "example" : "09:00:00"
          },
          "opening_time_end" : {
            "title" : "Opening Time End",
            "type" : "string",
            "description" : "Closing time of a venue for a particular day.",
            "format" : "time",
            "example" : "17:00:00"
          }
        },
        "additionalProperties" : false,
        "description" : "Opening time details."
      },
      "DayOfTheWeek" : {
        "title" : "Day Of The Week",
        "type" : "string",
        "description" : "Day of the a week.",
        "example" : "THURSDAY",
        "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
      },
      "PickupPoint" : {
        "title" : "Pickup Point",
        "required" : [ "pickup_point_id", "pickup_point_name" ],
        "type" : "object",
        "properties" : {
          "pickup_point_id" : {
            "title" : "Pickup Point ID",
            "type" : "string",
            "description" : "Pickup point ID.",
            "example" : "PICKUP_POINT_ID_123"
          },
          "pickup_point_name" : {
            "title" : "Pickup Point Name",
            "type" : "string",
            "description" : "Pickup point name / label.",
            "readOnly" : true,
            "example" : "Walkingtour at the Wyndham Apollo Hotel"
          },
          "pickup_point_type" : {
            "$ref" : "#/components/schemas/PickupPointType"
          },
          "pickup_point_description" : {
            "title" : "Pickup Point Description",
            "type" : "string",
            "description" : "Pickup point description.",
            "readOnly" : true,
            "example" : "Meet at the Wyndham Apollo hotel."
          },
          "pickup_point_location" : {
            "title" : "Pickup Point Location",
            "type" : "string",
            "description" : "Reference to the location details.",
            "readOnly" : true,
            "example" : "LOCATION_ID_123"
          },
          "pickup_point_time" : {
            "title" : "Pickup Point Time",
            "type" : "string",
            "description" : "Time of pickup.",
            "format" : "time",
            "example" : "10:00"
          },
          "pickup_point_times" : {
            "title" : "Pickup Point Times",
            "type" : "array",
            "description" : "Times available to select for this pickup point.",
            "items" : {
              "title" : "Pickup Point Time",
              "type" : "string",
              "description" : "Time of pickup.",
              "format" : "time",
              "example" : "10:00"
            }
          },
          "pickup_point_duration" : {
            "title" : "Pickup Point Duration",
            "type" : "integer",
            "description" : "Duration of the pickup in minutes.",
            "readOnly" : true,
            "example" : 30
          },
          "pickup_point_availability_dependency" : {
            "title" : "Pickup Point Availability Dependency",
            "type" : "boolean",
            "description" : "Dependency on the selected `availability_slot`.\n\nThe selected (`pickup_point_time` + `pickup_point_duration`) is not allowed to exceed the selected `availability_from_date_time` and therefore only a limited amount of `pickup_point_times` should be shown.",
            "readOnly" : true,
            "example" : false
          }
        },
        "description" : "Information on a pickup point."
      },
      "StockListResponse" : {
        "title" : "Stock List Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/StockListResponseData"
          }
        },
        "description" : "Stock list response."
      },
      "StockListResponseData" : {
        "title" : "Stock List Response Data",
        "required" : [ "items", "kind", "total_items" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "total_items" : {
            "title" : "Total Items",
            "minimum" : 0,
            "type" : "integer",
            "description" : "The total number of items available in this set. For example, if a user has 100 blog posts, the response may only contain 10 items, but the `total_items` would be 100.",
            "example" : 10
          },
          "items" : {
            "title" : "Stock Inventory",
            "type" : "array",
            "description" : "List of all stock slots.",
            "items" : {
              "$ref" : "#/components/schemas/StockModel"
            }
          }
        },
        "description" : "Stock list response data."
      },
      "StockModel" : {
        "title" : "Stock Model",
        "required" : [ "stock_active", "stock_created", "stock_id", "stock_modified" ],
        "type" : "object",
        "properties" : {
          "stock_id" : {
            "title" : "Stock ID",
            "type" : "string",
            "description" : "The unique ID for this stock.",
            "readOnly" : true,
            "example" : "20191026090010006526"
          },
          "stock_external_id" : {
            "title" : "Stock External ID",
            "type" : "string",
            "description" : "The unique external ID for this stock.",
            "readOnly" : true,
            "example" : "20191026090010006526",
            "deprecated" : true
          },
          "stock_active" : {
            "title" : "Stock Active",
            "type" : "boolean",
            "description" : "Whether this stock is active (open) or not (closed). This item cannot be booked if `stock_active:false`.",
            "example" : true,
            "default" : true
          },
          "stock_label" : {
            "title" : "Stock Label",
            "type" : "string",
            "description" : "Optional label for this stock.",
            "example" : "Morning"
          },
          "stock_product_id" : {
            "title" : "Stock Product ID",
            "type" : "string",
            "description" : "The product linked to this stock.",
            "example" : "3532"
          },
          "stock_spots" : {
            "$ref" : "#/components/schemas/StockItems"
          },
          "stock_notes" : {
            "title" : "Stock Notes",
            "type" : "array",
            "description" : "Availability notes.",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "stock_created" : {
            "title" : "Stock Created",
            "type" : "string",
            "description" : "The date on which the stock has been created.",
            "format" : "date-time"
          },
          "stock_created_name" : {
            "title" : "Stock Created Name",
            "type" : "string",
            "description" : "Cashier name / User name who created the stock.",
            "readOnly" : true,
            "example" : "Demo Cashier"
          },
          "stock_created_email" : {
            "title" : "Stock Created Email",
            "type" : "string",
            "description" : "Cashier email / User email who created the stock.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com"
          },
          "stock_modified" : {
            "title" : "Stock Modified",
            "type" : "string",
            "description" : "The date on which this stock has been modified (Capacity and Configuration).",
            "format" : "date-time"
          },
          "stock_modified_name" : {
            "title" : "Stock Modified Name",
            "type" : "string",
            "description" : "Cashier name / User name who modified the stock.",
            "readOnly" : true,
            "example" : "Demo Cashier"
          },
          "stock_modified_email" : {
            "title" : "Stock Modified Email",
            "type" : "string",
            "description" : "Cashier email / User email who modified the stock.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com"
          }
        },
        "additionalProperties" : false,
        "description" : "Information on a specific stock.\n> Only applicable if `product_class:MERCHANDISE`."
      },
      "StockItems" : {
        "title" : "Stock Items",
        "required" : [ "stock_items_open" ],
        "type" : "object",
        "properties" : {
          "stock_items_total" : {
            "title" : "Stock Items Total",
            "type" : "integer",
            "description" : "The total number of stock items that the merchant has configured for this distributor (including those that are not available).",
            "example" : 100
          },
          "stock_items_reserved" : {
            "title" : "Stock Items Reserved",
            "type" : "integer",
            "description" : "The number of stock items currently reserved / blocked for this availability entry. Some of these might open up in the near future (e.g. abandoned checkouts). This value is already deducted from the `stock_items_available` parameter and can be safely ignored in capacity calculations.\n\nFormula: `stock_items_total` - (`stock_items_booked` + `stock_items_reserved`) = `stock_items_available`.",
            "example" : 15
          },
          "stock_items_booked" : {
            "title" : "Stock Items Booked",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The number of stock items currently booked for this product. These might open up in the near future (Cancellations). This value is already deducted from the `stock_items_available` parameter and can be safely ignored in capacity calculations.\n\nFormula: `stock_items_total` - (`stock_items_booked` + `stock_items_reserved`) = `stock_items_available`.",
            "example" : 10
          },
          "stock_items_available" : {
            "title" : "Stock Items Available",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The number of stock items currently available for this product.",
            "example" : 75
          }
        },
        "description" : "Information on the stock items."
      },
      "AvailabilitiesListResponse" : {
        "title" : "Availabilities List Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/AvailabilitiesListResponseData"
          }
        },
        "description" : "Availabilities list response."
      },
      "AvailabilitiesListResponseData" : {
        "title" : "Availabilities List Response Data",
        "required" : [ "items", "kind", "total_items" ],
        "type" : "object",
        "description" : "Availabilities list response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Availability Slots",
              "type" : "array",
              "description" : "List of all availability slots.",
              "items" : {
                "$ref" : "#/components/schemas/AvailabilityModel"
              }
            }
          }
        } ]
      },
      "AvailabilityModel" : {
        "title" : "Availability Slot Model",
        "required" : [ "availability_active", "availability_created", "availability_from_date_time", "availability_id", "availability_modified" ],
        "type" : "object",
        "properties" : {
          "availability_id" : {
            "title" : "Availability Slot ID",
            "type" : "string",
            "description" : "The unique ID for this availability slot.",
            "readOnly" : true,
            "example" : "20191026090010006526"
          },
          "availability_external_id" : {
            "title" : "Availability Slot External ID",
            "type" : "string",
            "description" : "The unique external ID for this availability slot.",
            "readOnly" : true,
            "example" : "20191026090010006526",
            "deprecated" : true
          },
          "availability_capacity_id" : {
            "title" : "Availability Slot Capacity ID",
            "type" : "string",
            "description" : "Availability group / capacity identifier.",
            "readOnly" : true,
            "example" : "43525235"
          },
          "availability_capacity_shared_id" : {
            "title" : "Availability Slot Shared Capacity ID",
            "type" : "string",
            "description" : "Shared availability / capacity identifier. Only applicable if `capacity_type:SHARED / COMBINED`.",
            "example" : "435252453"
          },
          "availability_active" : {
            "title" : "Availability Slot Active",
            "type" : "boolean",
            "description" : "Whether this availability slot is active (open) or not (closed). This availability cannot be booked if `availability_active:false`.",
            "example" : true,
            "default" : true
          },
          "availability_label" : {
            "title" : "Availability Slot Label",
            "type" : "string",
            "description" : "Optional label for this availability slot.",
            "example" : "Morning"
          },
          "availability_product_id" : {
            "title" : "Availability Slot Product ID",
            "type" : "string",
            "description" : "The product linked to this availability slot.\n\n> In case you are requesting the availability for a main combi product (`product_class:COMBI`) or a cluster product (`product_class:CLUSTER`) and `sub_products_depth: > 0` all sub-product availabilities will be returned as well. ",
            "example" : "3532"
          },
          "availability_admission_type" : {
            "$ref" : "#/components/schemas/ProductAdmissionType"
          },
          "availability_duration" : {
            "title" : "Availability Slot Duration",
            "type" : "integer",
            "description" : "Duration of the timeslot in seconds",
            "example" : 3600
          },
          "availability_from_date_time" : {
            "title" : "Availability Slot From Date Time",
            "type" : "string",
            "description" : "The starting date and time of the activity availability slot.",
            "format" : "date-time"
          },
          "availability_to_date_time" : {
            "title" : "Availability Slot To Date Time",
            "type" : "string",
            "description" : "The till date and time of the activity availability slot.",
            "format" : "date-time"
          },
          "availability_booking_window_start" : {
            "title" : "Availability Booking Window Start",
            "type" : "string",
            "description" : "The start date-time from when this availability slot is bookable.",
            "format" : "date-time"
          },
          "availability_booking_window_end" : {
            "title" : "Availability Booking Window End",
            "type" : "string",
            "description" : "The end date-time from which this availability slot is no longer bookable.",
            "format" : "date-time"
          },
          "availability_party_size" : {
            "title" : "Availability Slot Party Size",
            "type" : "integer",
            "description" : "The party size that can be accommodated during this time slot. A restaurant can be associated with multiple slots for the same time, each specifying a different party_size, if for instance 2, 3, or 4 people can be seated with a reservation.\n\nOnly applicable for selected merchants.",
            "example" : 5,
            "deprecated" : true
          },
          "availability_spots" : {
            "$ref" : "#/components/schemas/AvailabilitySpots"
          },
          "availability_pricing" : {
            "title" : "Availability Slot Pricing",
            "type" : "array",
            "description" : "Daily / Dynamic Pricing, only returned in case `product_daily_pricing:true` or `product_dynamic_pricing:true` for this product.\n\nPlease note that in case both are enabled, the combined difference will be returned.",
            "items" : {
              "$ref" : "#/components/schemas/AvailabilityPrice"
            }
          },
          "availability_notes" : {
            "title" : "Availability Notes",
            "type" : "array",
            "description" : "Availability notes.",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "availability_created" : {
            "title" : "Availability Slot Created",
            "type" : "string",
            "description" : "The date on which the availability slot has been created.",
            "format" : "date-time"
          },
          "availability_modified" : {
            "title" : "Availability Slot Modified",
            "type" : "string",
            "description" : "The date on which this availability slot has been modified (Capacity and Configuration).",
            "format" : "date-time"
          }
        },
        "additionalProperties" : false,
        "description" : "Information on a specific availability slot.\n> Only applicable if `product_availability:true`."
      },
      "AvailabilitySpots" : {
        "title" : "Availability Spots",
        "required" : [ "availability_spots_open" ],
        "type" : "object",
        "properties" : {
          "availability_spots_total" : {
            "title" : "Availability Spots Total",
            "type" : "integer",
            "description" : "The total number of spots that the merchant has configured for this distributor (including those that are not available).",
            "example" : 100
          },
          "availability_spots_reserved" : {
            "title" : "Availability Spots Reserved",
            "type" : "integer",
            "description" : "The number of spots currently reserved / blocked for this availability entry. Some of these might open up in the near future (e.g. abandoned checkouts). This value is already deducted from the `availability_spots_open` parameter and can be safely ignored in capacity calculations.\n\nFormula: `availability_spots_total` - (`availability_spots_booked` + `availability_spots_reserved`) = `availability_spots_open`.",
            "example" : 15
          },
          "availability_spots_booked" : {
            "title" : "Availability Spots Booked",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The number of spots currently booked for this availability entry. These might open up in the near future (Cancellations). This value is already deducted from the `availability_spots_open` parameter and can be safely ignored in capacity calculations.\n\nFormula: `availability_spots_total` - (`availability_spots_booked` + `availability_spots_reserved`) = `availability_spots_open`.",
            "example" : 10
          },
          "availability_spots_open" : {
            "title" : "Availability Spots Open",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The number of spots currently available for this availability entry.",
            "example" : 75
          },
          "availability_spots_redeemed" : {
            "title" : "Availability Spots Redeemed",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The number of spots that are redeemed. \n\n> Only visible to suppliers.",
            "example" : 10,
            "deprecated" : true
          },
          "availability_spots_details" : {
            "title" : "Availability Spots Details",
            "type" : "array",
            "description" : "List of available spots.",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Spot"
            }
          }
        },
        "description" : "Information over the spots that the merchant has set for this configuration.\n> Only applicable for managed (limited) capacity `product_capacity:true`.\n\n> In case of 3rd party aggregated data, not all fields will be available."
      },
      "Spot" : {
        "title" : "Spot",
        "required" : [ "spot_state", "spot_type" ],
        "type" : "object",
        "properties" : {
          "spot_id" : {
            "title" : "Spot ID",
            "type" : "string",
            "description" : "Spot ID.",
            "example" : "345346363463",
            "deprecated" : true
          },
          "spot_name" : {
            "title" : "Spot Name",
            "type" : "string",
            "description" : "Spot name.",
            "readOnly" : true,
            "example" : "Regular seat"
          },
          "spot_section" : {
            "title" : "Spot Section",
            "type" : "string",
            "description" : "Name of the section. Only applicable if the product has sections.",
            "example" : "VIP Area"
          },
          "spot_row" : {
            "title" : "Spot Row",
            "type" : "string",
            "description" : "The row the spot resides in.",
            "example" : "F"
          },
          "spot_number" : {
            "title" : "Spot Number",
            "type" : "string",
            "description" : "The spot number.",
            "example" : "5"
          },
          "spot_type" : {
            "title" : "Spot Type",
            "type" : "string",
            "description" : "Type of spot.",
            "example" : "SEAT",
            "deprecated" : true,
            "enum" : [ "SEAT", "BOOTH", "TABLE", "AREA" ]
          },
          "spot_state" : {
            "title" : "Spot State",
            "type" : "string",
            "description" : "The state of the spot.",
            "readOnly" : true,
            "deprecated" : true,
            "enum" : [ "AVAILABLE", "BOOKED", "RESERVED", "DISABLED" ]
          }
        },
        "description" : "Information on the selected spot. Only applicable if PrioSeating is being used (`product_availability_assigned:true`).\n"
      },
      "AvailabilityPrice" : {
        "title" : "Availability Price",
        "required" : [ "availability_pricing_variation_amount" ],
        "type" : "object",
        "properties" : {
          "availability_pricing_variation_amount" : {
            "title" : "Availability Pricing Variation Amount",
            "type" : "string",
            "description" : "The dynamic variation amount.",
            "example" : "-3.00"
          },
          "availability_pricing_variation_percentage" : {
            "title" : "Availability Pricing Variation Percentage",
            "type" : "string",
            "description" : "The dynamic variation percentage. If blank then the variation is not based on percentages.",
            "example" : "20.00"
          },
          "availability_pricing_variation_description" : {
            "title" : "Availability Pricing Variation Description",
            "type" : "string",
            "description" : "Reason for the price variation.",
            "example" : "Peak hour"
          },
          "availability_pricing_variation_type" : {
            "$ref" : "#/components/schemas/PriceVariationType"
          },
          "availability_pricing_variation_price_type" : {
            "$ref" : "#/components/schemas/PriceVariationPriceType"
          },
          "availability_pricing_variation_commission_included" : {
            "title" : "Availability Pricing Variation Commission Included",
            "type" : "boolean",
            "description" : "Whether the distributor commission percentage is applicable on this price variation or not."
          },
          "availability_pricing_variation_product_type_id" : {
            "title" : "Availability Pricing Variation Product Type ID",
            "type" : "string",
            "description" : "The applicable product type.",
            "example" : "PRODUCT_TYPE_ID_123"
          },
          "availability_pricing_variation_product_type_discount_included" : {
            "title" : "Availability Pricing Variation Product Type Discount Included",
            "type" : "boolean",
            "description" : "Whether the product type discount is applicable on the price variation or not."
          },
          "availability_pricing_variation_product_type" : {
            "$ref" : "#/components/schemas/ProductType"
          }
        },
        "description" : "Pricing for this specific availability entry."
      },
      "CommonPaymentRequest" : {
        "title" : "Common Payment Request",
        "required" : [ "payment_merchant_reference", "payment_object_type" ],
        "type" : "object",
        "properties" : {
          "payment_object_type" : {
            "$ref" : "#/components/schemas/PaymentObjectType"
          },
          "payment_merchant_reference" : {
            "title" : "Payment Merchant Reference",
            "type" : "string",
            "description" : "Unique (external) payment reference set by the merchant / (third) party / POS system initiating the payment. This reference will also be used to identify the payment in the PSP system.",
            "example" : "1478349849927_771663371"
          },
          "payment_external_reference" : {
            "title" : "Payment External Reference",
            "type" : "string",
            "description" : "External payment reference set to identify the shopper / entity / cardholder / guest performing the payment. This reference can also be used to identify the payment in the PSP system.\n> Required in case of recurring payments (`payment_recurring:true`).",
            "example" : "1478349849927_771663371"
          },
          "payment_currency_code" : {
            "title" : "Payment Currency Code",
            "type" : "string",
            "description" : "The (guest) currency code of this payment. According to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).\n\n**(ADVANCED)**\nThis value defaults to `order.order_pricing[].price_currency_code`, unless the guest uses an alternative checkout currency, in which case an additional `payment_currency_rate` and `payment_currency_amount` will be returned.\n\nNote that the payment service provider can perform an additional conversion called dynamic currency conversion (DCC), which will be returned inside `payment_gateway_additional_values`.",
            "example" : "EUR",
            "deprecated" : true
          },
          "payment_currency_rate" : {
            "title" : "Payment Currency Rate",
            "type" : "string",
            "description" : "Checkout / Guest currency conversion rate. \n\nIf not set and an alternative `payment_currency_code` is provided, the latest rates from the Currency API will be used as default.",
            "example" : "2.5263",
            "deprecated" : true
          },
          "payment_currency_amount" : {
            "title" : "Payment Currency Amount",
            "type" : "string",
            "description" : "The total amount / value that has been authorised / settled / refunded in the alternative (guest) currency (`payment_amount` * `payment_currency_rate`).",
            "readOnly" : true,
            "example" : "10.25"
          },
          "payment_amount" : {
            "title" : "Payment Amount",
            "type" : "string",
            "description" : "Optional alternative amount to be authorised / settled / refunded during this transaction. \n\nOnly set this value in case of partial payments or deposits. By default this is set to the `order_pricing.price_total`. \n\nIn case of refunds, this value will be a positive value but the payment type should be set to `payment_type:REFUND`.",
            "example" : "10.00",
            "deprecated" : true
          },
          "payment_contact" : {
            "$ref" : "#/components/schemas/ContactDetails"
          },
          "payment_notes" : {
            "title" : "Payment Notes",
            "type" : "array",
            "description" : "Payment notes.",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          }
        },
        "description" : "Common payment request.",
        "writeOnly" : true
      },
      "AdyenDropInPaymentRequest" : {
        "title" : "Adyen Drop-In Payment Request",
        "required" : [ "payment_method" ],
        "type" : "object",
        "description" : "Use the Adyen Drop-in solution to collect payments.",
        "example" : "{\n  \"payment_object_type\": \"ADYEN_DROP_IN\",\n  \"payment_merchant_reference\": \"MY_PAYMENT_REFERENCE\",\n  \"payment_method\": paymentComponentData.paymentMethod\n}\n",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentRequest"
        }, {
          "type" : "object",
          "properties" : {
            "payment_method" : {
              "title" : "Payment Method",
              "type" : "object",
              "description" : "The paymentComponentData.paymentMethod from Drop-in.\n(Adyen Specific Field)",
              "writeOnly" : true
            },
            "payment_shopper_ip" : {
              "title" : "Payment Shopper IP",
              "type" : "string",
              "description" : "The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks)."
            },
            "payment_recurring" : {
              "title" : "Payment Recurring",
              "type" : "boolean",
              "description" : "Whether the payment details are stored for recurring payments.",
              "example" : false,
              "deprecated" : true,
              "default" : false
            },
            "payment_recurring_type" : {
              "$ref" : "#/components/schemas/PaymentRecurringType"
            },
            "return_url" : {
              "title" : "Return URL",
              "type" : "string",
              "description" : "In case of a redirection, this is the URL to where your shopper should be redirected back to after they complete the payment.",
              "example" : "https://your-company.com/checkout?shopperOrder=12xy.."
            }
          }
        } ]
      },
      "AdyenRecurringPaymentRequest" : {
        "title" : "Adyen Recurring Payment Request",
        "required" : [ "payment_external_reference" ],
        "type" : "object",
        "description" : "Use Adyen Recurring Payments to store and automatically capture payments based on (non-)fixed schedules or events ([More info on Adyen Recurring Payments](https://docs.adyen.com/checkout/tokenization/create-and-use-tokens)).\n\nBefore using recurring payments, you first need to create a tokenized payment method. To tokenize a payment method you need to initiate a Create Payment request with `payment_object_type:ADYEN_DROP_IN` and `payment_recurring:true`. \n\nThe payment details will be stored and can be retrieved by providing the same `payment_external_reference` in both requests.\n> Payment Contact Details (`payment_contact`) cannot be changed as these are stored once at token creation.",
        "example" : "{\n  \"payment_object_type\": \"ADYEN_RECURRING\",\n  \"payment_merchant_reference\": \"MY_PAYMENT_REFERENCE\",\n  \"payment_external_reference\": \"SHOPPER_REFERENCE\"\n}\n",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentRequest"
        } ]
      },
      "PaymentRecurringType" : {
        "title" : "Payment Recurring Type",
        "type" : "string",
        "description" : "The type of tokenization used for the recurring payment.\n\nOnly applicable in case of `payment_recurring:true`.\n\nPayment Recurring Type:\n  * `STORE` - One-off transactions where a shopper can either store their payment details or pay at a later time using their saved details.\n  * `SUBSCRIPTION` - A recurring transaction made at regular intervals for a product or a service.\n  * `TOP_UP` - Contracts that occur on a non-fixed schedule using stored card details. This includes automatic top-ups when the cardholder's balance drops below a certain amount.",
        "readOnly" : true,
        "example" : "STORE",
        "enum" : [ "STORE", "SUBSCRIPTION", "TOP_UP" ]
      },
      "AdyenPaymentLinkRequest" : {
        "title" : "Adyen Payment Link Request",
        "type" : "object",
        "description" : "Use the Adyen Payment Link solution to collect payments.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentRequest"
        } ]
      },
      "AdyenPaymentLinkResponse" : {
        "title" : "Adyen Payment Link Response",
        "required" : [ "payment_details", "payment_object_type" ],
        "type" : "object",
        "properties" : {
          "payment_object_type" : {
            "$ref" : "#/components/schemas/PaymentObjectType"
          },
          "payment_details" : {
            "$ref" : "#/components/schemas/PaymentDetails"
          }
        },
        "description" : "Adyen Payment Link response."
      },
      "AdyenRecurringPaymentResponse" : {
        "title" : "Adyen Recurring Payment Response",
        "required" : [ "payment_details", "payment_object_type", "payment_result_code" ],
        "type" : "object",
        "properties" : {
          "payment_object_type" : {
            "$ref" : "#/components/schemas/PaymentObjectType"
          },
          "payment_result_code" : {
            "title" : "Payment Result Code",
            "type" : "string",
            "description" : "Provides information about the result of the request (Adyen Specific Field).",
            "readOnly" : true,
            "example" : "Authorised"
          },
          "payment_details" : {
            "$ref" : "#/components/schemas/PaymentDetails"
          }
        },
        "description" : "Adyen Recurring payment response. ",
        "readOnly" : true
      },
      "AdyenDropInPaymentResponse" : {
        "title" : "Adyen Drop-In Payment Response",
        "required" : [ "payment_details", "payment_object_type", "payment_result_code" ],
        "type" : "object",
        "properties" : {
          "payment_object_type" : {
            "$ref" : "#/components/schemas/PaymentObjectType"
          },
          "payment_result_code" : {
            "title" : "Payment Result Code",
            "type" : "string",
            "description" : "Provides information about the result of the request (Adyen Specific Field).",
            "readOnly" : true,
            "example" : "Authorised"
          },
          "payment_action" : {
            "title" : "Payment Action",
            "type" : "object",
            "description" : "If you receive this object, this indicates that you need to perform an additional action again.  (Adyen Specific Field)",
            "readOnly" : true,
            "example" : "{\n  \"data\": {\n      \"MD\": \"OEVudmZVMUlkWjd0MDNwUWs2bmhSdz09...\",\n      \"PaReq\": \"eNpVUttygjAQ/RXbDyAXBYRZ00HpTH3wUosPfe...\",\n      \"TermUrl\": \"adyencheckout://your.package.name\"\n  },\n  \"method\": \"POST\",\n  \"paymentData\": \"Ab02b4c0!BQABAgA4e3wGkhVah4CJL19qdegdmm9E...\",\n  \"paymentMethodType\": \"scheme\",\n  \"type\": \"redirect\",\n  \"url\": \"https://test.adyen.com/hpp/3d/validate.shtml\"\n}\n"
          },
          "payment_refusal_reason" : {
            "title" : "Refusal Reason",
            "type" : "string",
            "description" : "Indicating the cause of the error.  (Adyen Specific Field)",
            "readOnly" : true,
            "example" : "Not enough balance",
            "deprecated" : true
          },
          "payment_details" : {
            "$ref" : "#/components/schemas/PaymentDetails"
          }
        },
        "description" : "Adyen Drop-In payment response. ",
        "readOnly" : true
      },
      "AdyenTerminalAPIPaymentResponse" : {
        "title" : "Adyen Terminal API Payment Response",
        "required" : [ "payment_details", "payment_object_type" ],
        "type" : "object",
        "properties" : {
          "payment_object_type" : {
            "$ref" : "#/components/schemas/PaymentObjectType"
          },
          "payment_details" : {
            "$ref" : "#/components/schemas/PaymentDetails"
          }
        },
        "description" : "Adyen Terminal API Payment Response.",
        "readOnly" : true,
        "deprecated" : true
      },
      "NGeniusPaymentResponse" : {
        "title" : "N-Genius Payment Response",
        "required" : [ "payment_link", "payment_object_type", "payment_service_provider_reference" ],
        "type" : "object",
        "properties" : {
          "payment_object_type" : {
            "$ref" : "#/components/schemas/PaymentObjectType"
          },
          "payment_link" : {
            "title" : "Payment Link",
            "type" : "string",
            "description" : "Hosted Payment Page Link.",
            "format" : "URI",
            "readOnly" : true,
            "example" : "https://paypage.sandbox.ngenius-payments.com/?code=cb00f950b9b3d3e"
          },
          "payment_link_expires_at" : {
            "title" : "Payment Link Expiry",
            "type" : "string",
            "description" : "Date and time when the payment link expires. In case of pre-payment this value will be the `reservation_valid_until`.",
            "format" : "date-time",
            "readOnly" : true
          },
          "payment_service_provider_reference" : {
            "title" : "Payment Service Provider Reference",
            "type" : "string",
            "description" : "Unique payment reference set by the payment service provider.",
            "example" : "4714783500596458"
          }
        },
        "description" : "N-Genius Payment Response",
        "readOnly" : true,
        "example" : "{\n  \"payment_link\": \"https://paypage.sandbox.ngenius-payments.com/?code=cb00f950b9b3d3e\",\n  \"payment_service_provider_reference\": \"722b7d36-960d-4c34-8c91-3ffb23af31eb\"\n}\n"
      },
      "MewsPaymentResponse" : {
        "title" : "Mews Payment Response",
        "required" : [ "payment_details", "payment_object_type" ],
        "type" : "object",
        "properties" : {
          "payment_object_type" : {
            "$ref" : "#/components/schemas/PaymentObjectType"
          },
          "payment_details" : {
            "$ref" : "#/components/schemas/PaymentDetails"
          }
        },
        "description" : "Mews payment response.",
        "readOnly" : true
      },
      "ManualPaymentResponse" : {
        "title" : "Manual Payment Response",
        "required" : [ "payment_details", "payment_object_type" ],
        "type" : "object",
        "properties" : {
          "payment_object_type" : {
            "$ref" : "#/components/schemas/PaymentObjectType"
          },
          "payment_details" : {
            "$ref" : "#/components/schemas/PaymentDetails"
          }
        },
        "description" : "Manual payment response.",
        "readOnly" : true
      },
      "MewsPaymentRequest" : {
        "title" : "Mews Payment Request",
        "required" : [ "payment_customer_id" ],
        "type" : "object",
        "description" : "Use the Mews platform to collect payments.",
        "deprecated" : true,
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentRequest"
        }, {
          "type" : "object",
          "properties" : {
            "payment_customer_id" : {
              "title" : "Payment Customer ID",
              "type" : "string",
              "description" : "Unique identifier of the MEWS customer. Retrieved via the [MEWS Customers API](https://mews-systems.gitbook.io/connector-api/operations/customers).",
              "example" : "794d2b77-0a9a-4190-9fa9-62ea9bf2a56e"
            }
          }
        } ]
      },
      "ManualPaymentRequest" : {
        "title" : "Manual Payment Request",
        "required" : [ "payment_method" ],
        "type" : "object",
        "description" : "Manual payment; handled via an external payment service provider or physical payment method such as Cash and Voucher conversion.",
        "example" : "{\n  \"payment_object_type\": \"MANUAL\",    \n  \"payment_merchant_reference\": \"MY_REFERENCE\",\n  \"payment_method\": \"CASH\"\n}\n",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentRequest"
        }, {
          "type" : "object",
          "properties" : {
            "payment_merchant_account_name" : {
              "title" : "Payment Merchant Account Name",
              "type" : "string",
              "description" : "The name of the party selling goods or services to shoppers via an e-commerce website, a mobile app, on a point of sale, or across all three channels.",
              "example" : "BoatTours"
            },
            "payment_gateway_type" : {
              "$ref" : "#/components/schemas/PaymentGatewayType"
            },
            "payment_gateway_additional_values" : {
              "title" : "Payment Gateway Additional Values",
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Additional (conditional) values returned by the payment service provider.\n\nThere are many additional data elements that can be returned. The list is long and growing, so we can't mention all of them here.\n\nFor example:\n  * Cardholder Name\n  * Cardnumber (last digits only)\n  * Card Scheme\n  * Shopper IP\n  * Card Issuer Country\n  * Card Issuer Name\n  * Fraudscore\n  * Transaction Type\n  * Payment Status\n  * Username",
              "example" : {
                "psp_shopper_name" : "Checkout Shopper PlaceHolder",
                "psp_shopper_cardnumber" : "1111",
                "psp_issuer_country" : "NL",
                "psp_fraudscore" : "63",
                "psp_transaction_type" : "AUTH",
                "psp_payment_status" : "Settled"
              }
            },
            "payment_service_provider_reference" : {
              "title" : "Payment Service Provider Reference",
              "type" : "string",
              "description" : "Unique payment reference set by the payment service provider.",
              "example" : "4714783500596458"
            },
            "payment_method" : {
              "$ref" : "#/components/schemas/PaymentMethod"
            },
            "payment_type" : {
              "$ref" : "#/components/schemas/PaymentType"
            },
            "payment_scheme" : {
              "$ref" : "#/components/schemas/PaymentScheme"
            }
          }
        } ]
      },
      "NGeniusPaymentRequest" : {
        "title" : "N-Genius Payment Request",
        "required" : [ "return_url" ],
        "type" : "object",
        "description" : "Use the N-Genius platform to collect payments.",
        "deprecated" : true,
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentRequest"
        }, {
          "type" : "object",
          "properties" : {
            "return_url" : {
              "title" : "Return URL",
              "type" : "string",
              "description" : "In case of a redirection, this is the URL to where your shopper should be redirected back to after they complete the payment.",
              "example" : "https://your-company.com/webhooks/payment..."
            }
          }
        } ]
      },
      "PaymentConfig" : {
        "title" : "Payment Config",
        "type" : "object",
        "properties" : {
          "payment_methods" : {
            "title" : "Payment Methods",
            "type" : "string",
            "description" : "In case of `payment_service_provider:ADYEN` a list of available payment methods is returned in the response, including any required fields. If you want to know more about the properties returned in the response, see the [response parameters](https://docs.adyen.com/api-explorer/#/PaymentSetupAndVerificationService/paymentMethods__resParam_groups) in the Adyen API Explorer.",
            "readOnly" : true,
            "example" : "{\\\"groups\\\":[{\\\"name\\\":\\\"Credit Card\\\",\\\"types\\\":[\\\"mc\\\",\\\"visa\\\"..."
          },
          "payment_origin_key" : {
            "title" : "Payment Origin Key",
            "type" : "string",
            "description" : "In case of `payment_service_provider:ADYEN`, the required Origin-Key for Web Drop-In will be returned. More information can be found [here](https://docs.adyen.com/user-management/how-to-get-an-origin-key).",
            "readOnly" : true,
            "example" : "pub.v2.99..."
          },
          "payment_origin_domain" : {
            "title" : "Payment Origin Domain",
            "type" : "string",
            "description" : "In case of `payment_service_provider:ADYEN`, the configured origin domain authorized for web payments.",
            "format" : "URI",
            "readOnly" : true,
            "example" : "https://www.your-company.com"
          }
        },
        "description" : "Payment configuration for the selected payment service provider.",
        "readOnly" : true
      },
      "PaymentRequestType" : {
        "title" : "Payment Request Type",
        "type" : "object",
        "description" : "Type of payment request.",
        "example" : {
          "payment_object_type" : "MANUAL",
          "payment_merchant_reference" : "TEST_PAYMENT",
          "payment_external_reference" : "SHOPPER_REF",
          "payment_method" : "CASH"
        },
        "discriminator" : {
          "propertyName" : "payment_object_type",
          "mapping" : {
            "ADYEN_DROP_IN" : "#/components/schemas/AdyenDropInPaymentRequest",
            "ADYEN_LINK" : "#/components/schemas/AdyenPaymentLinkRequest",
            "ADYEN_TERMINAL" : "#/components/schemas/AdyenTerminalAPIPaymentRequest",
            "ADYEN_RECURRING" : "#/components/schemas/AdyenRecurringPaymentRequest",
            "NGENIUS_HPP" : "#/components/schemas/NGeniusPaymentRequest",
            "MEWS_BILL" : "#/components/schemas/MewsPaymentRequest",
            "MANUAL" : "#/components/schemas/ManualPaymentRequest"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/AdyenDropInPaymentRequest"
        }, {
          "$ref" : "#/components/schemas/AdyenPaymentLinkRequest"
        }, {
          "$ref" : "#/components/schemas/AdyenTerminalAPIPaymentRequest"
        }, {
          "$ref" : "#/components/schemas/AdyenRecurringPaymentRequest"
        }, {
          "$ref" : "#/components/schemas/NGeniusPaymentRequest"
        }, {
          "$ref" : "#/components/schemas/MewsPaymentRequest"
        }, {
          "$ref" : "#/components/schemas/ManualPaymentRequest"
        } ]
      },
      "AdyenTerminalAPIPaymentRequest" : {
        "title" : "Adyen Terminal API Payment Request",
        "required" : [ "payment_terminal_id" ],
        "type" : "object",
        "description" : "Use the Adyen Terminal API to collect a payment. See [Adyen Terminal API documentation]('https://docs.adyen.com/point-of-sale/terminal-api-fundamentals#cloud').",
        "deprecated" : true,
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentRequest"
        }, {
          "type" : "object",
          "properties" : {
            "payment_terminal_id" : {
              "title" : "Payment Terminal ID",
              "type" : "string",
              "description" : "Unique ID of the selected payment terminal.",
              "example" : "V400m-328689332"
            }
          }
        } ]
      },
      "MakePaymentResponse" : {
        "title" : "Make Payment Response",
        "type" : "object",
        "description" : "Make payment response.",
        "readOnly" : true,
        "example" : {
          "payment_object_type" : "MANUAL",
          "payment_details" : {
            "payment_id" : "914fca40-d71c-11ea-a4c4-05fbb7067802",
            "payment_merchant_reference" : "TEST_PAYMENT",
            "payment_external_reference" : "SHOPPER_REF",
            "payment_status" : "PAID",
            "payment_method" : "CASH",
            "payment_currency_code" : "EUR",
            "payment_currency_amount" : "421.30",
            "payment_amount" : "500.00",
            "payment_total" : "500.00",
            "payment_contact" : {
              "contact_name_first" : "Ladarius",
              "contact_name_last" : "Barton",
              "contact_email" : "Lori17@example.com"
            },
            "payment_created" : "2020-08-05T15:07:08+02:00",
            "payment_created_name" : "Demo Cashier",
            "payment_created_email" : "demoCashier@prio.com"
          }
        },
        "discriminator" : {
          "propertyName" : "payment_object_type",
          "mapping" : {
            "ADYEN_DROP_IN" : "#/components/schemas/AdyenDropInPaymentResponse",
            "ADYEN_LINK" : "#/components/schemas/AdyenPaymentLinkResponse",
            "ADYEN_TERMINAL" : "#/components/schemas/AdyenTerminalAPIPaymentResponse",
            "ADYEN_RECURRING" : "#/components/schemas/AdyenRecurringPaymentResponse",
            "NGENIUS_HPP" : "#/components/schemas/NGeniusPaymentResponse",
            "MEWS" : "#/components/schemas/MewsPaymentResponse",
            "MANUAL" : "#/components/schemas/ManualPaymentResponse"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/AdyenDropInPaymentResponse"
        }, {
          "$ref" : "#/components/schemas/AdyenPaymentLinkResponse"
        }, {
          "$ref" : "#/components/schemas/AdyenTerminalAPIPaymentResponse"
        }, {
          "$ref" : "#/components/schemas/AdyenRecurringPaymentResponse"
        }, {
          "$ref" : "#/components/schemas/NGeniusPaymentResponse"
        }, {
          "$ref" : "#/components/schemas/MewsPaymentResponse"
        }, {
          "$ref" : "#/components/schemas/ManualPaymentResponse"
        } ]
      },
      "PaymentObjectType" : {
        "title" : "Payment Object Type",
        "type" : "string",
        "description" : "Type of payment.    \n<details>\n  <summary>**Payment Object Types**</summary>\n\nMust be one of the following values:\n  * `ADYEN_DROP_IN` - Adyen Drop-In.\n  * `ADYEN_LINK` - Adyen Payment Link.\n  * `ADYEN_TERMINAL` - Adyen Terminal API.\n  * `ADYEN_RECURRING` - Adyen Recurring Payments.\n  * `NGENIUS_HPP` - N-Genius Hosted Payment Page.\n  * `MEWS_BILL` - Mews Payment.\n  * `MANUAL` - Manual Payment.\n  \n</details>\n  \n> Used to aid in serialization, deserialization, and validation.",
        "example" : "MANUAL"
      },
      "PaymentStatusResponse" : {
        "title" : "Payment Status Response",
        "required" : [ "payment_status" ],
        "type" : "object",
        "properties" : {
          "payment_status" : {
            "$ref" : "#/components/schemas/PaymentStatus"
          }
        },
        "description" : "Payment status response.",
        "readOnly" : true
      },
      "AdyenSetPaymentDetailsRequest" : {
        "title" : "Adyen Set Payment Details Request",
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "title" : "Additional Details",
            "type" : "string",
            "description" : "Additional details returned by Adyen front-end application.",
            "writeOnly" : true
          }
        }
      },
      "ReservationDetailResponse" : {
        "title" : "Reservation Detail Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/ReservationDetailData"
          }
        },
        "description" : "Reservation detail Response."
      },
      "ReservationDetailData" : {
        "title" : "Reservation Detail Data",
        "required" : [ "kind", "reservation" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "reservation" : {
            "$ref" : "#/components/schemas/ReservationModel"
          }
        },
        "description" : "Reservation detail data."
      },
      "CreateReservationRequest" : {
        "title" : "Create Reservation Request",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/CreateReservationRequestData"
          }
        },
        "description" : "Create reservation request."
      },
      "CreateReservationRequestData" : {
        "title" : "Create Reservation Request Data",
        "required" : [ "kind", "reservation" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "reservation" : {
            "$ref" : "#/components/schemas/ReservationModel"
          }
        },
        "description" : "Create reservation request data."
      },
      "GetVoucherResponseJSON" : {
        "title" : "Get Voucher Response JSON",
        "required" : [ "data", "url" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/GetVoucherResponseJSONData"
          },
          "url" : {
            "title" : "Download URL",
            "type" : "string",
            "description" : "Download URL.",
            "format" : "URI",
            "example" : "https://report.prioticket.com/order/voucher/MTU5HzAwODQBMzA5NzI4"
          }
        },
        "description" : "Receive the voucher(s) via a download link."
      },
      "GetVoucherResponseJSONData" : {
        "title" : "Get Voucher Response JSON Data",
        "required" : [ "voucher_created", "voucher_order_reference", "voucher_status", "voucher_url" ],
        "type" : "object",
        "properties" : {
          "voucher_status" : {
            "title" : "Voucher Status",
            "type" : "string",
            "description" : "Voucher status.",
            "example" : "ACTIVE",
            "deprecated" : true,
            "enum" : [ "ACTIVE", "REVOKED", "INACTIVE" ]
          },
          "voucher_order_reference" : {
            "title" : "Voucher Order Reference",
            "type" : "string",
            "description" : "Order reference of voucher(s).",
            "example" : "ORDRREF123456",
            "deprecated" : true
          },
          "voucher_booking_reference" : {
            "title" : "Voucher Booking Reference",
            "type" : "string",
            "description" : "Booking reference of voucher(s).",
            "example" : "BOOKINGREF123",
            "deprecated" : true
          },
          "voucher_url" : {
            "title" : "Voucher URL",
            "type" : "string",
            "description" : "Voucher(s) download URL.",
            "format" : "URI",
            "deprecated" : true
          },
          "voucher_created" : {
            "title" : "Voucher Created",
            "type" : "string",
            "description" : "Voucher(s) creation date-time.",
            "format" : "date-time",
            "deprecated" : true
          }
        },
        "description" : "Get Voucher Respones JSON Data.",
        "deprecated" : true
      },
      "GetVoucherResponsePDF" : {
        "title" : "PDF Voucher",
        "type" : "string",
        "description" : "Receive an encoded PDF file directly.",
        "format" : "binary"
      },
      "CreditDetailResponse" : {
        "title" : "Credit Detail Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/CreditDetailData"
          }
        },
        "description" : "Credit detail Response.",
        "readOnly" : true
      },
      "CreditDetailData" : {
        "title" : "Credit Detail Data",
        "required" : [ "credit", "kind" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "credit" : {
            "$ref" : "#/components/schemas/CreditLimit"
          }
        },
        "description" : "Credit detail data.",
        "readOnly" : true
      },
      "ReservationModel" : {
        "title" : "Reservation Model",
        "required" : [ "reservation_distributor_id", "reservation_distributor_name", "reservation_external_reference", "reservation_pricing", "reservation_reference", "reservation_valid_until" ],
        "type" : "object",
        "properties" : {
          "reservation_distributor_id" : {
            "title" : "Reservation Distributor ID",
            "type" : "string",
            "description" : "Unique identifier for distributor assigned by Prio.",
            "example" : "501"
          },
          "reservation_distributor_name" : {
            "title" : "Reservation Distributor Name",
            "type" : "string",
            "description" : "Name of the distributor.",
            "readOnly" : true,
            "example" : "Demo Distributor"
          },
          "reservation_partner_id" : {
            "title" : "Reservation Partner ID",
            "type" : "string",
            "description" : "Unique identifier for partner assigned by Prio.",
            "example" : "4534543543"
          },
          "reservation_partner_name" : {
            "title" : "Reservation Partner Name",
            "type" : "string",
            "description" : "Name of the partner.",
            "readOnly" : true,
            "example" : "Partner Name"
          },
          "reservation_reference" : {
            "title" : "Reservation Reference",
            "minLength" : 8,
            "type" : "string",
            "description" : "A unique identifier for the created reservation in the Prio.",
            "readOnly" : true,
            "example" : "ABC123456"
          },
          "reservation_external_reference" : {
            "title" : "Reservation External Reference",
            "maxLength" : 50,
            "pattern" : "^[\\\\a-zA-Z-_\\/\\d]+$",
            "type" : "string",
            "description" : "A unique reservation identifier within the external system.",
            "example" : "EXTERNALREF123"
          },
          "reservation_hold_token" : {
            "title" : "Reservation Hold Token",
            "type" : "string",
            "description" : "Unique hold token for this reservation (Internal use only). Only a single holdtoken is allowed per reservation.",
            "example" : "17378c14-ae6a-46a4-ada4-9c745a45e018"
          },
          "reservation_valid_until" : {
            "title" : "Reservation Valid Until",
            "type" : "string",
            "description" : "The reserved order will stay alive until this time, after that the reservation will be auto-cancelled.\n> Please note that if you are having multiple products in your cart, that the value will be set according to the product with the earliest expiration time. In this case ONLY this specific product will be auto-cancelled. To view your updated reservation you could call the 'Cart Details' endpoint.\n\n> Warning; Prio will simply confirm your pending reservation, even when products have been auto-cancelled in between. If this value is not checked by the reserving party, unexpected results could occur.",
            "format" : "date-time",
            "readOnly" : true
          },
          "reservation_details" : {
            "title" : "Reservation Details",
            "type" : "array",
            "description" : "Contains one or more bookings.",
            "items" : {
              "$ref" : "#/components/schemas/ReservationDetail"
            }
          },
          "reservation_contacts" : {
            "title" : "Reservation Contacts",
            "type" : "array",
            "description" : "Contacts linked to this reservation / order. If provided, these values will override the `order_contacts` object during the Confirm Order step.",
            "items" : {
              "$ref" : "#/components/schemas/ContactDetails"
            }
          },
          "reservation_checkout_fields" : {
            "title" : "Reservation Checkout Fields",
            "type" : "array",
            "description" : "Mandatory fields during checkout.",
            "items" : {
              "$ref" : "#/components/schemas/CheckoutField"
            }
          },
          "reservation_promocodes" : {
            "title" : "Reservation Promocodes",
            "type" : "array",
            "description" : "The promocodes applied to this reservation.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AppliedPromocode"
            }
          },
          "reservation_pricing" : {
            "$ref" : "#/components/schemas/Pricing"
          },
          "reservation_payments" : {
            "title" : "Reservation Payments",
            "type" : "array",
            "description" : "Details on the payments linked to this reservation. \n\nA reservation can have multiple payment records in case of installments, split payments, refunds and additional charges. Every action will result in a new record so all history is kept.\n\nPayment records are always returned in a descending order based on the payment date.\nTherefore the first entry in the array can be considered as the last payment and thus the `payment_total` (running sum) as the actual total amount paid and the `payment_status ` as the latest payment status for this reservation.",
            "items" : {
              "$ref" : "#/components/schemas/PaymentDetails"
            }
          },
          "reservation_credit" : {
            "$ref" : "#/components/schemas/CreditLimit"
          },
          "reservation_custom_fields" : {
            "title" : "Reservation Custom Fields",
            "type" : "array",
            "description" : "Freeform entry of any key-value pair.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            }
          },
          "reservation_created" : {
            "title" : "Reservation Created",
            "type" : "string",
            "description" : "Date and time of reservation creation.",
            "format" : "date-time",
            "readOnly" : true
          },
          "reservation_created_name" : {
            "title" : "Reservation Created Name",
            "type" : "string",
            "description" : "Cashier name / User name who created the reservation.",
            "readOnly" : true,
            "example" : "Demo Cashier"
          },
          "reservation_created_email" : {
            "title" : "Reservation Created Email",
            "type" : "string",
            "description" : "Cashier email / User email who created the reservation.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com"
          },
          "reservation_modified" : {
            "title" : "Reservation Modified",
            "type" : "string",
            "description" : "Date and time of reservation update.",
            "format" : "date-time",
            "readOnly" : true,
            "deprecated" : true
          }
        },
        "description" : "Reservation model."
      },
      "AppliedPromocode" : {
        "title" : "Applied Promocode",
        "required" : [ "promo_code", "promo_title" ],
        "type" : "object",
        "properties" : {
          "promo_title" : {
            "title" : "Promo Title.",
            "type" : "string",
            "description" : "Title of applied promocode.",
            "example" : "Christmas Sale 2019"
          },
          "promo_description" : {
            "title" : "Promo Description",
            "type" : "string",
            "description" : "Promo description.",
            "example" : "20 percent discount during the Christmas days."
          },
          "promo_code" : {
            "title" : "Promocode",
            "type" : "string",
            "description" : "Promocode.",
            "example" : "PROMOCODE_123"
          }
        },
        "description" : "Details on the applied promocode."
      },
      "Pricing" : {
        "title" : "Price Breakdown",
        "required" : [ "price_subtotal", "price_total", "price_type" ],
        "type" : "object",
        "properties" : {
          "price_type" : {
            "title" : "Price Type",
            "type" : "string",
            "description" : "Price breakdown on either purchase or sales and including or excluding tax.",
            "readOnly" : true,
            "example" : "SALES",
            "deprecated" : true,
            "enum" : [ "PURCHASE_GROSS", "PURCHASE_NET", "SALES_GROSS", "SALES_NET" ]
          },
          "price_currency_code" : {
            "title" : "Price Currency Code",
            "type" : "string",
            "description" : "Price currency code. According to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).\n\nDefaults to the base currency of your account. ",
            "readOnly" : true,
            "example" : "EUR",
            "deprecated" : true
          },
          "price_currency_rate" : {
            "title" : "Price Currency Rate",
            "type" : "string",
            "description" : "**(ADVANCED)** Optional alternative currency conversion rate. \n\nIf not set and an alternative `price_currency_code` is provided, the latest rates from the Currency API will be used.\n> Alternative rates can only be provided on (re)sales, purchase exchange rates are fixed.",
            "readOnly" : true,
            "example" : "1.647",
            "deprecated" : true
          },
          "price_subtotal" : {
            "title" : "Price Sub Total",
            "type" : "string",
            "description" : "Sum of `product_type_list_price` for all `product_types` including extra options, without promocodes, price variations and additional fees (`fee_included:true`).",
            "readOnly" : true,
            "example" : "20.00"
          },
          "price_variations" : {
            "title" : "Price Variations",
            "type" : "array",
            "description" : "All applicable price variations (`product_quantity_pricing`, `product_daily_pricing`, `product_dynamic_pricing` and more).\n\nSome variations are set automatically based on your request and the selected products, such as quantity and dynamic pricing, whereas other variations can be set manually (e.g cart and partner discount).",
            "example" : [ {
              "variation_label" : "Peak Hour",
              "variation_amount" : "2.50",
              "variation_type" : "PRODUCT_DYNAMIC"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/PriceVariations"
            }
          },
          "price_promocodes" : {
            "title" : "Price Promocodes",
            "type" : "array",
            "description" : "Applied promocodes pricing. \n\nOnly applicable in case of `price_type:SALES_GROSS/SALES_NET`.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/PromoCodePricing"
            }
          },
          "price_taxes" : {
            "title" : "Price Taxes",
            "type" : "array",
            "description" : "Product tax breakdown. \n\nAlready included in the price breakdown in case `price_type:PURCHASE_GROSS/SALES_GROSS`, otherwise excluded. Taxes on fees are listed separately in `price_fees`.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductTax"
            }
          },
          "price_fees" : {
            "title" : "Price Fees",
            "type" : "array",
            "description" : "List of additional fees. \n\nAdditional fees (`fee_included:true`) should be included in the `price_total`. \n\nNote that some fees are only visible to certain users.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Fee"
            }
          },
          "price_margins" : {
            "title" : "Price Margins",
            "type" : "array",
            "description" : "Margin breakdown (informational only).\nNote that some margins are only visible to certain users.",
            "readOnly" : true,
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Margin"
            }
          },
          "price_total" : {
            "title" : "Total Sales Price",
            "type" : "string",
            "description" : "The total sales / purchase price including all discounts, surcharges and fees above.",
            "readOnly" : true,
            "example" : "12.00"
          }
        },
        "description" : "The calculated price based on the selected products. \n\nWe highly recommend implementing a cross-check before confirming the order with your own calculated prices to prevent mismatches."
      },
      "PromoCodePricing" : {
        "title" : "Promocode Pricing",
        "required" : [ "promo_amount", "promo_code" ],
        "type" : "object",
        "properties" : {
          "promo_code" : {
            "title" : "Promocode",
            "type" : "string",
            "description" : "The promocode.",
            "example" : "PROMOCODE_123"
          },
          "promo_amount" : {
            "title" : "Promo Amount",
            "type" : "string",
            "description" : "The promo amount.",
            "example" : "-5.50"
          }
        },
        "description" : "Promocode pricing.",
        "readOnly" : true
      },
      "PriceVariations" : {
        "title" : "Price Variation",
        "required" : [ "variation_amount", "variation_type" ],
        "type" : "object",
        "properties" : {
          "variation_label" : {
            "title" : "Variation Label",
            "type" : "string",
            "description" : "Label / Explanation for this variation.",
            "example" : "Peak Hour"
          },
          "variation_amount" : {
            "title" : "Variation Amount",
            "type" : "string",
            "description" : "The amount which should be added / substracted to the `price_subtotal`. This can be a negative value (discount) or positive value (surcharge).",
            "example" : "-5.00"
          },
          "variation_type" : {
            "title" : "Variation Type",
            "type" : "string",
            "description" : "Type of variation.\n\nOnly `CART_DISCOUNT_*` and `PARTNER_DISCOUNT` can be set in the request, other variations will be automatically added based on your order and returned on every response. If you sent other variations in your request, they will be ignored.\n<details>\n  <summary>**Variation Types**</summary>\n\n * `PRODUCT_DYNAMIC` - In case of `product_dynamic_pricing:true` the price variation based on availability will be shown here.\n * `PRODUCT_DAILY` - In case of `product_daily_pricing:true` the price variation based on the day will be shown here.\n * `PRODUCT_QUANTITY` - In case of `product_quantity_pricing:true` the price variation based on the quantity will be shown here.\n * `PRODUCT_DISCOUNT` - In case a `product_type_discount` is set, the price variation will be shown here.\n * `PRODUCT_MARKUP` - TBA.\n * `PRODUCT_BUNDLE` - TBA.\n * `PRODUCT_COMBI_DISCOUNT` - Combi discount.\n * `PARTNER_DISCOUNT` - In case of partner sales, the guest discount or partner discount / commission can be set by the cashier.\n * `CART_DISCOUNT_FIXED` - Fixed cart discount set by the cashier. \n \n    This discount is pre-configured and must exist in our system prior to making the booking.\n * `CART_DISCOUNT_CUSTOM` - Custom cart discount set by the cashier. \n \n    This discount is dynamic, does not have to exist in our system and can be set to any allowed value.\n * `PRODUCT_CAMPAIGN` - Promo campaign.\n * `AMENDMENT_DISCOUNT`\n * `AMENDMENT_FEE`\n * `OTHER` - Any variation not matching the types above.\n \n</details>\n",
            "enum" : [ "PRODUCT_DYNAMIC", "PRODUCT_DAILY", "PRODUCT_QUANTITY", "PRODUCT_DISCOUNT", "PRODUCT_MARKUP", "PRODUCT_BUNDLE", "PRODUCT_CAMPAIGN", "PRODUCT_COMBI_DISCOUNT", "PARTNER_DISCOUNT", "CART_DISCOUNT_FIXED", "CART_DISCOUNT_CUSTOM", "AMENDMENT_DISCOUNT", "AMENDMENT_FEE", "OTHER" ]
          }
        },
        "description" : "Variation which is applicable on the list price."
      },
      "ReservationDetail" : {
        "title" : "Reservation Detail",
        "description" : "Details on a booking inside a reservation.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProductBookingModel"
        }, {
          "required" : [ "booking_reservation_reference", "booking_reservation_valid_until", "product_type_details" ],
          "type" : "object",
          "properties" : {
            "booking_reservation_reference" : {
              "title" : "Booking Reservation Reference",
              "type" : "string",
              "description" : "Unique identifier for this booking within the current cart. To update this booking you should pass the same value in the next request.",
              "example" : "BOOKING_RESERVATION_REFERENCE_123"
            },
            "booking_reservation_valid_until" : {
              "title" : "Booking Reservation Valid Until",
              "type" : "string",
              "description" : "The reserved booking will stay alive until this time, after that the booking will be auto-cancelled.\n> In this case ONLY this specific product will be auto-cancelled. To view your updated reservation you could call the 'Cart Details' endpoint.\n\n> Our system will try to reset the `booking_reservation_valid_until` every time the Update Cart endpoint is called. This will not work for most third-party products. Please keep an eye on the value `booking_reservation_valid_until` to make sure your cart does not expire.",
              "format" : "date-time",
              "readOnly" : true
            },
            "product_type_details" : {
              "title" : "Product Type Booking Details",
              "type" : "array",
              "description" : "A list specifying the booking quantity per product type.",
              "items" : {
                "$ref" : "#/components/schemas/BookingItemWithPricing"
              }
            }
          }
        } ]
      },
      "CheckoutField" : {
        "title" : "Checkout Field",
        "type" : "object",
        "properties" : {
          "checkout_field_id" : {
            "title" : "Checkout Field ID",
            "type" : "string",
            "description" : "Unique Checkout Field ID.",
            "example" : "CHECKOUT_FIELD_ID"
          },
          "checkout_field_title" : {
            "title" : "Checkout Field Title",
            "type" : "string",
            "readOnly" : true,
            "example" : "First Name"
          },
          "checkout_field_label" : {
            "title" : "Checkout Field Label",
            "type" : "string",
            "readOnly" : true,
            "example" : "Please provide your first name"
          },
          "checkout_field_account_type" : {
            "title" : "Checkout Field Account Type",
            "type" : "string",
            "description" : "Whether this field is required by the venue (supplier) or the seller (distributor).",
            "readOnly" : true,
            "example" : "DISTRIBUTOR",
            "enum" : [ "SUPPLIER", "DISTRIBUTOR" ]
          },
          "checkout_field_booking_reference" : {
            "title" : "Checkout Field Booking Reference",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "checkout_field_restriction" : {
            "title" : "Checkout Field Restriction",
            "type" : "string",
            "description" : "Whether a field is required, optional or recommended.",
            "readOnly" : true,
            "enum" : [ "REQUIRED", "OPTIONAL", "RECOMMENDED" ]
          },
          "checkout_field_level" : {
            "title" : "Checkout Field Level",
            "type" : "string",
            "description" : "Whether answers should be provided once or for each participant.",
            "readOnly" : true,
            "enum" : [ "PRODUCT", "PARTICIPANT" ]
          },
          "checkout_field_unit" : {
            "title" : "Checkout Field Unit",
            "type" : "string"
          },
          "checkout_field_input_type" : {
            "title" : "Checkout Field Input Type",
            "type" : "string",
            "description" : "* `SINGLE` - Single option value is available.\n* `RADIO` - Customer can select only one out of multiple option values.\n* `CHECKBOX` - Customers can select one or more option values.\n* `SHORT_ANSWER` - A one-line input field for text. (UPCOMING)\n* `PARAGRAPH` - A multi-line input field for text. (UPCOMING)\n* `DROPDOWN` - A selection from a dropdown. (UPCOMING)\n* `BOOLEAN` - A yes/no button. (UPCOMING)\n* `PHONE` - A phonenumber. (UPCOMING)\n* `EMAIL` - An email. (UPCOMING)\n* `DATE` - A date. (UPCOMING)\n* `TIME` - A time. (UPCOMING)\n* `DATETIME` - A date and time. (UPCOMING)\n* `NUMBER` - A number. (UPCOMING)\n* `LOCATION_SEARCH` - A search widget that supports finding matched location given user input from provided location list. (UPCOMING)\n",
            "readOnly" : true,
            "example" : "SINGLE",
            "enum" : [ "SINGLE", "RADIO", "CHECKBOX", "SHORT_ANSWER", "PARAGRAPH", "DROPDOWN", "BOOLEAN", "PHONE", "EMAIL", "DATE", "TIME", "DATETIME", "NUMBER", "LOCATION_SEARCH" ]
          },
          "checkout_field_type" : {
            "title" : "Checkout Type",
            "type" : "string",
            "description" : "Which field the restriction applies on.",
            "readOnly" : true,
            "enum" : [ "contact_title", "contact_name_first", "contact_name_last", "contact_email", "contact_phone", "contact_mobile", "contact_language", "contact_nationality", "contact_birth_place", "contact_birth_date", "contact_passport", "contact_age", "contact_address", "contact_type_company", "contact_type_guest", "contact_type_booker", "SYSTEM", "CUSTOM" ]
          },
          "checkout_field_options" : {
            "title" : "Checkout Field Options",
            "type" : "array",
            "description" : "In case of `checkout_field_input_type:RADIO/CHECKBOX/DROPDOWN`, one or more options should be selected.\n",
            "example" : [ "AIR", "RAIL", "SEA", "OTHER" ],
            "items" : {
              "$ref" : "#/components/schemas/CheckoutFieldOption"
            }
          },
          "checkout_field_values" : {
            "title" : "Checkout Field Values",
            "type" : "array",
            "description" : "Checkout field input/selected values.",
            "items" : {
              "$ref" : "#/components/schemas/CheckoutFieldValue"
            }
          },
          "checkout_field_created" : {
            "title" : "Checkout Field Created",
            "type" : "string",
            "description" : "Checkout field creation datetime.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Mandatory field during checkout. These fields must be filled during order checkout. Otherwise the order will be rejected."
      },
      "CheckoutFieldOption" : {
        "title" : "Checkout Field Option",
        "type" : "string",
        "description" : "Checkout field option.",
        "example" : "RAIL"
      },
      "CheckoutFieldValue" : {
        "title" : "Checkout Field Value",
        "type" : "object",
        "properties" : {
          "checkout_field_value_product_type" : {
            "title" : "Checkout Field Value Product Type",
            "type" : "string",
            "description" : "Restricts the checkout field selection to a specific product type.",
            "example" : "ADULT"
          },
          "checkout_field_value" : {
            "title" : "Checkout Field Value",
            "type" : "array",
            "description" : "Selected / Input value(s) of checkout field. Should be \"true\"\" in case of Boolean type, can be array in case of multi-select.",
            "items" : {
              "title" : "Checkout Field Entry",
              "type" : "string",
              "description" : "Checkout field entry.",
              "example" : "AIR"
            }
          },
          "checkout_field_value_transaction_reference" : {
            "title" : "Checkout Field Value Transaction Reference",
            "type" : "string",
            "description" : "Restricts the checkout field selection to a specific transaction.",
            "example" : "TRANSACTION_REFERENCE"
          }
        },
        "description" : "Checkout field value/answer."
      },
      "BookingProductPickupPoint" : {
        "title" : "Booking Product Pickup Point",
        "type" : "object",
        "description" : "Mandatory if `product_pickup_point:true` in product details.",
        "discriminator" : {
          "propertyName" : "pickup_point_type",
          "mapping" : {
            "FIXED" : "#/components/schemas/PickupPoint",
            "CUSTOM" : "#/components/schemas/CustomPickupPoint"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PickupPoint"
        }, {
          "$ref" : "#/components/schemas/CustomPickupPoint"
        } ]
      },
      "CustomPickupPoint" : {
        "title" : "Custom Pickup Point",
        "required" : [ "pickup_point_location", "pickup_point_type" ],
        "type" : "object",
        "properties" : {
          "pickup_point_type" : {
            "$ref" : "#/components/schemas/PickupPointType"
          },
          "pickup_point_date" : {
            "title" : "Pickup Point Date",
            "type" : "string",
            "description" : "Date and time of pickup.",
            "format" : "date-time"
          },
          "pickup_point_note" : {
            "$ref" : "#/components/schemas/Note"
          },
          "pickup_point_location" : {
            "$ref" : "#/components/schemas/AddressModel"
          }
        },
        "description" : "Custom pickup point.",
        "deprecated" : true
      },
      "PickupPointType" : {
        "title" : "Pickup Point Type",
        "type" : "string",
        "description" : "Type of pickup point.\n\nPickup Point Type:\n  * `FIXED` - Fixed, pre-defined pickup point.\n   \n  * `CUSTOM` - Custom pickup point.",
        "deprecated" : true,
        "enum" : [ "FIXED", "CUSTOM" ]
      },
      "CapacityType" : {
        "title" : "Capacity Type",
        "type" : "string",
        "description" : "Type of capacity.\n\n<details>\n  <summary>**Capacity Types**</summary>\n\n* `OWN` - This product has his own capacity.\n \n* `SHARED` - This product does not have it's own capacity, instead it uses shared capacity from other products.\n* `COMBINED` - This product has his own capacity combined with the capacity of other products.\n* `NOT_SET` - This product does not have capacity.\n</details>\n",
        "readOnly" : true,
        "enum" : [ "OWN", "SHARED", "COMBINED", "NOT_SET" ]
      },
      "ProductBookingModel" : {
        "title" : "Product Booking Model",
        "required" : [ "booking_created", "booking_external_reference", "booking_modified", "booking_status", "product_admission_type", "product_cancellation_allowed", "product_currency_code", "product_id", "product_market_admin_id", "product_market_admin_name", "product_supplier_id", "product_supplier_name", "product_title", "product_type_details" ],
        "type" : "object",
        "properties" : {
          "booking_external_reference" : {
            "title" : "Booking External Reference",
            "type" : "string",
            "description" : "A unique booking identifier within the external system.",
            "example" : "BOOKING_EXTERNALREF123"
          },
          "booking_status" : {
            "$ref" : "#/components/schemas/BookingStatusTypes"
          },
          "booking_version" : {
            "title" : "Booking Version",
            "multipleOf" : 1,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Booking version number.",
            "readOnly" : true,
            "example" : 1,
            "default" : 1
          },
          "booking_voucher_released" : {
            "title" : "Booking Voucher Released",
            "type" : "boolean",
            "description" : "Whether the vouchers of this booking are available / released. Voucher allocation can be delayed based on the voucher release requirements.",
            "readOnly" : true
          },
          "booking_travel_date" : {
            "title" : "Booking Travel Date",
            "type" : "string",
            "description" : "If `product_availability:false` you can still define the expected redemption date of this product. Required if `product_traveldate_required:true`.\nIf unset and availability is applicable, `booking_travel_date` will be returned as `availability_from_date_time` in the response.",
            "format" : "date-time"
          },
          "booking_valid_until" : {
            "title" : "Booking Valid Until",
            "type" : "string",
            "description" : "The booking will be valid until this time, after that the booking will be expired if not redeemed.\nMainly applicable to open products.",
            "format" : "date-time",
            "readOnly" : true
          },
          "booking_invoice_status" : {
            "$ref" : "#/components/schemas/InvoiceStatus"
          },
          "booking_language" : {
            "title" : "Booking Language",
            "type" : "string",
            "description" : "Language codes for the available languages of the product, e.g. Live Guides are available in English and Spanish languages. Language is defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.",
            "example" : "en",
            "default" : "en"
          },
          "booking_addon_reference" : {
            "title" : "Booking Addon Reference",
            "type" : "string",
            "description" : "When booking an addon a reference to the original booking is required. \n\nPurchasing an addon requires a booking record for the main product and thus a booking reference for another booking within the same reservation or previously created order should be provided.\n\nIf you do not sent this parameter, it will not be be considered as an addon and registered as an individual sale instead.",
            "example" : "BOOKING_ADDON_REFERENCE_123"
          },
          "booking_pricing" : {
            "$ref" : "#/components/schemas/Pricing"
          },
          "booking_notes" : {
            "title" : "Booking Notes",
            "type" : "array",
            "description" : "Booking notes.",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "booking_customer_url" : {
            "title" : "Booking Customer URL",
            "type" : "string",
            "description" : "This link that can be attached and communicated towards the end-consumer and allows for booking amendment.",
            "format" : "URI",
            "readOnly" : true,
            "example" : "https://customer.prioticket.com/orders/ORDRREF123456"
          },
          "booking_created" : {
            "title" : "Booking Created",
            "type" : "string",
            "description" : "Date and time of booking creation.",
            "format" : "date-time",
            "readOnly" : true
          },
          "booking_modified" : {
            "title" : "Booking Modified",
            "type" : "string",
            "description" : "Date and time of booking update.",
            "format" : "date-time",
            "readOnly" : true
          },
          "booking_confirmed" : {
            "title" : "Booking Confirmed",
            "type" : "string",
            "description" : "Date and time of booking confirmation.",
            "format" : "date-time",
            "readOnly" : true
          },
          "booking_cancelled" : {
            "title" : "Booking Cancellation",
            "type" : "string",
            "description" : "Date and time of booking cancellation.",
            "format" : "date-time",
            "readOnly" : true
          },
          "booking_cancellation_reason" : {
            "title" : "Booking Cancellation Reason",
            "type" : "string",
            "description" : "Reason for booking cancellation.",
            "readOnly" : true,
            "example" : "Payment declined"
          },
          "product_id" : {
            "title" : "Product ID",
            "type" : "string",
            "description" : "Unique identifier for the product assigned by Prio.",
            "example" : "PRODUCT_ID_123"
          },
          "product_relation_id" : {
            "title" : "Product Relation ID",
            "type" : "string",
            "description" : "When products are booked as part of a cluster or bundle the main product id should be defined to determine the relationship.\n\nPurchasing a cluster or bundle requires a reference to the main product (shell). If not provided, an error will be returned.\n\nUnlike addons, when booking a bundle or cluster, only the sub-product is required and therefore there is no need to link it with a seperate (main) booking.\n\nIf you do not sent this parameter, and the sub-product is eligible for individual sale as well, it will be booked as such instead.",
            "example" : "MAIN_PRODUCT_ID_123"
          },
          "product_pickup_point_id" : {
            "title" : "Product Pickup Point ID",
            "type" : "string",
            "description" : "Mandatory if `product_pickup_point:MANDATORY` in product details.",
            "example" : "PICKUP_POINT_ID_123"
          },
          "product_pickup_point" : {
            "$ref" : "#/components/schemas/PickupPoint"
          },
          "product_availability_id" : {
            "title" : "Product Availability ID",
            "type" : "string",
            "description" : "The unique ID for the timeslot (`availability_id`) or specific availability spot (`availability_spot_id`) if `product_availability_assigned:true`. Only mandatory if `product_availability:true`.",
            "example" : "20191026090010006526"
          },
          "product_availability_from_date_time" : {
            "title" : "Product Availability From Date Time",
            "type" : "string",
            "description" : "The starting date and time of the activity availability.",
            "format" : "date-time",
            "readOnly" : true
          },
          "product_availability_to_date_time" : {
            "title" : "Product Availability To Date Time",
            "type" : "string",
            "description" : "The till date and time of the activity availability.",
            "format" : "date-time",
            "readOnly" : true
          },
          "product_availability_capacity_id" : {
            "title" : "Availability Slot Capacity ID",
            "type" : "string",
            "description" : "Availability group / capacity identifier.",
            "readOnly" : true,
            "example" : "43525235"
          },
          "product_availability_capacity_shared_id" : {
            "title" : "Availability Slot Shared Capacity ID",
            "type" : "string",
            "description" : "Shared availability / capacity identifier. Only applicable if `capacity_type:SHARED / COMBINED`.",
            "readOnly" : true,
            "example" : "435252453"
          },
          "product_title" : {
            "title" : "Product Title",
            "type" : "string",
            "description" : "The title of the product.",
            "readOnly" : true,
            "example" : "Test Product"
          },
          "product_supplier_id" : {
            "title" : "Product Supplier ID",
            "type" : "string",
            "description" : "Unique identifier for the supplier.",
            "readOnly" : true,
            "example" : "PRODUCT_SUPPLIER_ID"
          },
          "product_supplier_name" : {
            "title" : "Product Supplier Name",
            "type" : "string",
            "description" : "Name of the supplier which offers the product(s).",
            "readOnly" : true,
            "example" : "Test Museum"
          },
          "product_supplier_admin_id" : {
            "title" : "Product Supplier Admin ID",
            "type" : "string",
            "description" : "Unique identifier for the supplier admin.",
            "readOnly" : true,
            "example" : "PRODUCT_SUPPLIER_ADMIN_ID"
          },
          "product_supplier_admin_name" : {
            "title" : "Product Supplier Admin Name",
            "type" : "string",
            "description" : "Name of the supplier admin.",
            "readOnly" : true,
            "example" : "Supplier Admin Name"
          },
          "product_market_admin_id" : {
            "title" : "Product Market Admin ID",
            "type" : "string",
            "description" : "Unique identifier for the market admin.",
            "readOnly" : true,
            "example" : "345345342"
          },
          "product_market_admin_name" : {
            "title" : "Product Market Admin Name",
            "type" : "string",
            "description" : "Name of the market admin.",
            "readOnly" : true,
            "example" : "Market Admin Name"
          },
          "product_source_id" : {
            "title" : "Product Source ID",
            "type" : "string",
            "description" : "Unique ID of the product source.",
            "readOnly" : true,
            "example" : "34564574"
          },
          "product_source_name" : {
            "title" : "Product Source Name",
            "type" : "string",
            "description" : "Name of the supplier reservation system from which this product is sourced.",
            "readOnly" : true,
            "example" : "Prioticket"
          },
          "product_entry_notes" : {
            "title" : "Product Entry Notes",
            "type" : "string",
            "description" : "Product entry information. (Know before you go).\nThe user-visible list of important notes, use for details such as age-restrictions or other conditions that make this service unsuitable.\n",
            "readOnly" : true,
            "example" : "Reconfirmation: Please call or email atleast 72 hour in advance to reconfirm your arrival."
          },
          "product_admission_type" : {
            "$ref" : "#/components/schemas/ProductAdmissionType"
          },
          "product_class" : {
            "$ref" : "#/components/schemas/ProductClass"
          },
          "product_currency_code" : {
            "title" : "Product Currency Code",
            "type" : "string",
            "description" : "Product Currency Code, according to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).",
            "readOnly" : true,
            "example" : "USD"
          },
          "product_cancellation_allowed" : {
            "title" : "Product Cancellation Allowed",
            "type" : "boolean",
            "description" : "Whether it is allowed to cancel this product / booking. \n\nThis takes into account the current state of the order as well as variables such as `booking_status` and  `product_type_redemption_status`.  \n\nNote that even if a product can be cancelled in this state, cancellation fees and restrictions might still apply and override this value.\nPlease check `product_cancellation_policies` for more details.",
            "readOnly" : true,
            "example" : true,
            "default" : true
          },
          "product_options" : {
            "title" : "Product Booking Options",
            "type" : "array",
            "description" : "The product options booked (including individual options from related combi products). \n",
            "items" : {
              "$ref" : "#/components/schemas/BookingExtraOptions"
            }
          },
          "product_combi_details" : {
            "title" : "Product Combi Details",
            "type" : "array",
            "description" : "In case the booked product is the main combi-product (`product_class:COMBI`), this field should be populated for each and every listed sub-product inside `product_combi_details`.\nAll sub-product will inherited the missing details such as `product_type_details` from the parent.",
            "items" : {
              "$ref" : "#/components/schemas/ProductSubDetail"
            }
          },
          "product_bundle_details" : {
            "title" : "Product Bundle Details",
            "type" : "array",
            "description" : "In case the booked product is the main bundle-product (`product_class:BUNDLE`), this field should be populated for each and every listed sub-product inside `product_bundle_details`.\nAll sub-product will inherited the missing details such as `product_type_details` from the parent.",
            "items" : {
              "$ref" : "#/components/schemas/ProductSubDetail"
            }
          },
          "product_addon_details" : {
            "title" : "Product Addon Details",
            "type" : "array",
            "description" : "In case addons are booked for this product, all related addon booking details will be returned.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProductAddonDetail"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Product booking model."
      },
      "OrderModel" : {
        "title" : "Order Model",
        "required" : [ "order_channel", "order_created", "order_created_email", "order_created_name", "order_distributor_id", "order_distributor_name", "order_external_reference", "order_language", "order_modified", "order_platform_id", "order_platform_name", "order_redacted", "order_reference", "order_reseller_id", "order_reseller_name", "order_status", "order_version", "order_view_type" ],
        "type" : "object",
        "properties" : {
          "order_platform_id" : {
            "title" : "Order Platform ID",
            "type" : "string",
            "description" : "Unique identifier of the platform.",
            "readOnly" : true,
            "example" : "1"
          },
          "order_platform_name" : {
            "title" : "Order Platform Name",
            "type" : "string",
            "description" : "Name of the platform.",
            "readOnly" : true,
            "example" : "Platform Name"
          },
          "order_reseller_id" : {
            "title" : "Order Reseller ID",
            "type" : "string",
            "description" : "Unique identifier of the reseller.",
            "readOnly" : true,
            "example" : "1300"
          },
          "order_reseller_name" : {
            "title" : "Order Reseller Name",
            "type" : "string",
            "description" : "Name of the reseller.",
            "readOnly" : true,
            "example" : "Demo reseller"
          },
          "order_distributor_id" : {
            "title" : "Order Distributor ID",
            "type" : "string",
            "description" : "Unique identifier for distributor assigned by Prio.",
            "example" : "501"
          },
          "order_distributor_name" : {
            "title" : "Order Distributor Name",
            "type" : "string",
            "description" : "Name of the distributor.",
            "readOnly" : true,
            "example" : "Demo Distributor"
          },
          "order_partner_id" : {
            "title" : "Order Partner ID",
            "type" : "string",
            "description" : "Unique identifier for partner assigned by Prio.",
            "example" : "4534543543"
          },
          "order_partner_name" : {
            "title" : "Order Partner Name",
            "type" : "string",
            "description" : "Name of the partner.",
            "readOnly" : true,
            "example" : "Partner Name"
          },
          "order_reference" : {
            "title" : "Order Reference",
            "minLength" : 8,
            "type" : "string",
            "description" : "A unique identifier for the created order in the Prio.",
            "readOnly" : true,
            "example" : "ORDRREF123456"
          },
          "order_external_reference" : {
            "title" : "Order External Reference",
            "type" : "string",
            "description" : "A unique order identifier within the external system.",
            "example" : "EXTERNALREF123"
          },
          "order_status" : {
            "$ref" : "#/components/schemas/OrderStatusTypes"
          },
          "order_settlement_type" : {
            "$ref" : "#/components/schemas/SettlementType"
          },
          "order_channel" : {
            "$ref" : "#/components/schemas/OrderChannel"
          },
          "order_language" : {
            "title" : "Language",
            "type" : "string",
            "description" : "Language to use for communication, e.g pre-arrival emails. Language is defined in [ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.",
            "example" : "en"
          },
          "order_version" : {
            "title" : "Order Version",
            "type" : "integer",
            "description" : "Order version number.",
            "readOnly" : true,
            "example" : 1,
            "default" : 1
          },
          "order_archived" : {
            "title" : "Order Archived",
            "type" : "boolean",
            "description" : "Whether this order has been archived. Orders will be automatically archived if it is in a final state and has not been amended for a long period of time.",
            "readOnly" : true,
            "example" : false,
            "deprecated" : true,
            "default" : false
          },
          "order_contacts" : {
            "title" : "Order Contacts",
            "type" : "array",
            "description" : "Contacts linked to this order. Do not use if contacts are already provided in the `reservation_contacts` object during the reservation stage.",
            "items" : {
              "$ref" : "#/components/schemas/ContactDetails"
            }
          },
          "order_promocodes" : {
            "title" : "Order Promocodes",
            "type" : "array",
            "description" : "The promocodes applied to this order. Only shown in case one or more promocodes have been applied in the reservation. Not applicable to Direct Booking.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AppliedPromocode"
            }
          },
          "order_payments" : {
            "title" : "Order Payments",
            "type" : "array",
            "description" : "Details on the payments linked to this order. \n\nAn order can have multiple payment records in case of installments, split payments, refunds and additional charges. Every action will result in an additional record, hence all payment history is maintained.\n\nPayment records are always returned in a descending order based on the payment date.\nTherefore the first entry in the array can be considered as the most recent payment / refund and thus the `payment_total` (running sum) as the actual total amount paid and the `payment_status ` as the latest payment status for this order.\nIf there are no records, the order can be considered unpaid.\n\nOnly a single payment can be in progress or pending at the same time. Outstanding amounts will be added as a running total in the latest record with `payment_status:PENDING`. \n> All payments linked to this order will be returned, regardless of the `order_version`.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/PaymentDetails"
            }
          },
          "order_checkout_fields" : {
            "title" : "Order Checkout Fields",
            "type" : "array",
            "description" : "Mandatory fields during checkout, only applicable on request when using Direct Booking.",
            "items" : {
              "$ref" : "#/components/schemas/CheckoutField"
            }
          },
          "order_pricing" : {
            "$ref" : "#/components/schemas/Pricing"
          },
          "order_credit" : {
            "$ref" : "#/components/schemas/CreditLimit"
          },
          "order_invoices" : {
            "title" : "Order Invoices",
            "type" : "array",
            "description" : "Related invoices.",
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/InvoiceDetails"
            }
          },
          "order_options" : {
            "$ref" : "#/components/schemas/OrderOptions"
          },
          "order_flags" : {
            "title" : "Order Flags",
            "type" : "array",
            "description" : "Order flags.",
            "items" : {
              "$ref" : "#/components/schemas/Flag"
            }
          },
          "order_event_details" : {
            "title" : "Order Event Details",
            "type" : "array",
            "description" : "Details on each order event.",
            "items" : {
              "$ref" : "#/components/schemas/OrderEvent"
            }
          },
          "order_custom_fields" : {
            "title" : "Order Custom Fields",
            "type" : "array",
            "description" : "Freeform entry of any key-value pair.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            }
          },
          "order_notes" : {
            "title" : "Order Notes",
            "type" : "array",
            "description" : "Order notes.",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "order_activity_url" : {
            "title" : "Order Activity URL",
            "type" : "string",
            "description" : "This link redirects towards the Activity Overview which allows the agent to amend the order.",
            "format" : "URI",
            "readOnly" : true,
            "example" : "https://activity.prioticket.com/orders/ORDRREF123456"
          },
          "order_customer_url" : {
            "title" : "Order Customer URL",
            "type" : "string",
            "description" : "This link that can be attached and communicated towards the end-consumer and allows for order amendment.",
            "format" : "URI",
            "readOnly" : true,
            "example" : "https://customer.prioticket.com/orders/ORDRREF123456"
          },
          "order_created" : {
            "title" : "Order Created",
            "type" : "string",
            "description" : "Date and time of order creation.",
            "format" : "date-time",
            "readOnly" : true
          },
          "order_created_name" : {
            "title" : "Order Created Name",
            "type" : "string",
            "description" : "Cashier name / User name who created the order.",
            "readOnly" : true,
            "example" : "Demo Cashier"
          },
          "order_created_email" : {
            "title" : "Order Created Email",
            "type" : "string",
            "description" : "Cashier email / User email who created the order.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com"
          },
          "order_modified" : {
            "title" : "Order Modified",
            "type" : "string",
            "description" : "Date and time of order update.",
            "format" : "date-time",
            "readOnly" : true
          },
          "order_modified_name" : {
            "title" : "Order Modified Name",
            "type" : "string",
            "description" : "Cashier name / User name who modified the order.",
            "readOnly" : true,
            "example" : "Demo Cashier"
          },
          "order_modified_email" : {
            "title" : "Order Modified Email",
            "type" : "string",
            "description" : "Cashier email / User email who modified the order.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com"
          },
          "order_confirmed" : {
            "title" : "Order Confirmed",
            "type" : "string",
            "description" : "Date and time of order confirmation.",
            "format" : "date-time",
            "readOnly" : true,
            "deprecated" : true
          },
          "order_invoiced" : {
            "title" : "Order Invoiced",
            "type" : "string",
            "description" : "Date and time of order invoice.",
            "format" : "date-time",
            "readOnly" : true,
            "deprecated" : true
          },
          "order_cancellation_date_time" : {
            "title" : "Order Cancellation Date Time",
            "type" : "string",
            "description" : "Date and time of order cancellation.",
            "format" : "date-time",
            "readOnly" : true
          },
          "order_cancellation_reason" : {
            "title" : "Order Cancellation Reason",
            "type" : "string",
            "description" : "Reason for order cancellation.",
            "readOnly" : true,
            "example" : "Payment declined"
          },
          "order_view_type" : {
            "$ref" : "#/components/schemas/AccountType"
          }
        },
        "description" : "Order model."
      },
      "AccountType" : {
        "title" : "Account Type",
        "type" : "string",
        "description" : "Based on the type of account / user role, different details are returned. \n\nThis value defaults and is limited to the scope of your credentials.\n\n <details>\n  <summary>**Account Types**</summary>\n\n  * `GUEST` - Details visible to the guest.\n    \n  * `PARTNER` - Details visible to the partner.\n\n  * `DISTRIBUTOR` - Details visible to the distributor.\n  \n  * `RESELLER` - Details visible to the reseller.\n  \n  * `PLATFORM` - Details visible to the platform.\n  \n  * `SUPER_ADMIN` - Details visible to the super admin.\n  \n  * `MARKET_ADMIN` - Details visible to the market admin.\n  \n  * `SUPPLIER_ADMIN` - Details visible to the supplier admin.\n  \n  * `SUPPLIER` - Details visible to the supplier.\n</details>",
        "example" : "DISTRIBUTOR",
        "deprecated" : true,
        "enum" : [ "GUEST", "PARTNER", "DISTRIBUTOR", "RESELLER", "PLATFORM", "SUPER_ADMIN", "MARKET_ADMIN", "SUPPLIER_ADMIN", "SUPPLIER" ]
      },
      "NoteOld" : {
        "title" : "Note",
        "required" : [ "note_creator", "note_date", "note_type", "note_value" ],
        "type" : "object",
        "properties" : {
          "note_value" : {
            "title" : "Note Value",
            "type" : "string",
            "description" : "Note value.",
            "example" : "Wheelchair assistance required."
          },
          "note_type" : {
            "title" : "Note Type",
            "type" : "string",
            "description" : "* `GUEST` - Note visible to the guest.\n* `PARTNER` - Note visible to the partner.\n* `SUPPLIER` - Note visible to the supplier.\n* `RESELLER` - Note visible to the reseller / supplier admin.\n* `DISTRIBUTOR` - Note visible to the distributor.\n* `INTERNAL` - Note visible to the account of the user.\n",
            "example" : "GUEST",
            "enum" : [ "GUEST", "PARTNER", "SUPPLIER", "RESELLER", "DISTRIBUTOR", "INTERNAL" ]
          },
          "note_date" : {
            "title" : "Note Date",
            "type" : "string",
            "description" : "Creation / Modification date of the note.",
            "format" : "date-time",
            "readOnly" : true
          },
          "note_creator" : {
            "title" : "Note Creator",
            "type" : "string",
            "description" : "User who created the note.",
            "readOnly" : true,
            "example" : "Andrew (Supervisor)"
          }
        },
        "description" : "Details on the note."
      },
      "Note" : {
        "title" : "Note",
        "required" : [ "note_recipients", "note_value" ],
        "type" : "object",
        "properties" : {
          "note_value" : {
            "title" : "Note Value",
            "type" : "string",
            "description" : "Note value.",
            "example" : "Wheelchair assistance required."
          },
          "note_created" : {
            "title" : "Note Date",
            "type" : "string",
            "description" : "Creation / Modification date of the note.",
            "format" : "date-time",
            "readOnly" : true,
            "deprecated" : true
          },
          "note_recipients" : {
            "title" : "Note Recipients",
            "type" : "array",
            "description" : "List of accounts that are able to view the note.",
            "items" : {
              "title" : "Note Recipient",
              "type" : "string",
              "description" : "Account type of the users receiving / being able to view the note. \n\nFor example when sending a note from the distributor to the supplier, this will indicate the recipient (supplier).\n<details>\n  <summary>**Account Types**</summary>\n  \n  * `GUEST` - Note visible to the guest.\n  \n  * `PARTNER` - Note visible to the partner.\n\n  * `SUPPLIER` - Note visible to the supplier.\n  \n  * `RESELLER` - Note visible to the reseller / supplier admin.\n  \n  * `DISTRIBUTOR` - Note visible to the distributor.\n  \n</details>\n",
              "example" : "SUPPLIER",
              "enum" : [ "GUEST", "PARTNER", "SUPPLIER", "RESELLER", "DISTRIBUTOR" ]
            }
          },
          "note_creator_account_type" : {
            "title" : "Note Creator Account Type",
            "type" : "string",
            "description" : "Account type of the user who created the note. \n\nFor example when sending a note from the distributor to the supplier, this will indicate the sender (e.g distributor).\n<details>\n  <summary>**Account Types**</summary>\n\n  * `GUEST` - Note created by the guest.\n  \n  * `PARTNER` - Note created by the partner.\n\n  * `SUPPLIER` - Note created by the supplier.\n  \n  * `DISTRIBUTOR` - Note created by the distributor.\n  \n  * `RESELLER` - Note created by the reseller / supplier admin.\n  \n  * `PLATFORM_ADMIN` - Note created by the platform-admin.\n  \n  * `SUPER_ADMIN` - Note created by the super-admin.\n\n</details>\n",
            "example" : "DISTRIBUTOR",
            "enum" : [ "GUEST", "PARTNER", "SUPPLIER", "RESELLER", "DISTRIBUTOR" ]
          },
          "note_creator_user_name" : {
            "title" : "Note Creator User Name",
            "type" : "string",
            "description" : "Name of the user that created this note.",
            "readOnly" : true,
            "example" : "Andrew"
          },
          "note_creator_user_email" : {
            "title" : "Note Creator User Email",
            "type" : "string",
            "description" : "Email of the user that created this note.",
            "readOnly" : true,
            "example" : "supervisor@prioticket.com"
          },
          "note_creator_user_role" : {
            "title" : "Note Creator User Role",
            "type" : "string",
            "description" : "Userrole (name) of the user that created this note.",
            "readOnly" : true,
            "example" : "Supervisor"
          }
        },
        "description" : "Details on the note."
      },
      "ContactClassification" : {
        "title" : "Contact Classification",
        "type" : "string",
        "description" : "Contact classification.",
        "enum" : [ "IMPORTANT", "VERY_IMPORTANT", "PROBLEMATIC", "DISABLED_PERSON", "TOP_MANAGEMENT", "STAFF", "LOYALTY_PROGRAM", "MEDIA", "FRIEND_OR_FAMILY", "RETURNING", "PERSONAL", "BUSINESS" ]
      },
      "BookingItemConfirmed" : {
        "title" : "Confirmed Booking Item Detail",
        "type" : "object",
        "description" : "Details on the confirmed booked product type.",
        "readOnly" : true,
        "allOf" : [ {
          "$ref" : "#/components/schemas/BookingItemWithPricing"
        }, {
          "required" : [ "product_type_code", "product_type_redemption_status", "product_type_transaction_id" ],
          "type" : "object",
          "properties" : {
            "product_type_code" : {
              "title" : "Product Type Code",
              "type" : "string",
              "description" : "The product code allocated by Prio to redeem products.",
              "readOnly" : true,
              "example" : "1539762088951995"
            },
            "product_type_transaction_id" : {
              "title" : "Product Type Transaction ID",
              "type" : "string",
              "description" : "Transaction ID of this product type.",
              "readOnly" : true,
              "example" : "159118380521834001"
            },
            "product_type_status" : {
              "$ref" : "#/components/schemas/StatusTypes"
            },
            "product_type_redemption_status" : {
              "$ref" : "#/components/schemas/RedemptionStatus"
            },
            "product_type_payment_status" : {
              "$ref" : "#/components/schemas/PaymentStatus"
            },
            "product_type_redemption_date_time" : {
              "title" : "Product Type Redemption Date Time",
              "type" : "string",
              "description" : "Date and time of redemption.",
              "format" : "date-time",
              "readOnly" : true
            },
            "product_type_redemption_user_name" : {
              "title" : "Product Type Redemption User Name",
              "type" : "string",
              "description" : "User name (cashier name) who performed the redemption.",
              "readOnly" : true
            },
            "product_type_redemption_user_email" : {
              "title" : "Product Type Redemption User Email",
              "type" : "string",
              "description" : "User email (cashier email) that performed the redemption.",
              "format" : "email",
              "readOnly" : true
            },
            "product_type_pass_details" : {
              "$ref" : "#/components/schemas/Pass"
            }
          }
        } ]
      },
      "OrderChannel" : {
        "title" : "Order Channel",
        "type" : "string",
        "description" : "The channel that the action is performed on.\n\n<details>\n  <summary>**Order channel**</summary>\n\n* `SPOS` - Sales Portal.\n* `PPOS` - Purchase Portal.\n \n* `DPOS` - (Legacy) Desktop Point-of-Sale.\n* `WPOS` - Web Widgets.\n* `MPOS` - Mobile Point-of-Sale.\n* `CPOS` - Cashier Point-of-Sale.\n* `SSPOS` - Self-Service Terminal.\n* `PARTNER` - API Partner.\n* `OTHER` - Other channel not mentioned above.\n</details>\n",
        "readOnly" : true,
        "example" : "PARTNER",
        "default" : "PARTNER",
        "enum" : [ "SPOS", "PPOS", "DPOS", "WPOS", "MPOS", "CPOS", "SSPOS", "PARTNER", "OTHER" ]
      },
      "OrderSource" : {
        "title" : "Order Source",
        "type" : "string",
        "description" : "The module / source that the action was performed by.\n<details>\n  <summary>**Order channel**</summary>\n\n* `SPOS` - Sales Portal.\n* `PPOS` - Purchase Portal.\n \n* `DPOS` - (Legacy) Desktop Point-of-Sale.\n* `WPOS` - Web Widgets.\n* `MPOS` - Mobile Point-of-Sale.\n* `CPOS` - Cashier Point-of-Sale.\n* `SSPOS` - Self-Service Terminal.\n* `PPAGE` - Personal Page.\n* `PARTNER` - API Partner.\n* `ACTIVITY` - Activity Overview.\n* `MANIFEST` - Event Overview.\n* `MANIFEST` - Order Overview.\n* `MANIFEST` - Guest Overview.\n* `REPORTING` - Reporting.\n* `AUTOMATION` - Trigger / Event based API.\n* `AUTOMATION` - Trigger / Event based API.\n* `OTHER` - Other source not mentioned above.\n</details>\n",
        "example" : "PARTNER",
        "enum" : [ "SPOS", "PPOS", "DPOS", "WPOS", "MPOS", "CPOS", "SSPOS", "PPAGE", "PARTNER", "ACTIVITY", "OTHER" ]
      },
      "ContactDetails" : {
        "title" : "Contact Details",
        "required" : [ "contact_created", "contact_modified" ],
        "type" : "object",
        "properties" : {
          "contact_uid" : {
            "title" : "Contact User Identifier",
            "type" : "string",
            "description" : "A unique contact identifier created by Prio. \n\nIn case this field is left blank, a new contact will be created in the system. If you pass an already existing `contact_uid`, those contact details will be  used and linked to the current/future order. In this case all other fields will be ignored.\n> Only applicable for partners using the Contacts Module (Returning guests). For regular transactions this parameter can be safely ignored.",
            "format" : "uuid",
            "example" : "f44226c0-e142-11ea-86d2-83036af9991e"
          },
          "contact_external_uid" : {
            "title" : "Contact External User Identifier",
            "type" : "string",
            "description" : "Unique external identifier of the contact.",
            "example" : "MTAwOV90ZXN0MTAwOUB0ZXN0LmNvbQ=="
          },
          "contact_version" : {
            "title" : "Contact Version",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "Contact version; every time the contact details are updated, a new version is registered.",
            "readOnly" : true,
            "example" : 2,
            "default" : 1
          },
          "contact_number" : {
            "title" : "Contact Number",
            "maxLength" : 50,
            "type" : "string",
            "description" : "Number of the contact.",
            "example" : "4573246"
          },
          "contact_type" : {
            "$ref" : "#/components/schemas/ContactType"
          },
          "contact_title" : {
            "title" : "Contact Title",
            "type" : "string",
            "description" : "Title prefix of the contact (Mister / Miss / Misses etc).",
            "example" : "Mr."
          },
          "contact_name_first" : {
            "title" : "Contact First Name",
            "maxLength" : 255,
            "type" : "string",
            "description" : "First name of the contact.",
            "example" : "John"
          },
          "contact_name_last" : {
            "title" : "Contact Last Name",
            "maxLength" : 255,
            "type" : "string",
            "description" : "Surname of the contact. If you only have the fullname, we recommend sending it as `contact_name_last` and leaving the `contact_name_first` blank.",
            "example" : "Doe"
          },
          "contact_email" : {
            "title" : "Contact Email",
            "type" : "string",
            "description" : "Email address of the contact.",
            "format" : "email",
            "example" : "Johndoe@example.com"
          },
          "contact_phone" : {
            "title" : "Contact Phone",
            "type" : "string",
            "description" : "Must be a valid E.164 spec compliant phone number.",
            "format" : "phone",
            "example" : "+14155552671"
          },
          "contact_mobile" : {
            "title" : "Contact Phone",
            "type" : "string",
            "description" : "Must be a valid E.164 spec compliant phone number.",
            "format" : "phone",
            "example" : "+14155552671"
          },
          "contact_language" : {
            "title" : "Contact Language",
            "type" : "string",
            "description" : "Language and culture code of the contact preferred language ([ISO-639-1](https://en.wikipedia.org/wiki/ISO_639-1)).",
            "example" : "NL"
          },
          "contact_nationality" : {
            "title" : "Contact Nationality",
            "type" : "string",
            "description" : "Country code of the contact ([ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1)).",
            "example" : "Dutch"
          },
          "contact_flight_number" : {
            "title" : "Contact Flight Number",
            "type" : "string",
            "description" : "Contact Flight Number.",
            "example" : "KL 445"
          },
          "contact_loyalty_number" : {
            "title" : "Contact Loyalty Number",
            "type" : "string",
            "description" : "Contact Loyalty Number.",
            "example" : "46564564564547476"
          },
          "contact_birth_place" : {
            "title" : "Contact Birth Place",
            "type" : "string",
            "description" : "Place of birth.",
            "example" : "Amsterdam"
          },
          "contact_birth_date" : {
            "title" : "Contact Birth Date",
            "type" : "string",
            "description" : "Date of birth.",
            "format" : "date"
          },
          "contact_passport" : {
            "title" : "Contact Passport",
            "type" : "string",
            "description" : "Passport details of the contact.",
            "example" : "JXXXXXXX"
          },
          "contact_gender" : {
            "title" : "Contact Gender",
            "type" : "string",
            "description" : "Gender of the contact.",
            "example" : "MALE",
            "enum" : [ "MALE", "FEMALE", "OTHER" ]
          },
          "contact_age" : {
            "title" : "Contact Age",
            "maximum" : 150,
            "type" : "integer",
            "description" : "Age of the contact.",
            "example" : 19
          },
          "contact_redacted" : {
            "title" : "Contact Redacted",
            "type" : "boolean",
            "description" : "Whether this contact redacted or de-identified sensitive data such as personally identifiable information (PII).",
            "readOnly" : true,
            "example" : false,
            "deprecated" : true,
            "default" : false
          },
          "contact_room_number" : {
            "title" : "Contact Room Number",
            "type" : "string",
            "description" : "Contact room number.",
            "example" : "523"
          },
          "contact_website" : {
            "title" : "Contact Website",
            "type" : "string",
            "description" : "Contact website.",
            "format" : "URI",
            "example" : "example.com"
          },
          "contact_company" : {
            "$ref" : "#/components/schemas/ContactCompany"
          },
          "contact_classification" : {
            "$ref" : "#/components/schemas/ContactClassification"
          },
          "contact_address" : {
            "$ref" : "#/components/schemas/AddressModel"
          },
          "contact_notes" : {
            "title" : "Contact Notes",
            "type" : "array",
            "description" : "Contact notes.",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "contact_custom_fields" : {
            "title" : "Contact Custom Fields",
            "type" : "array",
            "description" : "Freeform entry of any key-value pair.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            }
          },
          "contact_created" : {
            "title" : "Contact Created",
            "type" : "string",
            "description" : "Creation date and time of the contact.",
            "format" : "date-time",
            "readOnly" : true
          },
          "contact_modified" : {
            "title" : "Contact Modified",
            "type" : "string",
            "description" : "Last update date and time of the contact.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Information on the contact."
      },
      "ContactCompany" : {
        "title" : "Contact Company",
        "type" : "object",
        "properties" : {
          "company_name" : {
            "title" : "Company Name",
            "type" : "string",
            "description" : "Company name.",
            "example" : "Example LTD."
          },
          "company_registration_number" : {
            "title" : "Company Registration Number",
            "type" : "string",
            "description" : "Company registration number."
          },
          "company_tax_number" : {
            "title" : "Company Tax Number",
            "type" : "string",
            "description" : "Company tax number."
          }
        },
        "description" : "Contact company details."
      },
      "VoucherType" : {
        "title" : "Voucher Type",
        "type" : "string",
        "description" : "Whether this voucher can be shown on your mobile or should be printed.",
        "example" : "DIGITAL",
        "deprecated" : true,
        "enum" : [ "DIGITAL", "PHYSICAL" ]
      },
      "ContactType" : {
        "title" : "Contact Type",
        "type" : "string",
        "description" : "Type of contact.\n\nSome supplier systems do not support multiple contacts per orders. In that case we have the following policy:\n1. If set, we sent `contact_type:BOOKER`.\n2. Otherwise, if set, we sent the first `contact_type:CONTACT`.\n3. If both are not set, we sent the first contact in the array.\n\n<details>\n  <summary>**Contact Types**</summary>\n\n* `BOOKER` - Main Booker details (End-consumer). Only a single main booker is recommended. \n  \n  This is the most common type of contact, as it contains information about the person / entity who made the booking.\n  \n  > Any automated emails such as order confirmations will be sent to this contact type. \n\n* `CONTACT` - General, non-specific contact. \n\n  Only use this type if a more specific classification is unknown.\n\n* `GUEST` - Guest / End-consumer / Passenger linked to the booking.\n\n  Defining the guests per booking allows for advanced functionality such as Check-In and passenger management.\n\n* `PARTNER` - Partner details.\n* `STAFF` - General staff.\n* `CASHIER` - Cashier performing the sales.\n* `PAYMENT` - Billing / Financial contact. \n\n  > Payment emails will be sent to this contact type by default.\n\n* `AGENT` - Agent details.\n* `EMERGENCY` - Emergency contact (Guest, host, family member etc.).\n* `GUIDE` - Teacher / Instructor / Guide details.\n* `SUPPLIER` - Supplier details.\n* `VENUE` - Venue details.\n* `HOST` - Host details.\n* `COMPANY` - (Guest) company details.\n* `DELIVERY` - (Guest) Delivery / Shipping contact / address details.\n* `MANAGER` - (UPCOMING) Manager contact.\n* `SUPPORT` - (UPCOMING) Support contact.\n* `INSTRUCTOR` - (UPCOMING) Instructor contact.\n* `OTHER` - Other type of contact, not mentioned above.\n</details>",
        "example" : "GUEST",
        "default" : "CONTACT",
        "enum" : [ "BOOKER", "CONTACT", "GUEST", "PARTNER", "STAFF", "CASHIER", "PAYMENT", "AGENT", "EMERGENCY", "GUIDE", "SUPPLIER", "VENUE", "HOST", "COMPANY", "DELIVERY", "OTHER" ]
      },
      "OrderOptions" : {
        "title" : "Order Options",
        "type" : "object",
        "properties" : {
          "email_options" : {
            "$ref" : "#/components/schemas/EmailOptionsModel"
          },
          "price_on_voucher" : {
            "title" : "Price on Voucher",
            "type" : "boolean",
            "description" : "Show price on voucher.",
            "example" : true,
            "deprecated" : true,
            "default" : true
          }
        },
        "description" : "Additional order options such as email delivery."
      },
      "EmailOptionsModel" : {
        "title" : "Email options",
        "required" : [ "email_types" ],
        "type" : "object",
        "properties" : {
          "email_types" : {
            "$ref" : "#/components/schemas/EmailTypes"
          }
        },
        "description" : "Email settings."
      },
      "EmailTypes" : {
        "title" : "Email Types",
        "type" : "object",
        "properties" : {
          "send_tickets" : {
            "title" : "Send Tickets",
            "type" : "boolean",
            "description" : "Send all vouchers to the specified email recipients.",
            "default" : false
          },
          "send_receipt" : {
            "title" : "Send Receipt",
            "type" : "boolean",
            "description" : "Send the receipt to the specified email recipients.",
            "deprecated" : true,
            "default" : false
          },
          "send_marketing" : {
            "title" : "Send Marketing",
            "type" : "boolean",
            "description" : "Send marketing to the specified email recipients.",
            "deprecated" : true
          },
          "send_offers" : {
            "title" : "Send Offers",
            "type" : "boolean",
            "description" : "Send offers to the specified email recipients.",
            "deprecated" : true
          },
          "send_notification" : {
            "title" : "Send Notifications",
            "type" : "boolean",
            "description" : "Send notifications to the specified email recipients.",
            "deprecated" : true
          }
        },
        "description" : "Defines which emails will be sent by our system. \n\nIf you do not want our system to sent emails, please ignore this setting.\n\n> All emails will be sent to the `contact_type:BOOKER`"
      },
      "ProductCatalogueStatus" : {
        "title" : "Product Catalogue Status",
        "type" : "string",
        "description" : "[FILTER] on Product Catalogue Status (`product_catalogue_status`)..\n<details>\n  <summary>**Product Catalogue Statuses**</summary>\n\nProduct Catalogue Status:\n* `PENDING` - Product is pending to be assigned to a catalogue.\n* `INACTIVE` - Product is assigned and inactive on the catalogue.\n* `ACTIVE` - Product is assigned and active on the catalogue.\n</details>",
        "example" : "ACTIVE",
        "enum" : [ "PENDING", "INACTIVE", "ACTIVE" ]
      },
      "ProductStatus" : {
        "title" : "Product Status",
        "type" : "string",
        "description" : "Status of the product.\n> A product can only be sold if the status is `ACTIVE` or `TEST`.\n\n<details>\n  <summary>**Product Statuses**</summary>\n\nProduct Status:\n* `DRAFT` - Product is a draft. \n\n  The product is a draft.\n\n* `REVIEW` - Product is in review. \n\n  The product is in review.\n \n* `ACTIVE` - Product is active.\n\n  The product is fully configured and ready to sell using any linked catalogue (See Product Catalogue Status).\n\n* `EXPIRED` - Product is expired.\n\n  The product configured availability expired and this product is no longer available for sales. \n\n* `ARCHIVED` - Product is archived. \n\n  The product is archived. It can return to `ACTIVE` by unarchiving it.\n\n* `INACTIVE` - Product is inactive.\n\n  The product is set inactive. It should not be visible on any channel and cannot be sold until set to `ACTIVE` again.\n\n* `TEST` - Product is in test.\n\n  The product is fully configured and ready to sell. Similar to `ACTIVE`, but only meant for internal testing purposes. This product should not be exposed to end-consumers.\n\n* `UNAVAILABLE` - Product is unavailable.\n\n  The product is automatically set as unavailable due to an error or misconfiguration. This product requires attention.\n\n* `SUSPENDED` - Product is suspended.\n\n  The product is suspended due to Terms of Service violation.\n\n* `DELETED` - Product is deleted.\n\n  The product is permanently deleted.\n  \n* `PREVIEW` - Product is in preview.\n    \n  The product is visible but cannot be booked yet. Generally used during pre-sales. This state is automatically set if the product is `ACTIVE` but did not yet reach the `product_booking_start_date`.\n\n</details>",
        "example" : "ACTIVE",
        "deprecated" : true,
        "enum" : [ "DRAFT", "REVIEW", "ACTIVE", "EXPIRED", "ARCHIVED", "INACTIVE", "TEST", "UNAVAILABLE", "SUSPENDED", "DELETED", "PREVIEW" ]
      },
      "EmailRecipient" : {
        "title" : "Email Recipient",
        "required" : [ "recipients_address" ],
        "type" : "object",
        "properties" : {
          "recipients_name" : {
            "title" : "Recipient Name",
            "type" : "string",
            "description" : "Recipient name.",
            "example" : "John Doe"
          },
          "recipients_address" : {
            "title" : "Recipient Address",
            "type" : "string",
            "description" : "Recipient address.",
            "format" : "email",
            "example" : "example@prioticket.com"
          }
        },
        "description" : "Single email recipient."
      },
      "AddressModel" : {
        "title" : "Address Model",
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Address ID",
            "type" : "string",
            "description" : "Unique address identifier.",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "f44226c0-e142-11ea-86d2-83036af9991e",
            "deprecated" : true
          },
          "name" : {
            "title" : "Address Name",
            "type" : "string",
            "description" : "Name / Label of this address / addressee.",
            "example" : "Start of the Tour / My house / Office / John Doe"
          },
          "street" : {
            "title" : "Address Street",
            "type" : "string",
            "description" : "Address line 1 / Street.",
            "example" : "Amstel 1"
          },
          "addition" : {
            "title" : "Address Addition",
            "type" : "string",
            "description" : "Additional address line 2.",
            "example" : "Apt B1"
          },
          "city" : {
            "title" : "Address City",
            "type" : "string",
            "description" : "Town / City / Village.",
            "example" : "Amsterdam"
          },
          "postal_code" : {
            "title" : "Address Postal Code",
            "type" : "string",
            "description" : "Address postal code.",
            "example" : "1011 PN"
          },
          "region" : {
            "title" : "Address Region",
            "type" : "string",
            "description" : "State / Province / Region.",
            "example" : "Noord-Holland"
          },
          "country" : {
            "title" : "Address Country",
            "type" : "string",
            "description" : "Address country.",
            "example" : "The Netherlands"
          },
          "country_code" : {
            "title" : "Address Country Code",
            "type" : "string",
            "description" : "Returns country code of the product ( [ISO-3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))",
            "example" : "NL"
          },
          "place_id" : {
            "title" : "Address Google Place ID",
            "type" : "string",
            "description" : "Google Place ID",
            "example" : "ChIJrTLr-GyuEmsRBfy61i59si0"
          },
          "latitude" : {
            "title" : "Address Latitude",
            "type" : "string",
            "description" : "Address latitude.",
            "example" : "52.3785323"
          },
          "longitude" : {
            "title" : "Address Longitude",
            "type" : "string",
            "description" : "Address longitude.",
            "example" : "4.893942"
          },
          "notes" : {
            "title" : "Address Note",
            "type" : "string",
            "description" : "Address note.",
            "example" : "It's on the fourth floor"
          }
        },
        "description" : "Address details."
      },
      "PaymentListResponse" : {
        "title" : "Payment List Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/PaymentListResponseData"
          }
        },
        "description" : "Payment list response."
      },
      "PaymentListResponseData" : {
        "title" : "Payment List Response Data",
        "description" : "Payment list response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "required" : [ "items" ],
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Payments",
              "type" : "array",
              "description" : "A list of all payments.",
              "items" : {
                "$ref" : "#/components/schemas/PaymentDetails"
              }
            }
          }
        } ]
      },
      "PaymentDetailResponse" : {
        "title" : "Payment Detail Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/PaymentDetailResponseData"
          }
        },
        "description" : "Payment detail Response."
      },
      "PaymentDetailResponseData" : {
        "title" : "Payment Detail Response Data",
        "required" : [ "kind", "payment" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "payment" : {
            "$ref" : "#/components/schemas/PaymentDetails"
          }
        },
        "description" : "Payment detail response data."
      },
      "ContactListResponse" : {
        "title" : "Contact List Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/ContactListResponseData"
          }
        },
        "description" : "Contact list response."
      },
      "ContactDetailResponse" : {
        "title" : "Contact Detail Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/ContactDetailResponseData"
          }
        },
        "description" : "Contact detail response."
      },
      "ContactDetailResponseData" : {
        "title" : "Contact Detail Response Data",
        "required" : [ "items", "kind" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "items" : {
            "title" : "Contact Revisions",
            "type" : "array",
            "description" : "A list of all contact revisions. \n\nIf `include_versions:false`, only a single record will be returned.",
            "items" : {
              "$ref" : "#/components/schemas/ContactDetails"
            }
          }
        },
        "description" : "Contact detail response data."
      },
      "ContactListResponseData" : {
        "title" : "Contact List Response Data",
        "description" : "Contact list response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "required" : [ "items" ],
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Contacts",
              "type" : "array",
              "description" : "A list of all contacts.",
              "items" : {
                "$ref" : "#/components/schemas/ContactDetails"
              }
            }
          }
        } ]
      },
      "OrderListResponse" : {
        "title" : "Order List Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/OrderListResponseData"
          }
        },
        "description" : "Order list response."
      },
      "OrderListResponseData" : {
        "title" : "Order List Response Data",
        "description" : "Order list response data.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReservedPaginationData"
        }, {
          "required" : [ "items" ],
          "type" : "object",
          "properties" : {
            "items" : {
              "title" : "Orders",
              "type" : "array",
              "description" : "A list of all orders.",
              "items" : {
                "$ref" : "#/components/schemas/ConfirmedOrderModel"
              }
            }
          }
        } ]
      },
      "ConfirmedOrderModel" : {
        "title" : "Confirmed Order",
        "description" : "Details on the confirmed order.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/OrderModel"
        }, {
          "required" : [ "order_bookings", "order_pricing" ],
          "type" : "object",
          "properties" : {
            "order_bookings" : {
              "title" : "Order Bookings",
              "type" : "array",
              "description" : "Details on the bookings made in this order.",
              "items" : {
                "$ref" : "#/components/schemas/ConfirmedBooking"
              }
            }
          }
        } ]
      },
      "CreateOrderModel" : {
        "title" : "Create Order Model",
        "type" : "object",
        "description" : "Create order model.",
        "writeOnly" : true,
        "allOf" : [ {
          "$ref" : "#/components/schemas/OrderModel"
        }, {
          "required" : [ "order_bookings" ],
          "type" : "object",
          "properties" : {
            "order_bookings" : {
              "title" : "Order Bookings",
              "type" : "array",
              "description" : "Details of the bookings to be made.",
              "items" : {
                "$ref" : "#/components/schemas/BookingOption"
              }
            }
          }
        } ]
      },
      "CommonBookingOption" : {
        "title" : "Common Booking Option",
        "required" : [ "booking_option_type" ],
        "type" : "object",
        "properties" : {
          "booking_option_type" : {
            "title" : "Booking Option Type",
            "type" : "string",
            "description" : "Used to aid in serialization, deserialization, and validation.\n\nMust be one of the following values:\n  * `CONFIRM_RESERVATION`\n  * `DIRECT_BOOKING`\n  * `UPDATE_BOOKING`\n  * `UPDATE_BOOKING_NOTES`\n  * `UPDATE_ACCOUNT`",
            "example" : "CONFIRM_RESERVATION"
          }
        },
        "description" : "Common booking option."
      },
      "BookingOption" : {
        "title" : "Booking Option",
        "type" : "object",
        "description" : "Depending on the availability and the reservation status one of several different booking options should be used.\n\nThis API is called to book / confirm product(s) and get a barcode / QR-code in response.\n\nThere are 2 different booking options:\n\n**Direct Booking** \n\n  + Direct booking of a product without availability (`product_availability:false`) and no traveldate (`product_traveldate_required:false`) (non-dated, no capacity ticket)\n  \n  + Direct booking of a product without availability (`product_availability:false`) and required traveldate (`product_traveldate_required:true`) (dated, unlimited capacity ticket)\n  \n  + Direct booking of a product with availability (`product_availability:true`) and with or without capacity (`product_capacity:true/false`).\n  \n**Confirm Reservation / Checkout Cart**\n\n  + Booking of product(s) with a `reservation_reference` (Confirmation of an active reservation (Confirm and Order)). This can be any product with any configuration.\n\n> Please note that multiple types of **Direct Booking** can be made at once, but only a single **Confirm Reservation** at a time is supported. Would you wish to confirm multiple reserved products at once, please put multiple bookings in a single reservation (Cart). You can not mix different booking options (**Direct Booking** & **Confirm Reservation**) in the same request.\n  Therefore only multiple entries of the **Direct Booking** option is being supported.\n  \n> In case multiple products are to be booked, if any of them are unavailable, the whole order will be declined.",
        "discriminator" : {
          "propertyName" : "booking_option_type",
          "mapping" : {
            "CONFIRM_RESERVATION" : "#/components/schemas/ConfirmReservation",
            "DIRECT_BOOKING" : "#/components/schemas/DirectBookingOption"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ConfirmReservation"
        }, {
          "$ref" : "#/components/schemas/DirectBookingOption"
        } ]
      },
      "UpdateBookingOption" : {
        "title" : "Update Booking Option",
        "type" : "object",
        "description" : "Update booking option.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DirectBookingOption"
        }, {
          "type" : "object",
          "properties" : {
            "booking_reference" : {
              "title" : "Booking Reference",
              "type" : "string",
              "description" : "Unique identifier for the booking that you would like to amend. If you leave this value empty, a new booking will be added to the existing order.",
              "example" : "BOOKING_REFERENCE_123"
            }
          }
        } ]
      },
      "DirectBookingOption" : {
        "title" : "Direct Booking Option",
        "type" : "object",
        "description" : "Direct booking option.",
        "writeOnly" : true,
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonBookingOption"
        }, {
          "$ref" : "#/components/schemas/DirectBookingOptionModel"
        } ]
      },
      "DirectBookingOptionModel" : {
        "title" : "Direct Booking Option Model",
        "type" : "object",
        "description" : "Direct booking option model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProductBookingModel"
        }, {
          "required" : [ "booking_option_type", "product_type_details" ],
          "type" : "object",
          "properties" : {
            "product_type_details" : {
              "title" : "Product Type Booking Details",
              "type" : "array",
              "description" : "A list specifying the booking quantity per product type.",
              "items" : {
                "$ref" : "#/components/schemas/BookingItemWithPricing"
              }
            },
            "booking_option_type" : {
              "title" : "Booking Option Type",
              "type" : "string",
              "description" : "Used to aid in serialization, deserialization, and validation.\nMust be one of the following values:\n  * `CONFIRM_RESERVATION`\n  * `DIRECT_BOOKING`\n  * `UPDATE_BOOKING`\n  * `UPDATE_BOOKING_NOTES`\n  * `UPDATE_ACCOUNT`\n",
              "example" : "DIRECT_BOOKING",
              "default" : "DIRECT_BOOKING"
            }
          }
        } ]
      },
      "ProductServiceType" : {
        "title" : "Product Service Type",
        "type" : "string",
        "description" : "Type of service this product offers.",
        "readOnly" : true,
        "example" : "ATTRACTION",
        "deprecated" : true,
        "enum" : [ "ATTRACTION", "EVENT", "SEATING", "RIDE", "DINING", "FOOD", "DELIVERY", "MOBILITY", "ITINERARY", "MERCHANDISE", "FLIGHT", "HOTEL", "TOURS", "UNSPECIFIED" ]
      },
      "BookingOptionType" : {
        "title" : "Booking Option Type",
        "type" : "string",
        "description" : "Used to aid in serialization, deserialization, and validation.",
        "enum" : [ "DIRECT_BOOKING", "UPDATE_BOOKING", "CONFIRM_RESERVATION" ]
      },
      "CreateOrderRequest" : {
        "title" : "Create Order Request",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/CreateOrderRequestData"
          }
        },
        "description" : "Create order request model."
      },
      "CreateWebhookRequest" : {
        "title" : "Create Webhook Request",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/CreateWebhookRequestData"
          }
        },
        "description" : "Create webhook request model."
      },
      "CreateWebhookRequestData" : {
        "title" : "Create Webhook Request Data",
        "required" : [ "kind", "webhook" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "webhook" : {
            "$ref" : "#/components/schemas/Webhook"
          }
        },
        "description" : "Create webhook request data model."
      },
      "CreateWebhookResponse" : {
        "title" : "Create Webhook Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/CreateWebhookResponseData"
          }
        },
        "description" : "Create webhook response model."
      },
      "CreateWebhookResponseData" : {
        "title" : "Create Webhook Response Data",
        "required" : [ "kind", "webhook" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "webhook" : {
            "$ref" : "#/components/schemas/Webhook"
          }
        },
        "description" : "Create webhook response data model."
      },
      "CreatePaymentRequest" : {
        "title" : "Create Payment Request",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/CreatePaymentRequestData"
          }
        },
        "description" : "Create payment request model."
      },
      "CreatePaymentRequestData" : {
        "title" : "Create Payment Request Data",
        "required" : [ "kind", "payment" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "payment" : {
            "$ref" : "#/components/schemas/PaymentRequestType"
          }
        },
        "description" : "Create payment request data model."
      },
      "CreatePaymentResponse" : {
        "title" : "Create Payment Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/CreatePaymentResponseData"
          }
        },
        "description" : "Create payment response model."
      },
      "CreatePaymentResponseData" : {
        "title" : "Create Payment Response Data",
        "required" : [ "kind", "payment" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "payment" : {
            "$ref" : "#/components/schemas/MakePaymentResponse"
          }
        },
        "description" : "Create payment response data model."
      },
      "SubmitPaymentDetailsResponse" : {
        "title" : "Submit Payment Details Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/SubmitPaymentDetailsResponseData"
          }
        },
        "description" : "Submit payment details response model."
      },
      "SubmitPaymentDetailsResponseData" : {
        "title" : "Submit Payment Details Response Data",
        "required" : [ "kind", "payment" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "payment" : {
            "$ref" : "#/components/schemas/AdyenDropInPaymentResponse"
          }
        },
        "description" : "Submit payment details response data model."
      },
      "PaymentConfigResponse" : {
        "title" : "Payment Config Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/PaymentConfigResponseData"
          }
        },
        "description" : "Payment config response model."
      },
      "PaymentConfigResponseData" : {
        "title" : "Payment Config Response Data",
        "required" : [ "kind", "payment_config" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "payment_config" : {
            "$ref" : "#/components/schemas/PaymentConfig"
          }
        },
        "description" : "Payment config response data model."
      },
      "PaymentDetailsResponse" : {
        "title" : "Payment Details Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/PaymentDetailsResponseData"
          }
        },
        "description" : "Payment details response model."
      },
      "PaymentDetailsResponseData" : {
        "title" : "Payment Details Response Data",
        "required" : [ "kind", "payment" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "payment" : {
            "$ref" : "#/components/schemas/PaymentDetails"
          }
        },
        "description" : "Payment details response data model."
      },
      "CreateNotificationRequest" : {
        "title" : "Create Notification Request",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/CreateNotificationRequestData"
          }
        },
        "description" : "Create notification request model."
      },
      "CreateNotificationRequestData" : {
        "title" : "Create Notification Request Data",
        "required" : [ "kind", "notification" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "notification" : {
            "$ref" : "#/components/schemas/WebhookNotification"
          }
        },
        "description" : "Create notification request data model."
      },
      "CreateOrderRequestData" : {
        "title" : "Create Order Request Data",
        "required" : [ "kind", "order" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "order" : {
            "$ref" : "#/components/schemas/CreateOrderModel"
          }
        },
        "description" : "Create order request data model."
      },
      "BookingItem" : {
        "title" : "Booking Item",
        "required" : [ "product_type", "product_type_count", "product_type_id", "product_type_pax" ],
        "type" : "object",
        "properties" : {
          "product_type" : {
            "$ref" : "#/components/schemas/ProductType"
          },
          "product_type_class" : {
            "$ref" : "#/components/schemas/ProductTypeClass"
          },
          "product_type_id" : {
            "title" : "Product Type ID",
            "type" : "string",
            "description" : "In case of more complex product configurations e.g. multiple ambiguous product types, the preferred option must be specified using the ID.",
            "example" : "PRODUCT_TYPE_ID_123"
          },
          "product_type_label" : {
            "title" : "Product Type Label",
            "type" : "string",
            "description" : "(Translatable) The product type label.",
            "readOnly" : true,
            "example" : "Adult"
          },
          "product_type_age_from" : {
            "title" : "Product Type Age From",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The starting age for age group.",
            "readOnly" : true,
            "example" : 18
          },
          "product_type_age_to" : {
            "title" : "Product Type Age To",
            "multipleOf" : 1,
            "type" : "integer",
            "description" : "The ending age for age group.  If both `product_type_age_from` and `product_type_age_to` are empty no age-restrictions should be shown. If only `product_type_age_to` is empty, then it is advised to show the age-restriction as e.g. \"22+\".\n",
            "readOnly" : true,
            "example" : 65
          },
          "product_type_count" : {
            "title" : "Product Type Count",
            "multipleOf" : 1,
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The quantity being booked for the specified product type.\n\nPlease note that the following structures are deemed semantically the same.\n```\n\"product_type_details\":[\n  {\n     \"product_type_id\":\"13725\",\n     \"product_type_count\":\"2\"\n  }\n]\n\nand\n\n\"product_type_details\":[\n  {                     \n     \"product_type_id\":\"13725\",   \n     \"product_type_count\":1   \n  },\n  {       \n     \"product_type_id\":\"13725\",    \n     \"product_type_count\":1     \n  }\n]\n```\nWe allow this 'alternative format' for 'ease-of-use'. Please note that in the order response we have no other option than to 'split' the product types, otherwise, we would not be able to send multiple codes (single `product_type_code` per pax/piece) in the response.\n",
            "example" : 1
          },
          "product_type_pax" : {
            "title" : "Product Type Pax",
            "minimum" : 0,
            "type" : "integer",
            "description" : "Number of persons to be counted in the reporting for the selected product type quantity.",
            "readOnly" : true,
            "example" : 1
          },
          "product_type_capacity" : {
            "title" : "Product Type Capacity",
            "minimum" : 0,
            "type" : "integer",
            "description" : "The capacity count to be blocked in the system for the selected availability slot.\n\nFor example:\n\nIf a single table with six seats is booked by two persons, the setup would be as follows:\n\n  ```\n  \"product_type_count\": 1,\n  \"product_type_pax\": 2,\n  \"product_type_capacity\": 6\n  ```\n",
            "readOnly" : true,
            "example" : 1
          },
          "product_type_spots" : {
            "title" : "Product Type Spots",
            "minItems" : 1,
            "type" : "array",
            "description" : "Product type spots.",
            "items" : {
              "$ref" : "#/components/schemas/Spot"
            }
          },
          "product_type_code" : {
            "title" : "Product Type Code",
            "type" : "string",
            "description" : "The product code allocated by Prio to redeem products.",
            "example" : "1539762088951995"
          }
        },
        "description" : "Reference to the specific type / configuration of the product."
      },
      "BookingItemWithPricing" : {
        "title" : "Regular Booking Item",
        "type" : "object",
        "description" : "Regular booking item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BookingItem"
        }, {
          "type" : "object",
          "properties" : {
            "product_type_pricing" : {
              "$ref" : "#/components/schemas/Pricing"
            }
          }
        } ]
      },
      "BookingExtraOptions" : {
        "title" : "Booking Extra Options",
        "required" : [ "option_id" ],
        "type" : "object",
        "properties" : {
          "option_id" : {
            "title" : "Option ID",
            "type" : "string",
            "description" : "Option ID.",
            "example" : "1118"
          },
          "option_count_visible" : {
            "title" : "Option Count Visible",
            "type" : "boolean",
            "description" : "Whether the selected quantity should be visible in the cart or shown as combined single price.",
            "example" : true
          },
          "option_discount_applicable" : {
            "title" : "Option Discount Applicable",
            "type" : "boolean",
            "description" : "Whether any cart or promotional discounts apply on this option.",
            "example" : false
          },
          "option_values" : {
            "title" : "Option Values",
            "type" : "array",
            "description" : "Option values.",
            "items" : {
              "$ref" : "#/components/schemas/BookingExtraOptionDetails"
            }
          }
        },
        "description" : "The product options booked. In case any of the booked product options are listed as `option_mandatory:true` you are required to fill in this field.\n\nIf you book `product_options` which are priced based on product type (`option_price_type:PRODUCT_TYPE`) then all booked options will return with their actual prices.\n",
        "deprecated" : true
      },
      "BookingExtraOptionDetails" : {
        "title" : "Booking Extra Option Details",
        "type" : "object",
        "description" : "Booking extra option details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExtraOptionValue"
        }, {
          "required" : [ "value_count" ],
          "type" : "object",
          "properties" : {
            "value_discount_price" : {
              "title" : "Value Discount Price",
              "type" : "string",
              "description" : "Optionally returned value_discount_price if discount apply on option value.",
              "readOnly" : true,
              "example" : "6.00"
            },
            "value_count" : {
              "title" : "Value Count",
              "maximum" : 500,
              "minimum" : 0,
              "type" : "integer",
              "description" : "Value count.",
              "example" : 2
            }
          }
        } ]
      },
      "BookingStatusTypes" : {
        "title" : "Booking Status Types",
        "type" : "string",
        "description" : "Status of the booking.",
        "readOnly" : true,
        "example" : "BOOKING_RESERVED",
        "enum" : [ "BOOKING_RESERVED", "BOOKING_RESERVATION_CANCELLED", "BOOKING_RESERVATION_EXPIRED", "BOOKING_CONFIRMED", "BOOKING_UPDATED", "BOOKING_CANCELLED", "BOOKING_PENDING_SUPPLIER", "BOOKING_PENDING_GUEST", "BOOKING_PENDING_DISTRIBUTOR", "BOOKING_FAILED", "BOOKING_PROCESSING", "BOOKING_PROCESSING_CONFIRMATION", "BOOKING_PROCESSING_CANCELLATION" ]
      },
      "StatusTypes" : {
        "title" : "Status Types",
        "type" : "string",
        "description" : "Status of the order / booking / transaction.",
        "readOnly" : true,
        "example" : "CONFIRMED",
        "enum" : [ "RESERVED", "CONFIRMED", "CANCELLED", "DELETED", "ARCHIVED", "FAILED" ]
      },
      "OrderStatusTypes" : {
        "title" : "Order Status Types",
        "type" : "string",
        "description" : "(Deprecated) Status of the order.\n<details>\n  <summary>**Order Status**</summary>\n\n  * `ORDER_CONFIRMED` - Order confirmed.\n  * `ORDER_CANCELLED` - Order cancelled.\n  * `ORDER_PENDING` - Order is pending, awaiting action, voucher codes will not be provided directly, instead a webhook call will be initiated once the status changes.\n</details>",
        "readOnly" : true,
        "example" : "ORDER_CONFIRMED",
        "deprecated" : true,
        "enum" : [ "ORDER_CONFIRMED", "ORDER_UPDATED", "ORDER_CANCELLED", "ORDER_REVIEW", "ORDER_PENDING", "ORDER_FAILED" ]
      },
      "OrderDetailResponse" : {
        "title" : "Order Detail Response",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/OrderDetailResponseData"
          }
        },
        "description" : "Order detail response."
      },
      "OrderDetailResponseData" : {
        "title" : "Order Detail Response Data",
        "required" : [ "kind", "order" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "order" : {
            "$ref" : "#/components/schemas/ConfirmedOrderModel"
          }
        },
        "description" : "Order detail response data model."
      },
      "UpdateOrderRequest" : {
        "title" : "Update Order Request",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/UpdateOrderRequestData"
          }
        },
        "description" : "Request for updating / amending an existing order."
      },
      "UpdateOrderRequestData" : {
        "title" : "Update Order Request Data",
        "required" : [ "kind", "order" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "order" : {
            "$ref" : "#/components/schemas/UpdateOrderModel"
          }
        },
        "description" : "Update order request data model."
      },
      "UpdateContactRequest" : {
        "title" : "Update Contact Request",
        "required" : [ "api_version", "data" ],
        "type" : "object",
        "properties" : {
          "api_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "data" : {
            "$ref" : "#/components/schemas/UpdateContactRequestData"
          }
        },
        "description" : "Request for updating / amending an existing contact."
      },
      "UpdateContactRequestData" : {
        "title" : "Update Contact Request Data",
        "required" : [ "contact", "kind" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/Kind"
          },
          "contact" : {
            "$ref" : "#/components/schemas/ContactDetails"
          }
        },
        "description" : "Update contact request data model."
      },
      "UpdateOrderModel" : {
        "title" : "Update Order Model",
        "type" : "object",
        "description" : "Make sure that you provide the complete top-level order object and that all original fields with either the current or amended values (e.g. `order_distributor_id`, `order_external_reference`, all `order_contacts` etc) are sent,  missing (optional) fields will be removed from our records.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/OrderModel"
        }, {
          "type" : "object",
          "properties" : {
            "order_bookings" : {
              "title" : "Order Bookings",
              "type" : "array",
              "description" : "**(ADVANCED)** Only include the bookings you would like to amend. \n> Do not use this functionality without prior consent, unexpected behaviour can occur.",
              "items" : {
                "$ref" : "#/components/schemas/UpdateBookingOption"
              }
            }
          }
        } ]
      },
      "ConfirmedBooking" : {
        "title" : "Confirmed Booking",
        "description" : "Details on a single confirmed booking which is part of an order.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProductBookingModel"
        }, {
          "required" : [ "booking_pricing", "booking_reference", "product_code_settings" ],
          "type" : "object",
          "properties" : {
            "product_code" : {
              "title" : "Product Code",
              "type" : "string",
              "description" : "The product code. More details can be found on `product_code_settings`.",
              "example" : "1539762088951995"
            },
            "product_code_settings" : {
              "$ref" : "#/components/schemas/ProductCodeSettings"
            },
            "product_type_details" : {
              "title" : "Confirmed Booking Product Type Details",
              "type" : "array",
              "description" : "A list of details on the confirmed booked product types.",
              "items" : {
                "$ref" : "#/components/schemas/BookingItemConfirmed"
              }
            },
            "product_combi_details" : {
              "title" : "Confirmed Combi Bookings",
              "type" : "array",
              "description" : "A list of the confirmed combi-products.",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/ConfirmedSubBooking"
              }
            },
            "product_bundle_details" : {
              "title" : "Confirmed Bundle Bookings",
              "type" : "array",
              "description" : "A list of the confirmed sub-products.",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/ConfirmedSubBooking"
              }
            },
            "product_cancellation_policies" : {
              "title" : "Product Cancellation Policies",
              "type" : "array",
              "description" : "Sometimes a product has a cancellation fee. In that case the order amount might not be refunded in full. If no cancellation policies are set and `product_cancellation_allowed:true` then you can always cancel products until they are redeemed.",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/CancellationPolicy"
              }
            },
            "booking_reference" : {
              "title" : "Booking Reference",
              "type" : "string",
              "description" : "Unique identifier for the booking assigned by Prio.",
              "readOnly" : true,
              "example" : "BOOKING_REFERENCE_123"
            },
            "booking_supplier_reference" : {
              "title" : "Booking Supplier Reference",
              "type" : "string",
              "description" : "Unique identifier for booking assigned by the supplier system. Only applicable if `product_third_party:true`.",
              "readOnly" : true,
              "example" : "BOOKING_SUPPLIER_REFERENCE_123"
            }
          }
        } ]
      },
      "ConfirmedSubBooking" : {
        "title" : "Confirmed Sub Booking",
        "type" : "object",
        "description" : "Details on the confirmed sub-product.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProductSubDetail"
        }, {
          "required" : [ "product_code", "product_code_settings", "product_type_details" ],
          "type" : "object",
          "properties" : {
            "product_code" : {
              "title" : "Product Code",
              "type" : "string",
              "description" : "The product code. More details can be found on `product_code_settings`.",
              "readOnly" : true,
              "example" : "1539762088951995"
            },
            "product_code_settings" : {
              "$ref" : "#/components/schemas/ProductCodeSettings"
            },
            "product_type_details" : {
              "title" : "Confirmed Combi Booking Details",
              "type" : "array",
              "description" : "A list of the confirmed booked combi-product types.",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/BookingItemConfirmed"
              }
            },
            "booking_supplier_reference" : {
              "title" : "Booking Supplier Reference",
              "type" : "string",
              "description" : "Unique identifier for booking assigned by supplier system. Only applicable if `product_third_party:true`.",
              "readOnly" : true,
              "example" : "BOOKING_SUPPLIER_REFERENCE_123"
            }
          }
        } ]
      },
      "TotalItems" : {
        "title" : "Total Items",
        "maximum" : 500,
        "minimum" : 0,
        "type" : "integer",
        "description" : "The total number of items available in this set. For example, if a user has 100 blog posts, the response may only contain 10 items, but the `total_items` would be 100.",
        "example" : 10
      },
      "ExtraOptionValue" : {
        "title" : "Extra Option Value",
        "required" : [ "value_id" ],
        "type" : "object",
        "properties" : {
          "value_id" : {
            "title" : "Value ID",
            "type" : "string",
            "description" : "Value ID.",
            "example" : "4921"
          },
          "value_name" : {
            "title" : "Value Name",
            "type" : "string",
            "description" : "(Translatable) Value name.",
            "readOnly" : true,
            "example" : "Wine"
          },
          "value_price" : {
            "title" : "Value Price",
            "type" : "string",
            "description" : "The price of this value. In case `option_price_type:PRODUCT_TYPE` then this field will be undefined on `product_options` level.",
            "readOnly" : true,
            "example" : "8.00"
          },
          "value_percentage" : {
            "title" : "Value Percentage",
            "type" : "string",
            "description" : "Optionally returned if `value_price` is percentage based.",
            "readOnly" : true,
            "example" : "20"
          },
          "value_price_tax_id" : {
            "title" : "Value Price Tax ID",
            "type" : "string",
            "description" : "Tax ID for this product option value. Tax information can be retrieved from the Tax API.",
            "readOnly" : true,
            "example" : "TAX_ID_123"
          },
          "value_price_tax_amount" : {
            "title" : "Value Price Tax Amount",
            "type" : "string",
            "description" : "Amount of tax applied for this product option value. Additional tax information can be retrieved from the Tax API.",
            "readOnly" : true,
            "example" : "0.65"
          },
          "value_product_type_id" : {
            "title" : "Value Product Type ID",
            "type" : "string",
            "description" : "Returned in case this value / option is only applicable to a specific product type (`option_price_type:PRODUCT_TYPE`).",
            "readOnly" : true,
            "example" : "ADULT_123"
          }
        },
        "description" : "Extra option value."
      },
      "ExtraOptionValueDetails" : {
        "title" : "Extra Option Value Detail",
        "type" : "object",
        "description" : "Extra option value detail.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExtraOptionValue"
        }, {
          "type" : "object",
          "properties" : {
            "value_quantity_type" : {
              "title" : "Value Quantity Type",
              "type" : "string",
              "description" : "Whether the quantity limitations apply on the booking or is based on the `product_type_count`.",
              "deprecated" : true,
              "enum" : [ "BOOKING", "PIECES" ]
            },
            "value_quantity_min" : {
              "title" : "Value Quantity Min",
              "type" : "integer",
              "description" : "Minimum quantity required for this value.",
              "readOnly" : true,
              "example" : 1
            },
            "value_quantity_max" : {
              "title" : "Value Quantity Max",
              "type" : "integer",
              "description" : "Maximum quantity allowed for this value, can never exceed `option_quantity_max'.",
              "readOnly" : true,
              "example" : 5
            }
          }
        } ]
      },
      "SettlementType" : {
        "title" : "Settlement Type",
        "type" : "string",
        "description" : "Settlement method for the guest payment. \n> Not applicable to B2B resellers / purchases (Indirect sales / `SettlementType:EXTERNAL`).\n\n<details>\n  <summary>**Settlement Types**</summary>\n\n * `DIRECT` (string) - Payment is settled directly using the Make Payment APIs or a supported Direct Payment method. \n \n    Prior to confirming the order, the payment details must be set using the Make Payment APIs, otherwise you are unable to proceed.\n * `VENUE` (string) - Payment is settled at the venue or host. Only applicable for direct sales.\n * `EXTERNAL` (string) - Payment is settled outside the API environment. Applicable to most B2B resellers that handle guest payment using their own payment service provider (Indirect sales).\n * `INVOICE` (string) - Payment is settled by a partner (B2B) after issuing an invoice.\n</details>",
        "example" : "EXTERNAL",
        "default" : "EXTERNAL",
        "enum" : [ "DIRECT", "VENUE", "EXTERNAL", "INVOICE" ]
      },
      "VoucherReleaseType" : {
        "title" : "Voucher Release Type",
        "type" : "string",
        "description" : "Requirement on when the voucher code will be released.\n> Any additional requirement besides `ORDER_CONFIRMATION` will indicate that you might not receive the voucher codes directly upon \"Create Booking\".\n\nVoucher Release Types:\n * `ORDER_CONFIRMATION` (string) - The order must be confirmed before the vouchers are released.\n \n    This is the most common scenario and in case no other requirements are set the voucher codes can be expected directly upon booking confirmation.\n * `PAYMENT_CONFIRMATION` (string) - The order must be paid before the vouchers are released.\n \n    In case payment is done prior to confirming the booking, the voucher codes can be expected directly upon booking confirmation.\n    \n    This requirement could be applicable on:\n    \n      * `SettlementType:INVOICE`, Upfront payment by invoice.\n      \n      * `SettlementType:VENUE`, Payment is made at venue (`VENUE_ALLOCATION` will likely be returned as well).\n      \n      * `SettlementType:DIRECT`, Payment (-Authorization) is made directly at booking. Note that this indicator is redundant as voucher codes can still be expected directly upon booking confirmation.\n    \n    > Only applicable to Guest Payment. Not applicable to B2B resellers / purchases (Indirect sales / `SettlementType:EXTERNAL`).\n * `SUPPLIER_ALLOCATION` (string) - The vouchers must be (manually) allocated by the supplier before the vouchers are released. Vouchers are not returned directly upon booking confirmation.\n \n    This value will only be returned in case manual supplier allocation is required or if the third-party sub-system is unable to directly allocate the vouchers.\n    \n    Additional work is required to receive the vouchers after the supplier has allocated the vouchers.\n    In most cases the order status will remain `PENDING`.\n * `DATE_ALLOCATION` (string) - The vouchers will be provided at a set date. The date is provided as `product_code_release_date`.\n * `VENUE_ALLOCATION` (string) - The vouchers will be provided at the venue.\n * `MANUAL_ALLOCATION` (string) - The vouchers will be provided manually, outside of the API environment.\n * `NO_ALLOCATION` (string) - The vouchers are not provided nor generated, entry is managed by the venue itself. For example on booking name.",
        "example" : "ORDER_CONFIRMATION",
        "deprecated" : true,
        "default" : "ORDER_CONFIRMATION",
        "enum" : [ "ORDER_CONFIRMATION", "PAYMENT_CONFIRMATION", "SUPPLIER_ALLOCATION", "DATE_ALLOCATION", "MANUAL_ALLOCATION", "VENUE_ALLOCATION", "NO_ALLOCATION" ]
      },
      "PaymentScheme" : {
        "title" : "Payment Scheme",
        "type" : "string",
        "description" : "Payment scheme used. Available if returned by payment service provider.",
        "example" : "VISA",
        "enum" : [ "VISA", "MASTERCARD", "MAESTRO", "PAYPAL", "SOFORT", "GIROPAY", "SEPA", "BANCONTACT", "IDEAL", "ALIPAY", "AFTERPAY", "BOLETO", "KLARNA_NOW", "KLARNA_LATER", "DISCOVER", "UNIONPAY", "VPAY", "JCB", "TRUSTLY", "SWISH", "AMERICAN_EXPRESS", "AMAZON_PAY", "SAMSUNG_PAY", "WECHAT_PAY", "APPLE_PAY", "GOOGLE_PAY", "CREDITCARD", "UNSPECIFIED", "OTHER" ]
      },
      "PaymentStatus" : {
        "title" : "Payment Status",
        "type" : "string",
        "description" : "Status of guest payment.\n\n<details>\n  <summary>**Payment Statuses**</summary>\n\n * `PAID` (string) - Payment is authorized and settled / captured. This state serves as an indicator to proceed.\n \n    > If `SettlementType:EXTERNAL`, then the order will be automatically PAID upon Order Confirmation.\n * `AUTHORIZED` (string) - Payment has been authorized and can be charged / settled later. The payment is approved by the financial institution. This state serves as an indicator to proceed.\n * `PROCESSING` (string) - Payment is being processed, this is a temporary state. \n * `IN_PROGRESS` (string) - Payment flow has been initiated and is in progress, this is a temporary state. \n * `PENDING` (string) - Payment is pending. This is the initial state for most payments. Initiate a new payment via the Make Payment API.\n \n    > If `SettlementType:EXTERNAL`, then no further action is required.\n * `REFUNDED` (string) - Payment has been refunded / reimbursed. Please consult `payment_refund_type` for more details.\n * `REFUSED` (string) - Payment was refused during last attempt. Please consult your Payment Service Provider for more details. Initiate a new payment via the Make Payment API.\n * `CANCELLED` (string) - Payment has been cancelled during the last attempt or prior to the capture of an authorized payment. Initiate a new payment via the Make Payment API.\n * `ERROR_REFUND` (string) - Payment error occurred during last attempt. Initiate a new refund via the Refund Payment API.\n * `ERROR_PAYMENT` (string) - Payment error occurred during last payment attempt. Initiate a new payment via the Make Payment API.\n * `PARTIAL_PAID` (string) - Payment is partially paid.\n * `PARTIAL_REFUND` (string) - Payment is partially refunded.\n * `CHARGEBACK` (string) - Payment funds are returned to the guest due to a chargeback. Please consult your Payment Service Provider for more details.\n * `EXPIRED` (string) - The payment term has expired. This can happen if for example the authorization deadline has passed.\n * `NOT_REQUIRED` (string) - Payment is not required / applicable. This state serves as an indicator to proceed.\n \n</details>\n> Not applicable to B2B resellers (Indirect sales / `SettlementType:EXTERNAL`).",
        "readOnly" : true,
        "example" : "PAID",
        "default" : "PENDING",
        "enum" : [ "PAID", "AUTHORIZED", "PROCESSING", "IN_PROGRESS", "PENDING", "REFUNDED", "REFUSED", "CANCELLED", "ERROR", "ERROR_REFUND", "ERROR_PAYMENT", "PARTIAL_PAID", "PARTIAL_REFUND", "CHARGEBACK", "EXPIRED", "NOT_REQUIRED" ]
      },
      "PaymentMethod" : {
        "title" : "Payment Method",
        "type" : "string",
        "description" : "Payment method / type used.\n\nMore specific details might be available in `PaymentScheme` after payment.\n<details>\n  <summary>**Payment Methods**</summary>\n\n * `ONLINE` (string) - Accept payments with cards, wallets, and key local payment methods on your website and mobile app.\n * `TERMINAL` (string) - Accept payments with in-store or stand-alone POS terminals.\n * `LINK` (string) - Set payment link, often redirecting to a Hosted Payment Page (HPP). \n * `CASH` (string) - Accept cash payment.\n * `GUEST_BILL` (string) - Charge guest bill.\n * `RECURRING` (string) - Recurring payment.\n * `EXTERNAL` (string) - Payment made outside the client / Prio system.\n * `VOUCHER` (string) - Use voucher.\n * `BANK_TRANSFER` (string) - Set bank transfer, generally used to pay invoices.\n * `OTHER` (string) - Any method not mentioned above.\n \n</details>\n> Only applicable to Guest Payment. Not applicable to B2B resellers (Indirect sales / `SettlementType:EXTERNAL`).",
        "example" : "EXTERNAL",
        "default" : "EXTERNAL",
        "enum" : [ "ONLINE", "TERMINAL", "LINK", "CASH", "GUEST_BILL", "RECURRING", "EXTERNAL", "VOUCHER", "BANK_TRANSFER", "OTHER" ]
      },
      "PaymentDetails" : {
        "title" : "Payment Details",
        "required" : [ "payment_amount", "payment_created", "payment_created_email", "payment_created_name", "payment_currency_code", "payment_gateway_type", "payment_id", "payment_merchant_reference", "payment_method", "payment_recurring", "payment_status", "payment_total", "payment_type" ],
        "type" : "object",
        "properties" : {
          "payment_id" : {
            "title" : "Payment ID",
            "type" : "string",
            "description" : "Unique Payment ID set by the Prio system. This is an internal identifier.",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "f44226c0-e142-11ea-86d2-83036af9991e"
          },
          "payment_original_id" : {
            "title" : "Payment Original ID",
            "type" : "string",
            "description" : "In case of a modification (refund, capture after authorization) this will be the `payment_id` of the original record.",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "de1829d0-e144-11ea-bc09-f935c77bef95"
          },
          "payment_partner_id" : {
            "title" : "Payment Partner ID",
            "type" : "string",
            "description" : "Payment partner identifier.",
            "example" : "PAYMENT_PARTNER_ID"
          },
          "payment_shift_id" : {
            "title" : "Payment Shift Identifier",
            "type" : "string",
            "description" : "Unique identifier of the shift linked to the cashier initiating the payment.",
            "readOnly" : true,
            "example" : "PAYMENT_SHIFT_ID_123",
            "deprecated" : true
          },
          "payment_merchant_reference" : {
            "title" : "Payment Merchant Reference",
            "type" : "string",
            "description" : "Unique (external) payment reference set by the merchant / (third) party / POS system initiating the payment. This reference will also be used to identify the payment in the PSP system.",
            "example" : "1478349849927_771663371"
          },
          "payment_external_reference" : {
            "title" : "Payment External Reference",
            "type" : "string",
            "description" : "External payment reference set to identify the shopper / entity / cardholder / guest performing the payment. This reference can also be used to identify the payment in the PSP system.",
            "example" : "SHOPPER_REFERENCE"
          },
          "payment_order_reference" : {
            "title" : "Payment Order Reference",
            "type" : "string",
            "description" : "The `order_reference` linked to this payment.",
            "example" : "ORDRREF123456"
          },
          "payment_booking_references" : {
            "title" : "Payment Bookings References",
            "type" : "array",
            "description" : "The booking references linked to this payment. Only returned in case of partial payment (pay per booking).",
            "readOnly" : true,
            "items" : {
              "title" : "Booking Reference",
              "type" : "string",
              "description" : "The `booking_reference` linked to this payment.",
              "example" : "BKNGREF123456"
            }
          },
          "payment_order_version" : {
            "title" : "Payment Order Version",
            "type" : "integer",
            "description" : "Version of the order (`order_version`) during the payment.",
            "readOnly" : true,
            "example" : 2
          },
          "payment_status" : {
            "$ref" : "#/components/schemas/PaymentStatus"
          },
          "payment_method" : {
            "$ref" : "#/components/schemas/PaymentMethod"
          },
          "payment_scheme" : {
            "$ref" : "#/components/schemas/PaymentScheme"
          },
          "payment_type" : {
            "$ref" : "#/components/schemas/PaymentType"
          },
          "payment_link" : {
            "title" : "Payment Link",
            "type" : "string",
            "description" : "Only applicable in case the PSP only supports payment via Hosted Payment Page Link or `payment_method:LINK`.",
            "format" : "URI",
            "readOnly" : true,
            "example" : "https://customer.prioticket.com/s?q=K0U2VmVNRGo0SEhGdFVUZ09IK2ViZkdtK1NjPQ=="
          },
          "payment_link_expires_at" : {
            "title" : "Payment Link Expiry",
            "type" : "string",
            "description" : "Date and time when the payment link expires. In case of pre-payment this value will be the `reservation_valid_until`.",
            "format" : "date-time",
            "readOnly" : true
          },
          "payment_authorization_expires_at" : {
            "title" : "Payment Authorization Expires At",
            "type" : "string",
            "description" : "Authorisation is valid only for a limited amount of time. In case an authorised payment hasn't been captured or cancelled, it expires after the predefined deadline is missed. \n\nOften the order is cancelled or redemption is blocked in case the payment can no longer be captured.\n\nOnly applicable if `payment_type:AUTHORIZATION`.",
            "format" : "date-time",
            "readOnly" : true,
            "deprecated" : true
          },
          "payment_recurring" : {
            "title" : "Payment Recurring",
            "type" : "boolean",
            "description" : "Whether the payment details are stored for recurring payments.",
            "readOnly" : true,
            "example" : false,
            "default" : false
          },
          "payment_recurring_type" : {
            "$ref" : "#/components/schemas/PaymentRecurringType"
          },
          "payment_class" : {
            "$ref" : "#/components/schemas/PaymentClass"
          },
          "payment_refund_type" : {
            "$ref" : "#/components/schemas/RefundType"
          },
          "payment_refund_reason" : {
            "title" : "Payment Refund Reason",
            "type" : "string",
            "description" : "Reason of refund.\n\nOnly applicable in case `payment_type:REFUND`.",
            "example" : "Guest reimbursement"
          },
          "payment_currency_code" : {
            "title" : "Payment Currency Code",
            "type" : "string",
            "description" : "The (guest) currency code of this payment. According to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).\n\n**(ADVANCED)**\nThis value defaults to `order.order_pricing[].price_currency_code`, unless the guest uses an alternative checkout currency, in which case an additional `payment_currency_rate` and `payment_currency_amount` will be returned.\n\nNote that the payment service provider can perform an additional conversion called dynamic currency conversion (DCC), which will be returned inside `payment_gateway_additional_values`.",
            "example" : "EUR"
          },
          "payment_currency_rate" : {
            "title" : "Payment Currency Rate",
            "type" : "string",
            "description" : "Checkout / Guest currency conversion rate. \n\nIf not set and an alternative `payment_currency_code` is provided, the latest rates from the Currency API will be used as default.\n\n> Alternative rates can only be provided on (re)sales, purchase exchange rates are fixed.",
            "example" : "2.5263"
          },
          "payment_currency_amount" : {
            "title" : "Payment Currency Amount",
            "type" : "string",
            "description" : "The total amount / value that has been authorised / settled / refunded in the alternative (guest) currency (`payment_amount` * `payment_currency_rate`).",
            "readOnly" : true,
            "example" : "10.25"
          },
          "payment_amount" : {
            "title" : "Payment Amount",
            "type" : "string",
            "description" : "The amount authorised / settled / refunded during this transaction in the base (order) currency.\n\nIn case of refunds, this value will be a positive value but the payment type will be set to `payment_type:REFUND`.",
            "readOnly" : true,
            "example" : "10.00"
          },
          "payment_total" : {
            "title" : "Payment Running Total",
            "type" : "string",
            "description" : "The actual total amount that is (already) authorised / settled in the base (order) currency. This will be a running sum of all (previous) payment (`payment_amount`) transactions linked to this order. Refunds will be subtracted from the total.",
            "readOnly" : true,
            "example" : "100.00"
          },
          "payment_gateway_details" : {
            "$ref" : "#/components/schemas/PaymentGatewayDetails"
          },
          "payment_contact" : {
            "$ref" : "#/components/schemas/ContactDetails"
          },
          "payment_fees" : {
            "title" : "Payment Fees",
            "type" : "array",
            "description" : "Applied payment fees.\n\nPayment fees are a fixed or variable cost based on the selected payment method.",
            "readOnly" : true,
            "example" : [ {
              "fee_label" : "Credit Card Fee (VISA)",
              "fee_amount" : "0.10",
              "fee_type" : "PAYMENT"
            } ],
            "deprecated" : true,
            "items" : {
              "$ref" : "#/components/schemas/Fee"
            }
          },
          "payment_notes" : {
            "title" : "Payment Notes",
            "type" : "array",
            "description" : "Payment notes.",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "payment_created" : {
            "title" : "Payment Create Date",
            "type" : "string",
            "description" : "Date and time of payment.",
            "format" : "date-time",
            "readOnly" : true
          },
          "payment_created_name" : {
            "title" : "Payment Created Name",
            "type" : "string",
            "description" : "Cashier name / Username who created the payment.",
            "readOnly" : true,
            "example" : "Cashier Name"
          },
          "payment_created_email" : {
            "title" : "Payment Created Email",
            "type" : "string",
            "description" : "Cashier email / User email who created the payment.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com"
          }
        },
        "description" : "Details on the payment(s). In case the payment is not made directly at booking, these details might not yet be available."
      },
      "PaymentType" : {
        "title" : "Payment Type",
        "type" : "string",
        "description" : "Type of payment.\n<details>\n  <summary>**Payment Types**</summary>\n\n  * `CAPTURE` (string) - The reserved funds are transferred from the shopper to your account. \n    \n    A payment that was already authorised by the payment processor must be captured to be completed (this is the act of transferring the reserved funds from shopper to merchant).\n  * `AUTHORIZATION` (string) - The payment details of the shopper are verified, and the funds are reserved.\n  \n    This is the process of the card issuer (like Visa or Mastercard) verifying payment details and reserving the funds to capture it later. \n    When a payment was authorised but hasn't been captured yet, a merchant can also decide to cancel it for some reason (like a high risk of fraud).\n  \n    > Note that authorisation is valid only for a limited amount of time. In case an authorised payment hasn't been captured or cancelled, it expires after the predefined deadline is missed.\n  * `REFUND` (string) - If you want to return the funds to your shopper, for example if they returned an item, you need to refund the payment.\n  \n</details>",
        "example" : "CAPTURE",
        "default" : "CAPTURE",
        "enum" : [ "CAPTURE", "AUTHORIZATION", "REFUND" ]
      },
      "PaymentClass" : {
        "title" : "Payment Class",
        "type" : "string",
        "description" : "Payment Class:\n  * `SALES` (string) - Payment settles the outstanding sales amount.\n  * `PURCHASE` (string) - Payment settles the outstanding purchase amount.",
        "example" : "SALES",
        "deprecated" : true,
        "default" : "SALES",
        "enum" : [ "SALES", "PURCHASE" ]
      },
      "RefundType" : {
        "title" : "Refund Type",
        "type" : "string",
        "description" : "Type of refund.\n<details>\n  <summary>**Refund Types**</summary>\n\n  * `SYSTEM` - Refund is initiated (manually) by the Prio or Partner system. For example, an admin user in the Order Overview.\n  * `AUTO` - Refund is automatically initiated by the Prio system. For example, if a paid reservation has expired (not confirmed within the `reservation_valid_until`) or is being cancelled.\n  * `PSP` - Refund is (manually) initiated by the Payment Service Provider.\n  * `CHARGE_BACK` - Refund is initiated by the Payment Service Provider (Guest) because of a chargeback.\n  * `OTHER` - Refund is initiated due to other reasons.\n  \n</details>\n  \n> Only applicable in case `payment_type:REFUND`.",
        "readOnly" : true,
        "example" : "SYSTEM",
        "default" : "SYSTEM",
        "enum" : [ "SYSTEM", "AUTO", "PSP", "CHARGE_BACK", "OTHER" ]
      },
      "PaymentGatewayDetails" : {
        "title" : "Payment Gateway Details",
        "type" : "object",
        "description" : "Payment information for each gateway. Only applicable if a payment gateway has been used to process the payment.",
        "example" : {
          "payment_merchant_account_name" : "PrioticketECOM",
          "payment_service_provider_reference" : "852596799876396F",
          "payment_service_provider_original_reference" : "882596799845511E",
          "payment_gateway_type" : "ADYEN",
          "payment_gateway_additional_values" : {
            "psp_shopper_name" : "Checkout Shopper PlaceHolder",
            "psp_shopper_cardnumber" : "1111",
            "psp_issuer_country" : "NL",
            "psp_fraudscore" : "63",
            "psp_payment_status" : "Settled"
          }
        },
        "discriminator" : {
          "propertyName" : "payment_gateway_type",
          "mapping" : {
            "ADYEN" : "#/components/schemas/PaymentGatewayAdyen",
            "CYBERSOURCE" : "#/components/schemas/PaymentGatewayCybersource",
            "HYPERPAY" : "#/components/schemas/PaymentGatewayHyperPay",
            "ADDONPAYMENTS" : "#/components/schemas/PaymentGatewayAddonPayments",
            "MEWS" : "#/components/schemas/PaymentGatewayMews",
            "NGENIUS" : "#/components/schemas/PaymentGatewayNGenius",
            "EXTERNAL" : "#/components/schemas/PaymentGatewayExternal"
          }
        },
        "anyOf" : [ {
          "$ref" : "#/components/schemas/PaymentGatewayAdyen"
        }, {
          "$ref" : "#/components/schemas/PaymentGatewayCybersource"
        }, {
          "$ref" : "#/components/schemas/PaymentGatewayHyperPay"
        }, {
          "$ref" : "#/components/schemas/PaymentGatewayAddonPayments"
        }, {
          "$ref" : "#/components/schemas/PaymentGatewayHotelBill"
        }, {
          "$ref" : "#/components/schemas/PaymentGatewayMews"
        }, {
          "$ref" : "#/components/schemas/PaymentGatewayNGenius"
        }, {
          "$ref" : "#/components/schemas/PaymentGatewayExternal"
        } ]
      },
      "CommonPaymentGateway" : {
        "title" : "Common Payment Gateway",
        "required" : [ "payment_gateway_type", "payment_merchant_account_name", "payment_service_provider_reference" ],
        "type" : "object",
        "properties" : {
          "payment_merchant_account_name" : {
            "title" : "Payment Merchant Account Name",
            "type" : "string",
            "description" : "The name / identifier of the party selling goods or services to shoppers via an e-commerce website, a mobile app, on a point of sale, or across all three channels.",
            "example" : "BoatTours"
          },
          "payment_service_provider_reference" : {
            "title" : "Payment Service Provider Reference",
            "type" : "string",
            "description" : "Unique payment reference set by the payment service provider. Note that every action will result in a different reference. The original reference can be found below.",
            "readOnly" : true,
            "example" : "4714783500596458"
          },
          "payment_service_provider_original_reference" : {
            "title" : "Payment Service Provider Original Reference",
            "type" : "string",
            "description" : "The PSP reference associated with the original payment prior to the modification (refund, manual capture) request.",
            "readOnly" : true,
            "example" : "4714783500596458"
          },
          "payment_gateway_type" : {
            "title" : "Payment Gateway Type",
            "type" : "string",
            "description" : "Payment service provider used to process payments.\n<details>\n  <summary>**Payment Gateway Types**</summary>\n\n  * `ADYEN` - Adyen ([More info](https://www.adyen.com/))\n  * `CYBERSOURCE` - Cybersource ([More info](https://www.cybersource.com/))\n  * `HYPERPAY` - Hyperpay ([More info](https://www.hyperpay.com/))\n  * `ADDONPAYMENTS` - Addon Payments ([More info](https://www.addonpayments.com/))\n  * `MEWS` - Mews ([More info](https://www.mews.com/))\n  * `NGENIUS` - Network International ([More info](https://www.network.ae/))\n  * `MULTISAFE` - MultiSafePay ([More info](https://www.multisafepay.com/))\n  * `SUMUP` - SumUp Payments ([More info](https://sumup.com/))\n  * `IZETTLE` - iZettle ([More info](https://www.izettle.com/))\n  * `STRIPE` - Stripe ([More info](https://stripe.com/))\n  * `WORLDPAY` - WorldPay ([More info](https://online.worldpay.com/))\n  * `GOOGLE` - Google Pay ([More info](https://developers.google.com/pay/api))\n  * `EXTERNAL` - The payment is settled externally.\n  * `OTHER` - Payment provider not listed above.\n  * `NONE` - No payment provider is used.\n  \n</details>\n  \n> Used to aid in serialization, deserialization, and validation.\n",
            "example" : "ADYEN"
          },
          "payment_gateway_additional_values" : {
            "title" : "Payment Gateway Additional Values",
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Additional (conditional) values returned by the payment service provider.\n\nThere are many additional data elements that can be returned. The list is long and growing, so we can't mention all of them here.\n\nFor example:\n  * Cardholder Name\n  * Cardnumber (last digits only)\n  * Card Scheme\n  * Shopper IP\n  * Card Issuer Country\n  * Card Issuer Name\n  * Fraudscore\n  * Transaction Type\n  * Payment Status\n  * Username",
            "example" : {
              "psp_shopper_name" : "Checkout Shopper PlaceHolder",
              "psp_shopper_cardnumber" : "1111",
              "psp_issuer_country" : "NL",
              "psp_fraudscore" : "63",
              "psp_transaction_type" : "AUTH",
              "psp_payment_status" : "Settled"
            }
          }
        },
        "description" : "Common payment gateway.",
        "discriminator" : {
          "propertyName" : "payment_gateway_type",
          "mapping" : {
            "ADYEN" : "#/components/schemas/PaymentGatewayAdyen",
            "CYBERSOURCE" : "#/components/schemas/PaymentGatewayCybersource",
            "HYPERPAY" : "#/components/schemas/PaymentGatewayHyperPay",
            "ADDONPAYMENTS" : "#/components/schemas/PaymentGatewayAddonPayments",
            "MEWS" : "#/components/schemas/PaymentGatewayMews",
            "NGENIUS" : "#/components/schemas/PaymentGatewayNGenius",
            "EXTERNAL" : "#/components/schemas/PaymentGatewayExternal"
          }
        }
      },
      "PaymentGatewayType" : {
        "title" : "Payment Gateway Type",
        "type" : "string",
        "description" : "Payment service provider used to process payments.\n<details>\n  <summary>**Payment Gateway Types**</summary>\n\n  * `ADYEN` - Adyen ([More info](https://www.adyen.com/))\n  * `CYBERSOURCE` - Cybersource ([More info](https://www.cybersource.com/))\n  * `HYPERPAY` - Hyperpay ([More info](https://www.hyperpay.com/))\n  * `ADDONPAYMENTS` - Addon Payments ([More info](https://www.addonpayments.com/))\n  * `MEWS` - Mews ([More info](https://www.mews.com/))\n  * `NGENIUS` - Network International ([More info](https://www.network.ae/))\n  * `MULTISAFE` - MultiSafePay ([More info](https://www.multisafepay.com/))\n  * `SUMUP` - SumUp Payments ([More info](https://sumup.com/))\n  * `IZETTLE` - iZettle ([More info](https://www.izettle.com/))\n  * `STRIPE` - Stripe ([More info](https://stripe.com/))\n  * `WORLDPAY` - WorldPay ([More info](https://online.worldpay.com/))\n  * `GOOGLE` - Google Pay ([More info](https://developers.google.com/pay/api))\n  * `EXTERNAL` - The payment is settled externally.\n  * `OTHER` - Payment provider not listed above.\n  * `NONE` - No payment provider is used.\n  \n</details>\n",
        "example" : "ADYEN",
        "default" : "NONE",
        "enum" : [ "ADYEN", "CYBERSOURCE", "HYPERPAY", "ADDONPAYMENTS", "MEWS", "NGENIUS", "MULTISAFE", "SUMUP", "IZETTLE", "STRIPE", "WORLDPAY", "GOOGLE", "EXTERNAL", "OTHER", "NONE" ]
      },
      "PaymentGatewayExternal" : {
        "title" : "Payment Gateway External",
        "type" : "object",
        "description" : "Details on the payment when using an external Payment Gateway or using a physical payment method such as cash to settle the Guest Payment.\n> Not applicable to B2B resellers (Indirect sales / `SettlementType:EXTERNAL`).",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentGateway"
        } ]
      },
      "PaymentGatewayAdyen" : {
        "title" : "Payment Gateway Adyen",
        "type" : "object",
        "description" : "Details on the payment when using Adyen to collect a payment.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentGateway"
        }, {
          "type" : "object",
          "properties" : {
            "payment_terminal_id" : {
              "title" : "Payment Terminal ID",
              "type" : "string",
              "description" : "Unique ID of the selected payment terminal.",
              "example" : "V400m-328689332",
              "deprecated" : true
            }
          }
        } ]
      },
      "PaymentGatewayMews" : {
        "title" : "Payment Gateway Mews",
        "type" : "object",
        "description" : "Details on the payment when using MEWS to collect a payment.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentGateway"
        }, {
          "required" : [ "payment_customer_id" ],
          "type" : "object",
          "properties" : {
            "payment_customer_id" : {
              "title" : "Payment Customer ID",
              "type" : "string",
              "description" : "Unique identifier of the MEWS customer. Retrieved via the [MEWS Customers API](https://mews-systems.gitbook.io/connector-api/operations/customers).",
              "example" : "794d2b77-0a9a-4190-9fa9-62ea9bf2a56e"
            }
          }
        } ]
      },
      "PaymentGatewayNGenius" : {
        "title" : "Payment Gateway N-Genius",
        "type" : "object",
        "description" : "Details on the payment when using N-Genius to collect a payment.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentGateway"
        } ]
      },
      "PaymentGatewayCybersource" : {
        "title" : "Payment Gateway Cybersource",
        "type" : "object",
        "description" : "Payment gateway cybersource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentGateway"
        }, {
          "required" : [ "payment_auth_code" ],
          "type" : "object",
          "properties" : {
            "payment_auth_code" : {
              "title" : "Payment Auth Code",
              "type" : "string",
              "description" : "Payment auth code.",
              "writeOnly" : true,
              "example" : "xxxxxx"
            }
          }
        } ]
      },
      "PaymentGatewayHyperPay" : {
        "title" : "Payment Gateway HyperPay",
        "type" : "object",
        "description" : "Payment gateway hyperpay.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentGateway"
        } ]
      },
      "PaymentGatewayAddonPayments" : {
        "title" : "Payment Gateway Addon Payments",
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentGateway"
        }, {
          "type" : "object",
          "properties" : {
            "payment_auth_code" : {
              "title" : "Payment Auth Code",
              "type" : "string",
              "description" : "Payment auth code.",
              "writeOnly" : true,
              "example" : "xxxxxx"
            }
          }
        } ]
      },
      "PaymentGatewayHotelBill" : {
        "title" : "Payment Gateway Hotel Bill",
        "type" : "object",
        "description" : "Payment gateway hotel bill.",
        "deprecated" : true,
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonPaymentGateway"
        }, {
          "required" : [ "payment_hotel_guest_name", "payment_hotel_id", "payment_hotel_room_number" ],
          "type" : "object",
          "properties" : {
            "payment_hotel_id" : {
              "title" : "Payment Hotel ID",
              "type" : "string",
              "description" : "Payment hotel ID.",
              "example" : "234235453465"
            },
            "payment_hotel_guest_name" : {
              "title" : "Payment Hotel Guest Name",
              "type" : "string",
              "description" : "Payment hotel guest name.",
              "example" : "John Doe"
            },
            "payment_hotel_room_number" : {
              "title" : "Payment Hotel Room Number",
              "type" : "string",
              "description" : "Payment hotel room number.",
              "example" : "423"
            }
          }
        } ]
      },
      "ProductPaymentDetails" : {
        "title" : "Product Payment Details",
        "type" : "object",
        "properties" : {
          "product_payment_type" : {
            "title" : "Product Payment Type",
            "type" : "string",
            "description" : "Indicates how the product will be purchased.\n\nPayment Types:\n   * `REQUIRED` (string) - The user has to pay this service at the booking time.\n   * `OPTIONAL` (string) - The user can choose to pre-pay this service at the booking time or later, but it is not required in order to book.\n   * `NOT_SUPPORTED` (string) - Payment is not supported for this service.",
            "example" : "REQUIRED",
            "deprecated" : true,
            "enum" : [ "REQUIRED", "OPTIONAL", "NOT_SUPPORTED" ],
            "x-enum-descriptions" : [ "The user has to pay this service at the booking time.", "The user can choose to pre-pay this service at the booking time or later, but it is not required in order to book.", "Payment is not supported for this service." ]
          },
          "product_payment_currency" : {
            "$ref" : "#/components/schemas/Currency"
          }
        },
        "description" : "Details on the payment details for this product.",
        "readOnly" : true
      },
      "CreditLimit" : {
        "title" : "Credit Limit",
        "required" : [ "credit_blocked", "credit_invoice_interval", "credit_invoice_settlement", "credit_remaining", "credit_reset", "credit_status", "credit_total", "credit_used" ],
        "type" : "object",
        "properties" : {
          "credit_status" : {
            "title" : "Credit Status",
            "type" : "string",
            "description" : "The credit status.",
            "readOnly" : true,
            "enum" : [ "ACTIVE", "SUSPENDED" ]
          },
          "credit_total" : {
            "title" : "Credit Total",
            "type" : "string",
            "description" : "The total credit limit.",
            "readOnly" : true,
            "example" : "100.00"
          },
          "credit_deposit" : {
            "title" : "Credit Deposit",
            "type" : "string",
            "description" : "The amount of credit (safety) deposit.",
            "readOnly" : true,
            "deprecated" : true
          },
          "credit_blocked" : {
            "title" : "Credit Blocked",
            "type" : "string",
            "description" : "The amount of credit blocked / reserved.",
            "readOnly" : true,
            "example" : "20.00"
          },
          "credit_used" : {
            "title" : "Credit Used",
            "type" : "string",
            "description" : "The amount of credit utilized.",
            "readOnly" : true,
            "example" : "30.00"
          },
          "credit_remaining" : {
            "title" : "Credit Remaining",
            "type" : "string",
            "description" : "The amount of credit remaining.",
            "readOnly" : true,
            "example" : "50.00"
          },
          "credit_invoice_interval" : {
            "title" : "Credit Invoice Interval",
            "type" : "string",
            "description" : "Type of credit invoice interval.\n\nInvoice Interval Types:\n   * `MANUAL` (string) - An invoice is generated upon manual user action.\n   * `PER_ORDER` (string) - An invoice is generated for each individual order.\n   * `LIMIT_REACHED` (string) - An invoice is generated once the credit limit is reached (`credit_remaining` equals 0).",
            "readOnly" : true,
            "enum" : [ "MANUAL", "PER_ORDER", "LIMIT_REACHED" ]
          },
          "credit_invoice_settlement" : {
            "title" : "Credit Invoice Invoice",
            "type" : "string",
            "description" : "Whether the invoice will be automatically settled / paid.",
            "readOnly" : true,
            "enum" : [ "MANUAL", "AUTO" ]
          },
          "credit_reset" : {
            "title" : "Credit Reset",
            "type" : "string",
            "description" : "The datetime of the last credit reset.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Credit limit is a functionality to set a selling limit to clients. \n\nYou are not able to create any additional bookings if your credit limit is reached. To reset your credit limit a payment is required.\n\nNote that if the credit limit details are returned in the reservation or order object that the values are relative to the reservation / order creation time. Subsequent calls will not update the results. ",
        "readOnly" : true,
        "deprecated" : true
      },
      "CurrencySymbolPosition" : {
        "title" : "Currency Symbol Position",
        "type" : "string",
        "description" : "Currency symbol position.",
        "deprecated" : true,
        "enum" : [ "LEFT", "RIGHT" ]
      },
      "Currency" : {
        "title" : "Currency Information",
        "type" : "object",
        "properties" : {
          "currency_code" : {
            "title" : "Currency Code",
            "type" : "string",
            "description" : "Currency Code, according to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217).",
            "example" : "EUR"
          },
          "currency_language_code" : {
            "title" : "Currency Language Code",
            "type" : "string",
            "description" : "Currency language code.",
            "example" : "en",
            "deprecated" : true
          },
          "currency_region_code" : {
            "title" : "Currency Region Code",
            "type" : "string",
            "description" : "Currency region code.",
            "example" : "US",
            "deprecated" : true
          },
          "currency_symbol" : {
            "title" : "Currency Symbol",
            "type" : "string",
            "description" : "Currency symbol.",
            "deprecated" : true
          },
          "currency_symbol_position" : {
            "$ref" : "#/components/schemas/CurrencySymbolPosition"
          },
          "currency_decimal_digits" : {
            "title" : "Currency Decimal Digits",
            "type" : "integer",
            "description" : "Currency decimal digits.",
            "example" : 2,
            "deprecated" : true
          },
          "currency_decimal_delimiter" : {
            "title" : "Currency Decimal Delimiter",
            "type" : "string",
            "description" : "Currency decimal delimiter.",
            "example" : ".",
            "deprecated" : true
          },
          "currency_thousand_delimiter" : {
            "title" : "Currency Thousand Delimiter",
            "type" : "string",
            "description" : "Currency thousand delimiter.",
            "example" : ",",
            "deprecated" : true
          },
          "currency_space_between_amount_and_symbol" : {
            "title" : "Currency Space Between Amount and Symbol",
            "type" : "boolean",
            "description" : "Currency space between amount and symbol.",
            "example" : true,
            "deprecated" : true,
            "default" : true
          }
        },
        "additionalProperties" : false,
        "description" : "The currency information for product prices. According to [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217)."
      },
      "ProductCodeFormat" : {
        "title" : "Product Code Format",
        "type" : "string",
        "description" : "Indicates how the product code should be rendered on the customer voucher.\n\nCode Formats:\n  * `BAR_CODE`\n  * `BAR_CODE_E128`\n  * `BAR_CODE_C128`\n  * `BAR_CODE_C39`\n  * `AZTEC`\n  * `PDF`\n  * `PDF417`\n  * `QR_CODE`\n  * `QR_CODE_WITH_LINK`\n  * `LINK`\n  * `IMAGE`",
        "readOnly" : true,
        "example" : "QR_CODE",
        "enum" : [ "BAR_CODE", "BAR_CODE_E128", "BAR_CODE_C128", "BAR_CODE_C39", "AZTEC", "PDF", "PDF417", "QR_CODE", "QR_CODE_WITH_LINK", "LINK", "IMAGE", "NONE", "OTHER" ]
      },
      "ProductCodeSource" : {
        "title" : "Product Code Source",
        "type" : "string",
        "description" : "Indicates the origin of the code.",
        "readOnly" : true,
        "example" : "PRIO",
        "enum" : [ "PRIO", "EXTERNAL", "MANUAL" ]
      },
      "ProductVoucherSettings" : {
        "title" : "Product Voucher Settings",
        "type" : "string",
        "description" : "Details on how the voucher should be printed / presented.",
        "example" : "SINGLE",
        "default" : "SINGLE",
        "enum" : [ "PER_PERSON", "PER_SUPPLIER", "SINGLE" ]
      },
      "ProductCodeSettings" : {
        "title" : "Product Code Settings",
        "required" : [ "product_code_format", "product_code_source", "product_code_type", "product_combi_code", "product_group_code", "product_voucher_release_type", "product_voucher_settings" ],
        "type" : "object",
        "properties" : {
          "product_code_format" : {
            "$ref" : "#/components/schemas/ProductCodeFormat"
          },
          "product_code_source" : {
            "$ref" : "#/components/schemas/ProductCodeSource"
          },
          "product_group_code" : {
            "title" : "Product Group Code",
            "type" : "boolean",
            "description" : "Whether this product supports a group code. In this case a code (`product_code`) is returned which is valid for all `product_type`s. This code can be used to allow entry to all persons within that booking without using an individual `product_type_code`.",
            "example" : true,
            "default" : false
          },
          "product_combi_code" : {
            "title" : "Product Combi Code",
            "type" : "boolean",
            "description" : "Whether this product supports a combi code. In this case a code (`product_code`) is returned which is valid for all products within a package. This code allows admission to all supplier venues. This is only applicable to combi-products (`product_class:COMBI`).",
            "example" : true,
            "default" : false
          },
          "product_city_card" : {
            "title" : "Product City Card",
            "type" : "boolean",
            "description" : "Product is a city card.",
            "example" : false,
            "default" : false
          },
          "product_voucher_settings" : {
            "$ref" : "#/components/schemas/ProductVoucherSettings"
          },
          "product_code_release_date" : {
            "title" : "Product Code Release Date",
            "type" : "string",
            "description" : "If `product_code_release_details:DATE_ALLOCATION`, this field will indicate the date on which the voucher codes will be available. Note that if there are multiple voucher release requirements, all must be met prior to this date, otherwise the voucher will be released as soon as the last requirement is fullfilled.\n\nIn case you are subscribed to the Order Notification Event, a webhook will be triggered on this date as well.",
            "format" : "date-time",
            "deprecated" : true
          },
          "product_code_release_details" : {
            "title" : "Product Code Release Details",
            "type" : "array",
            "description" : "Requirements for the voucher codes to be released. All requirements must be met for the voucher to be released.\n\nBy default the vouchers will be released on Order Confirmation. Be aware that if additional requirements are set, the voucher codes might not immediately be released upon Create Booking.\n\nAdditional requirements are only applicable to a very small subset of products.",
            "items" : {
              "$ref" : "#/components/schemas/VoucherReleaseType"
            }
          }
        },
        "description" : "Information on how the product codes are being provided.",
        "readOnly" : true
      },
      "ConfirmReservation" : {
        "title" : "Confirm Reservation Option",
        "type" : "object",
        "description" : "Confirm reservation option.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonBookingOption"
        }, {
          "required" : [ "reservation_reference" ],
          "type" : "object",
          "properties" : {
            "reservation_reference" : {
              "title" : "Reservation Reference",
              "type" : "string",
              "description" : "A unique identifier created by the reservation API of Prio.",
              "example" : "RESERVATION_REFERENCE_123"
            }
          }
        } ]
      },
      "OAuthErrorModel" : {
        "title" : "OAuth Error Model",
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/OAuthErrorCodes"
          },
          "error_description" : {
            "title" : "Error Description",
            "type" : "string",
            "description" : "Human-readable ASCII [[USASCII]](https://tools.ietf.org/html/rfc6749#ref-USASCII) text providing additional information, used to assist the client developer in understanding the error that occurred.",
            "example" : "Client authentication failed (e.g., unknown client, no client authentication included, or unsupported authentication method)."
          },
          "error_uri" : {
            "title" : "Error URI",
            "type" : "string",
            "description" : "A URI identifying a human-readable web page with information about the error, used to provide the client developer with additional information about the error.",
            "example" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
          }
        },
        "description" : "OAuth error model."
      },
      "OAuthErrorCodes" : {
        "title" : "OAuth Error Codes",
        "type" : "string",
        "description" : "The authorization server responds with an HTTP 400 (Bad Request) status code (unless specified otherwise) and includes the following parameters with the response.\n\nValues for the parameters MUST NOT include characters outside the set %x20-21 / %x23-5B / %x5D-7E.\n\n   Error:\n   * `invalid_request` (string) - The request is missing a required parameter, includes an unsupported parameter value (other than grant type), repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed. \n   * `invalid_client` (string) - Client authentication failed (e.g., unknown client, no client authentication included, or unsupported authentication method). The authorization server MAY return an HTTP 401 (Unauthorized) status code to indicate which HTTP authentication schemes are supported. If the client attempted to authenticate via the `Authorization` request header field, the authorization server MUST respond with an HTTP 401 (Unauthorized) status code and include the `WWW-Authenticate` response header field matching the authentication scheme used by the client.\n   * `invalid_grant` (string) - The provided authorization grant (e.g., authorization code, resource owner credentials) or refresh token is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client.\n   * `unauthorized_client` (string) - The authenticated client is not authorized to use this authorization grant type.\n   * `unsupported_grant_type` (string) - The authorization grant type is not supported by the authorization server.\n   * `invalid_scope` (string) - `The requested scope is invalid, unknown, malformed, or exceeds the scope granted by the resource owner.",
        "example" : "invalid_client",
        "enum" : [ "invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type", "invalid_scope" ]
      },
      "ErrorModel" : {
        "title" : "Error Model",
        "required" : [ "error", "error_reference" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "title" : "Error Code",
            "type" : "string",
            "description" : "The error code which occured.\n\nAs our API has over 1000+ unique error codes (grouped by HTTP status). We discourage implementing individual errors on your customer front-end interface and suggest a catch-all clause for each HTTP status code instead.\n\nErrors can be shown directly to the customer using the `error_message`, while more specific details explaining the problem will be provided in the `errors` object.\nWe recommend a combination of `error_message` and `error_reference` when communicating with the customer and API support.\n",
            "readOnly" : true
          },
          "error_reference" : {
            "title" : "Error Reference",
            "type" : "string",
            "description" : "Unique reference linked to this error.\n\nWe recommend showing this reference to the customer to allow for better issue tracking.\n",
            "readOnly" : true
          },
          "error_message" : {
            "title" : "Error Message",
            "type" : "string",
            "description" : "Customer friendly error message which can be shown on your front-end.\n",
            "readOnly" : true,
            "example" : "Unable to confirm your booking, please try again later."
          },
          "error_description" : {
            "title" : "Error Description",
            "type" : "string",
            "description" : "Human-readable ASCII [[USASCII]](https://tools.ietf.org/html/rfc6749#ref-USASCII) text providing additional information, used to assist the client developer in understanding the error that occurred.",
            "readOnly" : true
          },
          "error_uri" : {
            "title" : "Error URI",
            "type" : "string",
            "description" : "A URI identifying a human-readable web page with information about the error, used to provide the client \ndeveloper with additional information about the error.",
            "readOnly" : true,
            "example" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
          },
          "errors" : {
            "title" : "Error Messages",
            "type" : "array",
            "description" : "Specific messages indicating one or more problems.",
            "readOnly" : true,
            "example" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ],
            "items" : {
              "title" : "Error Message",
              "type" : "string",
              "description" : "Specific message indicating a problem.",
              "readOnly" : true
            }
          }
        },
        "description" : "Error model.",
        "readOnly" : true
      },
      "InvoiceDetails" : {
        "title" : "Invoice Details",
        "required" : [ "invoice_date", "invoice_id", "invoice_product_id", "invoice_product_quantity", "invoice_status", "invoice_type" ],
        "type" : "object",
        "properties" : {
          "invoice_id" : {
            "title" : "Invoice ID",
            "type" : "string",
            "description" : "Unique invoice ID.",
            "example" : "R-5460521795-20622"
          },
          "invoice_product_id" : {
            "title" : "Invoice Product ID",
            "type" : "string",
            "description" : "The product ID of this invoice.",
            "example" : "INVOICE_PRODUCT_ID"
          },
          "invoice_product_quantity" : {
            "title" : "Invoice Product Quantity",
            "type" : "integer",
            "description" : "The quantity of products invoiced.",
            "example" : 3
          },
          "invoice_date" : {
            "title" : "Invoice Date",
            "type" : "string",
            "description" : "Date of invoice.",
            "format" : "date-time"
          },
          "invoice_status" : {
            "$ref" : "#/components/schemas/InvoiceStatus"
          },
          "invoice_type" : {
            "title" : "Invoice Type",
            "type" : "string",
            "description" : "Type of invoice.",
            "enum" : [ "SALE", "PURCHASE" ]
          }
        },
        "description" : "Related invoice details.",
        "readOnly" : true,
        "deprecated" : true
      },
      "InvoiceStatus" : {
        "title" : "Invoice Status",
        "type" : "string",
        "description" : "Status of the invoice.",
        "readOnly" : true,
        "deprecated" : true,
        "enum" : [ "INVOICED", "INVOICE_APPROVED", "INVOICE_PAID", "NOT_INVOICED" ]
      },
      "Pass" : {
        "title" : "Pass",
        "type" : "object",
        "properties" : {
          "pass_code" : {
            "title" : "Passcode",
            "type" : "string",
            "description" : "Code of pass."
          },
          "pass_duration" : {
            "$ref" : "#/components/schemas/PassDurationDetails"
          },
          "pass_redemptions" : {
            "title" : "Pass Redemptions",
            "type" : "array",
            "description" : "Pass redemption details.",
            "items" : {
              "$ref" : "#/components/schemas/PassRedemption"
            }
          }
        },
        "description" : "Pass details. Only applicable if this product has been assigned to a pass."
      },
      "PassRedemption" : {
        "title" : "Pass Redemption",
        "type" : "object",
        "properties" : {
          "pass_redemption_date_time" : {
            "title" : "Pass Redemption Date Time",
            "type" : "string",
            "description" : "Date time of redemption.",
            "format" : "date-time"
          },
          "pass_redemption_user_name" : {
            "title" : "Pass Redemption User Name",
            "type" : "string",
            "description" : "Name of person that performed the redemption."
          },
          "pass_redemption_user_email" : {
            "title" : "Pass Redemption User Email",
            "type" : "string",
            "description" : "Email of user that performed the redemption.",
            "format" : "email"
          }
        },
        "description" : "Pass redemption detail."
      },
      "PassDurationDetails" : {
        "title" : "Pass Duration Details",
        "required" : [ "pass_duration_end", "pass_duration_remaining", "pass_duration_start", "pass_duration_total" ],
        "type" : "object",
        "properties" : {
          "pass_duration_start" : {
            "title" : "Pass Duration Start",
            "type" : "string",
            "description" : "In case of a redeemed pass, the start time of the countdown. Will be equal to `redeem_date_time_first`.",
            "format" : "date-time",
            "example" : "2018-06-26T12:08:47Z"
          },
          "pass_duration_end" : {
            "title" : "Pass Duration End",
            "type" : "string",
            "description" : "In case of a redeemed pass, the end time of the countdown. (`duration_start` + `duration_total`)",
            "format" : "date-time",
            "example" : "2018-06-26T12:08:47Z"
          },
          "pass_duration_total" : {
            "title" : "Pass Duration Total",
            "type" : "integer",
            "description" : "The total amount of time in seconds that the pass is supposed to be valid.",
            "example" : 86400
          },
          "pass_duration_remaining" : {
            "title" : "Pass Duration Remaining",
            "type" : "integer",
            "description" : "The remaining time for the pass to be valid in seconds. Can be a negative value in case of an expired passcode. (`duration_end` - current time)",
            "example" : 3600
          }
        },
        "additionalProperties" : false,
        "description" : "Details of the pass validity in case `redemption_has_duration:true`."
      },
      "RedemptionStatus" : {
        "title" : "Redemption Status",
        "type" : "string",
        "description" : "Status of redemption.\n\nRedemption Status:\n  * `REDEEMED` (string) - Passcode is valid and has been redeemed. It cannot be redeemed again.\n  * `CHARGED` (string) - Passcode is valid and payment has been charged. (Post-paid tickets). It can be redeemed multiple times until the passcode expires.\n  * `PENDING` (string) - Passcode is valid and has not been redeemed yet.\n  * `NOT_ACTIVE` (string) - Passcode is not yet active, scanned before the `product_valid_from`.\n  * `EXPIRED` (string) - Passcode not valid, expired. (scanned after `product_valid_till` or `redeem_duration_remaining <= 0`).\n  * `CANCELLED` (string) - Passcode not valid, cancelled.\n  * `DISABLED` (string) - Passcode not valid, disabled.\n  * `REJECTED` (string) - Passcode rejected, due to administrative reasons.\n  * `ACTIVE` (string) - Passcode is valid and optional countdown is active. It can be redeemed multiple times until the passcode expires. This status overrides `redemption_status:REDEEMED`.",
        "readOnly" : true,
        "example" : "REDEEMED",
        "default" : "PENDING",
        "enum" : [ "REDEEMED", "CHARGED", "PENDING", "NOT_ACTIVE", "EXPIRED", "CANCELLED", "DISABLED", "REJECTED", "ACTIVE" ]
      },
      "Webhook" : {
        "title" : "Webhook",
        "required" : [ "webhook_created", "webhook_created_email", "webhook_created_name", "webhook_events", "webhook_id", "webhook_status" ],
        "type" : "object",
        "properties" : {
          "webhook_id" : {
            "title" : "Webhook ID",
            "type" : "string",
            "description" : "Unique webhook ID.",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "de1829d0-e144-11ea-bc09-f935c77bef95"
          },
          "webhook_status" : {
            "title" : "Webhook Status",
            "type" : "string",
            "description" : "Status of this webhook.",
            "readOnly" : true,
            "example" : "ENABLED",
            "enum" : [ "ENABLED", "DISABLED" ]
          },
          "webhook_version" : {
            "$ref" : "#/components/schemas/ApiVersion"
          },
          "webhook_events" : {
            "title" : "Webhook Events",
            "type" : "array",
            "description" : "Events this webhook subscribes to.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationEvent"
            }
          },
          "webhook_url" : {
            "title" : "Webhook URL",
            "type" : "string",
            "description" : "Webhook URL to sent notifications.",
            "format" : "uri",
            "example" : "https://myserver.com/send/callback/here"
          },
          "webhook_email" : {
            "title" : "Webhook Email",
            "type" : "string",
            "description" : "Webhook Email to sent notifications.",
            "format" : "email",
            "example" : "api-notifications@prioticket.dev",
            "deprecated" : true
          },
          "webhook_payload" : {
            "title" : "Webhook Payload",
            "type" : "boolean",
            "description" : "Whether the notification should contain the payload of the changed data.",
            "example" : true,
            "deprecated" : true,
            "default" : true
          },
          "webhook_auth" : {
            "title" : "Webhook Auth",
            "type" : "string",
            "description" : "Optional Basic access authentication value that will be passed as `Authorization: Basic <Webhook Auth Value>` header on each callback.",
            "writeOnly" : true,
            "deprecated" : true
          },
          "webhook_created" : {
            "title" : "Webhook Created",
            "type" : "string",
            "description" : "Date of creation.",
            "format" : "date-time",
            "readOnly" : true
          },
          "webhook_created_name" : {
            "title" : "Webhook Created Name",
            "type" : "string",
            "description" : "Cashier name / User name who created the webhook.",
            "readOnly" : true,
            "example" : "Cashier Name",
            "deprecated" : true
          },
          "webhook_created_email" : {
            "title" : "Webhook Created Email",
            "type" : "string",
            "description" : "Cashier email / User email who created the webhook.",
            "format" : "email",
            "readOnly" : true,
            "example" : "cashier@prioticket.com",
            "deprecated" : true
          }
        },
        "additionalProperties" : false,
        "description" : "Details regarding a webhook. \n\nEither a `webhook_url` or `webhook_email` is required."
      },
      "WebhookNotification" : {
        "title" : "Webhook Notification",
        "required" : [ "notification_event", "notification_id", "notification_item_id", "notification_status" ],
        "type" : "object",
        "properties" : {
          "notification_id" : {
            "title" : "Notification ID",
            "type" : "string",
            "description" : "Unique notification ID.",
            "format" : "uuid",
            "readOnly" : true,
            "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
          },
          "notification_status" : {
            "$ref" : "#/components/schemas/NotificationStatus"
          },
          "notification_event" : {
            "$ref" : "#/components/schemas/NotificationEvent"
          },
          "notification_account_id" : {
            "title" : "Notification Account ID",
            "type" : "string",
            "description" : "Notification account ID.",
            "example" : "NOTIFICATION_ACCOUNT_ID",
            "deprecated" : true
          },
          "notification_item_id" : {
            "title" : "Notification Item ID",
            "type" : "string",
            "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
            "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
          },
          "notification_note" : {
            "title" : "Notification Note",
            "type" : "string",
            "description" : "Notification note.",
            "example" : "New summer pricing added",
            "deprecated" : true
          },
          "notification_created" : {
            "title" : "Notification Created",
            "type" : "string",
            "description" : "Date of creation.",
            "format" : "date-time",
            "readOnly" : true,
            "deprecated" : true
          }
        },
        "description" : "Webhook notification."
      },
      "NotificationStatus" : {
        "title" : "Notification Status",
        "type" : "string",
        "description" : "Status of the notification.\n\nNotification Status:\n\n  * `DELIVERY_SUCCESS` - Notification email has been successfully sent or the webhook responded with a valid HTTP 200 code.\n  * `DELIVERY_FAILED` - Notification email failed or the webhook did not respond with a valid HTTP 200 code within 7 days. \n  * `DELIVERY_PENDING` - Notification email is scheduled to be sent or the webhook did not yet respond with a valid HTTP 200 code.",
        "readOnly" : true,
        "example" : "DELIVERY_SUCCESS",
        "deprecated" : true,
        "default" : "DELIVERY_PENDING",
        "enum" : [ "DELIVERY_SUCCESS", "DELIVERY_FAILED", "DELIVERY_PENDING" ]
      }
    },
    "responses" : {
      "NotModified" : {
        "description" : "Not Modified\n\nThe HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a `If-None-Match` or a `If-Modified-Since` header.",
        "headers" : {
          "Last-Modified" : {
            "$ref" : "#/components/headers/Last-Modified"
          }
        }
      },
      "InvalidRequest" : {
        "description" : "Invalid Request\n\nThe HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "INVALID_REQUEST",
              "error_description" : "The request is missing a required parameter, includes an unsupported parameter or parameter value, repeats the same parameter, uses more than one method for including an access token, or is otherwise malformed.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2",
              "errors" : [ "The data.reservation.reservation_distributor_id must be a string.", "The data.reservation.reservation_details.booking_travel_date must be a [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date time format.", "The data.order.order_bookings.*.reservation_reference field is required when data.order.order_bookings.*.booking_option_type is CONFIRM_RESERVATION." ]
            }
          }
        }
      },
      "AuthenticationFailed" : {
        "description" : "Authentication Failed\n\nThe access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
        "headers" : {
          "WWW-Authenticate" : {
            "description" : "Defines the authentication method that should be used to gain access to a resource.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string",
              "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "invalid_token",
              "error_description" : "The access token provided is expired, revoked, malformed, or invalid for other reasons. The resource SHOULD respond with the HTTP 401 (Unauthorized) status code.  The client MAY request a new access token and retry the protected resource request.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
            }
          }
        }
      },
      "PaymentRequired" : {
        "description" : "Payment Required\n\nThe current payment state is invalid or the credit limit has been reached.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "PAYMENT_REQUIRED",
              "error_description" : "The provided payment details are invalid.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
            }
          }
        }
      },
      "Forbidden" : {
        "description" : "Forbidden\n\nThe request requires higher privileges than provided by the access token. The resource server SHOULD respond with the HTTP 403 (Forbidden) status code and MAY include the `scope` attribute with the scope necessary to access the protected resource.",
        "headers" : {
          "WWW-Authenticate" : {
            "description" : "Defines the authentication method that should be used to gain access to a resource.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string",
              "example" : "Bearer realm=\"{scope}\",error=\"invalid_token\",error_description=\"The access token expired\""
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "insufficient_scope",
              "error_description" : "The request requires higher privileges than provided by the access token.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "Not Found\n\nThe HTTP 404 Not Found client error response code indicates that the server can't find the requested resource.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "NOT_FOUND",
              "error_description" : "The requested resource could not be found but may be available in the future. Subsequent requests by the client are permissible.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
            }
          }
        }
      },
      "MethodNotAllowed" : {
        "description" : "Method Not Allowed\n\nThe HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\n\nA request method is not supported for the requested\n      resource; for example, a GET request on a form that\n      requires data to be presented via POST, or a PUT request\n      on a read-only resource.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "METHOD_NOT_ALLOWED",
              "error_description" : "The request method is not supported for the requested resource.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
            }
          }
        }
      },
      "NotAcceptable" : {
        "description" : "Not Acceptable\n\nThe HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "NOT_ACCEPTABLE",
              "error_description" : "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
            }
          }
        }
      },
      "Conflict" : {
        "description" : "Conflict\n\nThe HTTP 409 Conflict response status code indicates a request conflict with current state of the server.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when trying to pay an order which is already cancelled on the server, resulting in a version control conflict.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "CONFLICT",
              "error_description" : "Indicates that the request could not be processed because of conflict in the current state of the resource.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
            }
          }
        }
      },
      "UnprocessableEntity" : {
        "description" : "Unprocessable Entity\n\nThe HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "UNPROCESSABLE_ENTITY",
              "error_description" : "The request was well-formed but was unable to be followed due to semantic errors.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
            }
          }
        }
      },
      "LimitReached" : {
        "description" : "Too Many Requests\n\nThe HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\").",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "LIMIT_REACHED",
              "error_description" : "The user has sent too many requests in a given amount of time.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
            }
          }
        }
      },
      "InternalServerError" : {
        "description" : "Internal Server Error\n\nThe HyperText Transfer Protocol (HTTP) 500 Internal Server Error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "INTERNAL_SERVER_ERROR",
              "error_description" : "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-2"
            }
          }
        }
      },
      "NotImplemented" : {
        "description" : "Not Implemented\n\nThe HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\n\nThe server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API).",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "NOT_IMPLEMENTED",
              "error_description" : "The server either does not recognize the request method, or it lacks the ability to fulfil the request.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
            }
          }
        }
      },
      "BadGateway" : {
        "description" : "Bad Gateway\n\nThe HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\n\nThe HTTP 502 Bad Gateway error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "BAD_GATEWAY",
              "error_description" : "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
            }
          }
        }
      },
      "ServiceUnavailable" : {
        "description" : "Service Unavailable\n\nThe HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\n\nThe HTTP 503 Service Unavailable error is exclusively returned in case of problems during internal communication.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "SERVICE_UNAVAILABLE",
              "error_description" : "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
            }
          }
        }
      },
      "GatewayTimeout" : {
        "description" : "Gateway Timeout\n\nThe HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\n\nThe HTTP 504 Gateway Timeout error is exclusively returned in case of problems during communication with the supplier or third-party system. ",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorModel"
            },
            "example" : {
              "error" : "GATEWAY_TIMEOUT",
              "error_description" : "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
              "error_uri" : "https://support.prioticket.com/docs/prioticket-distributor-booking-api-v3-0"
            }
          }
        }
      },
      "CallbackAccepted" : {
        "description" : "Your server returns this code if it accepts the callback. Returning a successful 200 code is required.\n\nIf we don't receive the response message within 10 seconds, all notifications to this endpoint will be queued.\n\nWe'll then retry sending the notification until it is accepted. Once accepted, you'll also receive all the queued notifications.\n\nRetry attempts happen regularly for up to 7 days, at increasing time intervals:\n- 2 minutes\n- 5 minutes\n- 10 minutes\n- 15 minutes\n- 30 minutes\n- 1 hour\n- 2 hours\n- 4 hours\n\n\nAfter that, retries happen every 8 hours for the following 7 days."
      }
    },
    "parameters" : {
      "DistributorID" : {
        "name" : "distributor_id",
        "in" : "query",
        "description" : "Unique identifier for distributor assigned by Prio.",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "example" : "501"
        },
        "example" : "501"
      },
      "DistributorIDOptional" : {
        "name" : "distributor_id",
        "in" : "query",
        "description" : "[FILTER] on `distributor_id`.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "example" : "501"
        },
        "example" : "501"
      },
      "ProductID" : {
        "name" : "product_id",
        "in" : "query",
        "description" : "[FILTER] on `product_id`.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "example" : "PRODUCT_ID_123"
        },
        "example" : "PRODUCT_ID_123"
      },
      "ItemsPerPage" : {
        "name" : "items_per_page",
        "in" : "query",
        "description" : "[PAGING] Items Per Page - Allows user's to configure the `items_per_page` value. For example, to load 100 items per page, the developer may point the user to a url with the query string ?items_per_page=100. This parameter is mainly usefull to manage response times, higher values result in longer response times and therefore it is recommended to keep this value as low as possible. We do allow to adjust this value so it can be used to batch/cache/update inventory at once.\n\nClients should anticipate that the value of this parameter may not be honored by the API, and should rely exclusively on the contents of the `items_per_page` response element in calculating actual page size.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "maximum" : 500,
          "minimum" : 1,
          "type" : "integer",
          "example" : 5,
          "default" : 10
        },
        "example" : 5
      },
      "StartIndex" : {
        "name" : "start_index",
        "in" : "query",
        "description" : "[PAGING] Index-based paging - Allows user's to jump directly to a specific item position within a list of items. For example, to load 10 items starting at item 200, the developer may point the user to a url with the query string ?start_index=200.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "maximum" : 10000,
          "minimum" : 1,
          "type" : "integer",
          "example" : 1,
          "default" : 1
        },
        "example" : 1
      },
      "Page" : {
        "name" : "page",
        "in" : "query",
        "description" : "[PAGING] Page-based paging - Allows user's to jump directly to a specific page within the items. This is similar to index-based paging, but saves the developer the extra step of having to calculate the item index for a new page of items. For example, rather than jump to item number 200, the developer could jump to page 20. The urls during page-based paging could use the query string ?page=1 or ?page=20. The `page_index` and `total_pages` properties are used for this style of paging.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "minimum" : 1,
          "type" : "integer",
          "example" : 1,
          "default" : 1
        },
        "example" : 1
      },
      "Cache" : {
        "name" : "cache",
        "in" : "query",
        "description" : "[CACHE] Whether the results should be loaded from the caching server. This will significantly improve performance and disabling this functionality is not recommended.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "title" : "Cache",
          "type" : "boolean",
          "example" : true,
          "default" : true
        },
        "example" : true
      },
      "If-Modified-Since" : {
        "name" : "If-Modified-Since",
        "in" : "header",
        "description" : "[CACHE] The `If-Modified-Since` request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been modified after the given date. \nIf the resource has not been modified since, the response will be a 304 without any body; the `Last-Modified` response header of a previous request will contain the date of last modification.\n\nNote that if a single resource has changed, all records matching your request will be returned, not just those changed after the given date. This provides you with an efficient caching method.",
        "required" : false,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "title" : "If-Modified-Since",
          "type" : "string",
          "example" : "Wed, 21 Jan 2022 07:28:00 GMT"
        },
        "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
      },
      "Webhook-Identifier" : {
        "name" : "Webhook-Identifier",
        "in" : "header",
        "description" : "Unique webhook identifier that triggered this notification.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "title" : "Webhook ID",
          "type" : "string",
          "format" : "uuid",
          "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
        },
        "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
      },
      "Notification-Identifier" : {
        "name" : "Notification-Identifier",
        "in" : "header",
        "description" : "Unique notification ID.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "title" : "Notification ID",
          "type" : "string",
          "format" : "uuid",
          "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
        },
        "example" : "7a1d8c90-e151-11ea-9469-e52f164c2f27"
      },
      "Notification-Event" : {
        "name" : "Notification-Event",
        "in" : "header",
        "description" : "Type of notification.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "$ref" : "#/components/schemas/NotificationEvent"
        },
        "example" : "PRODUCT_CREATE"
      },
      "Notification-Account-Identifier" : {
        "name" : "Notification-Account-Identifier",
        "in" : "header",
        "description" : "Identifier of the account related to this event.",
        "required" : true,
        "deprecated" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "title" : "Notification Account Identifier.",
          "type" : "string",
          "readOnly" : true,
          "example" : "NOTIFICATION_ACCOUNT_ID",
          "deprecated" : true
        },
        "example" : "NOTIFICATION_ACCOUNT_ID"
      },
      "Notification-Item-Identifier" : {
        "name" : "Notification-Item-Identifier",
        "in" : "header",
        "description" : "Identifier of the item related to this event.",
        "required" : true,
        "deprecated" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "title" : "Notification Item Identifier",
          "type" : "string",
          "description" : "Identifier of the item related to this event.\n\nItem Types:\n\n  * Product ID.\n  * Availability ID.\n  * Payment ID.\n  * Order ID.\n  * Contact ID.",
          "readOnly" : true,
          "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
        },
        "example" : "PRODUCT_ID/PAYMENT_ID/ORDER_REFERENCE"
      }
    },
    "headers" : {
      "Idempotency-Key" : {
        "description" : "The Prio API supports [idempotency](https://tools.ietf.org/html/rfc7231#section-4.2.2), allowing you to retry a request multiple times while only performing the action once. This helps avoid unwanted duplication in case of failures and retries. For example, in the case of a timeout error, it is possible to safely retry sending the same API Create Order call multiple times with the guarantee that the order will only be created once.",
        "deprecated" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "maxLength" : 64,
          "minLength" : 16,
          "type" : "string",
          "deprecated" : true
        }
      },
      "App-Name" : {
        "description" : "Name of your application.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "Prio Point-of-Sale"
        }
      },
      "App-Version" : {
        "description" : "Version of your application.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "1.0.2"
        }
      },
      "Date" : {
        "description" : "The Date general HTTP header contains the date and time at which the message was originated.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "Wed, 21 Oct 2015 07:28:00 GMT"
        }
      },
      "Content-Type" : {
        "description" : "The Content-Type entity header is used to indicate the media type of the resource.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "application/json"
        }
      },
      "Cache-Control" : {
        "description" : "Specifies the maximum amount of time a resource will be considered fresh. Contrary to Expires, this directive is relative to the time of the request.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "max-age=3600"
        }
      },
      "Last-Modified" : {
        "description" : "The Last-Modified response HTTP header contains the date and time at which the origin server believes the resource was last modified.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "Wed, 21 Oct 2020 07:28:00 GMT"
        }
      },
      "If-Modified-Since" : {
        "description" : "The If-Modified-Since request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been last modified after the given date. If the request has not been modified since, the response will be a 304 without any body; the Last-Modified response header of a previous request will contain the date of last modification.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "Wed, 21 Oct 2020 07:28:00 GMT"
        }
      },
      "Content-Language" : {
        "description" : "The Content-Language entity header is used to describe the language(s) intended for the audience, so that it allows a user to differentiate according to the users' own preferred language.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "en"
        }
      },
      "Content-Length" : {
        "description" : "The Content-Length entity header indicates the size of the entity-body, in bytes, sent to the recipient.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "Access-Control-Allow-Methods" : {
        "description" : "The Access-Control-Allow-Methods response header specifies the method or methods allowed when accessing the resource in response to a preflight request.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "GET"
        }
      },
      "Content-Security-Policy" : {
        "description" : "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "default-src 'self'"
        }
      },
      "X-XSS-Protection" : {
        "description" : "The HTTP X-XSS-Protection response header is a feature of Internet Explorer, Chrome and Safari that stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "1; mode=block"
        }
      },
      "X-Content-Type-Options" : {
        "description" : "The X-Content-Type-Options response HTTP header is a marker used by the server to indicate that the MIME types advertised in the Content-Type headers should not be changed and be followed.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "nosniff"
        }
      },
      "X-RateLimit-Limit" : {
        "description" : "Request limit per hour.",
        "deprecated" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer",
          "example" : 10000,
          "deprecated" : true
        }
      },
      "X-RateLimit-Remaining" : {
        "description" : "The number of requests left for the time window.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer",
          "example" : 9940
        }
      },
      "X-RateLimit-Reset" : {
        "description" : "The UTC date/time at which the current rate limit window resets.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "Wed, 21 Oct 2020 07:28:00 GMT"
        }
      },
      "Origin" : {
        "description" : "The Origin request header indicates where a fetch originates from.",
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "format" : "URI",
          "example" : "https://api.prioticket.com"
        }
      }
    },
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "description" : "API key to identify the application or the project that's making a call to this API.",
        "name" : "key",
        "in" : "query"
      },
      "basicAuth" : {
        "type" : "http",
        "description" : "Basic Auth used for retrieving a JWT token using the /oauth2/token endpoint (Sample Only) and Webhook security. For the other endpoints, the OAuth2 flow should be used instead.",
        "scheme" : "basic"
      },
      "OAuth2" : {
        "type" : "oauth2",
        "description" : "OAuth2 implementation.",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "https://sandbox-distributor-api.prioticket.com/v3.8/distributor/oauth2/token",
            "scopes" : {
              "https://www.prioticketapis.com/auth/distributor.products.readonly" : "Grants access to products.",
              "https://www.prioticketapis.com/auth/distributor.reservations" : "Grants access to reservations.",
              "https://www.prioticketapis.com/auth/distributor.bookings" : "Grants access to bookings.",
              "https://www.prioticketapis.com/auth/distributor.bookings.details" : "Grants access to booking details.",
              "https://www.prioticketapis.com/auth/distributor/reporting" : "Grants access to reporting."
            },
            "x-google-issuer" : "https://securetoken.google.com/prioticket-93ef3",
            "x-google-jwks_uri" : "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com",
            "x-google-audiences" : "prioticket-93ef3"
          }
        },
        "x-google-issuer" : "https://securetoken.google.com/prioticket-93ef3",
        "x-google-jwks_uri" : "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com",
        "x-google-audiences" : "prioticket-93ef3"
      }
    },
    "links" : {
      "GetReservationByReference" : {
        "operationId" : "getReservation",
        "parameters" : {
          "reservation_reference" : "$response.body#/data/reservation/reservation_reference"
        },
        "description" : "The `reservation_reference` value returned in the response can be used as the `reservation_reference` parameter in `GET /reservations/{reservation_reference}`.\n"
      },
      "DeleteBookingReservationByReference" : {
        "operationId" : "cancelReservation",
        "parameters" : {
          "reservation_reference" : "$response.body#/data/reservation/reservation_details/0/booking_reservation_reference"
        },
        "description" : "The `booking_reservation_reference` value returned in the response can be used as the `booking_reservation_reference` parameter in `DELETE /reservations/{reservation_reference}`.\n"
      }
    }
  }
}